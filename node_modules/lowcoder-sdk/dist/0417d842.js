import { C as r } from "./5230605f.js";
import { Y as e, F as o, a8 as i, G as u, bK as b, bJ as s, S as p, a4 as y, f$ as d, bI as l, g0 as m, f2 as c } from "./c988e26e.js";
import { Button100 as C } from "./975a080d.js";
import "react";
import "./be799735.js";
import "react-dom";
const x = e("table.columnValueTooltip"), B = [{
  label: e("table.primaryButton"),
  value: "primary"
}, {
  label: e("table.defaultButton"),
  value: "default"
}, {
  label: e("text"),
  value: "text"
}], k = function() {
  const a = {
    text: p,
    buttonType: y(B, "primary"),
    onClick: d,
    loading: l,
    disabled: l
  };
  return new r(a, (t) => /* @__PURE__ */ o(() => {
    const n = m(c);
    return /* @__PURE__ */ o(C, {
      type: t.buttonType,
      onClick: t.onClick,
      loading: t.loading,
      disabled: t.disabled,
      $buttonStyle: t.buttonType === "primary" ? n : void 0,
      style: {
        margin: 0
      },
      children: t.text ? t.text : " "
    });
  }, {}), (t) => t.text.value).setPropertyViewFn((t) => /* @__PURE__ */ i(u, {
    children: [t.text.propertyView({
      label: e("table.columnValue"),
      tooltip: x
    }), t.buttonType.propertyView({
      label: e("table.type"),
      radioButton: !0
    }), b(t), s(t), t.onClick.propertyView({
      label: e("table.action"),
      placement: "table"
    })]
  })).build();
}();
export {
  k as ButtonComp,
  B as ButtonTypeOptions,
  x as ColumnValueTooltip
};
