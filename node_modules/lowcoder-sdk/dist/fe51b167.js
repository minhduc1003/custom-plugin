import { cM as s, O as m, U as u, a8 as t, bU as n, F as i, G as c, a9 as d, aa as y, Y as a, ac as p, ae as r, bL as f } from "./c988e26e.js";
import "react";
import { formDataChildren as v, FormDataPropertyView as x } from "./85e61f03.js";
import { SliderChildren as S, SliderWrapper as w, SliderStyled as b, SliderPropertyView as C } from "./a789fa2f.js";
import "react-dom";
const V = function() {
  const o = {
    ...S,
    value: s("value", 60),
    vertical: m,
    ...v
  };
  return new u(o, (e) => e.label({
    style: e.style,
    labelStyle: e.labelStyle,
    inputFieldStyle: e.inputFieldStyle,
    animationStyle: e.animationStyle,
    children: /* @__PURE__ */ t(w, {
      vertical: e.vertical,
      onMouseDown: (l) => (l.stopPropagation(), !1),
      children: [n(e.prefixIcon) && e.prefixIcon, /* @__PURE__ */ i(b, {
        ...e,
        value: e.value.value,
        $style: e.inputFieldStyle,
        style: {
          margin: 0
        },
        vertical: e.vertical || !1,
        onChange: (l) => {
          e.value.onChange(l), e.onEvent("change");
        }
      }), n(e.suffixIcon) && e.suffixIcon]
    })
  })).setPropertyViewFn((e) => /* @__PURE__ */ t(c, {
    children: [/* @__PURE__ */ t(d, {
      name: y.basic,
      children: [e.value.propertyView({
        label: a("prop.defaultValue")
      }), e.max.propertyView({
        label: a("prop.maximum")
      }), e.min.propertyView({
        label: a("prop.minimum")
      }), e.step.propertyView({
        label: a("slider.step"),
        tooltip: a("slider.stepTooltip")
      }), e.vertical.propertyView({
        label: a("slider.vertical")
      })]
    }), /* @__PURE__ */ i(x, {
      ...e
    }), /* @__PURE__ */ i(C, {
      ...e
    })]
  })).build();
}(), M = p(V, [new r("value", a("export.sliderValueDesc")), new r("max", a("export.sliderMaxValueDesc")), new r("min", a("export.sliderMinValueDesc")), ...f]);
export {
  M as SliderComp
};
