import { F as o, g0 as I, f2 as g, aj as w, a8 as c, gJ as f, G as h, Y as i, a4 as C, w as v, S, L as m, a7 as V, al as B } from "./c988e26e.js";
import { C as T } from "./5230605f.js";
import { ButtonTypeOptions as k } from "./0417d842.js";
import { Button100 as D } from "./975a080d.js";
import "react";
import "react-dom";
import "./be799735.js";
const j = {
  buttonType: C(k, "primary"),
  label: v(S, "Menu"),
  prefixIcon: m,
  suffixIcon: m,
  options: V
}, E = (t) => t.label, G = function() {
  return new T(j, (t) => {
    var s, p;
    const b = t.options.findIndex((e) => {
      var n;
      return (n = e.prefixIcon) == null ? void 0 : n.props.value;
    }) > -1, l = t.options.filter((e) => !e.hidden).map((e, n) => ({
      title: e.label,
      label: e.label,
      key: e.label + " - " + n,
      disabled: e.disabled,
      icon: b && /* @__PURE__ */ o("span", {
        children: e.prefixIcon
      }),
      onEvent: e.onEvent
    })), a = (s = t.prefixIcon) == null ? void 0 : s.props.value, r = (p = t.suffixIcon) == null ? void 0 : p.props.value, d = I(g), x = /* @__PURE__ */ o(B, {
      items: l,
      onClick: ({
        key: e
      }) => {
        var n, u;
        (u = (n = l.find((y) => y.key === e)) == null ? void 0 : n.onEvent) == null || u.call(n, "click");
      }
    });
    return /* @__PURE__ */ o(w, {
      trigger: ["click"],
      placement: "bottomRight",
      menu: {
        items: l
      },
      dropdownRender: () => x,
      children: /* @__PURE__ */ c(D, {
        type: t.buttonType,
        style: {
          display: "flex",
          alignItems: "center",
          gap: "0",
          minWidth: "30px",
          width: "auto"
        },
        $buttonStyle: t.buttonType === "primary" ? d : void 0,
        children: [
          a && /* @__PURE__ */ o(f, {
            style: {
              margin: "0px",
              marginRight: t.label || r ? "3px" : "0x"
            },
            children: t.prefixIcon
          }),
          t.label || (a || r ? void 0 : " "),
          r && /* @__PURE__ */ o(f, {
            style: {
              margin: "0px",
              marginLeft: t.label || a ? "3px" : "0x"
            },
            children: t.suffixIcon
          })
        ]
      })
    });
  }, (t) => t.label.value, E).setPropertyViewFn((t) => /* @__PURE__ */ c(h, {
    children: [t.buttonType.propertyView({
      label: i("table.type"),
      radioButton: !0
    }), t.label.propertyView({
      label: i("text")
    }), t.prefixIcon.propertyView({
      label: i("button.prefixIcon")
    }), t.suffixIcon.propertyView({
      label: i("button.suffixIcon")
    }), t.options.propertyView({
      title: i("optionsControl.optionList")
    })]
  })).build();
}();
export {
  G as ColumnDropdownComp
};
