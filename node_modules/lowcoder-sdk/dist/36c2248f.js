import { Y as o, a5 as p, P as u, bI as y, cZ as m, c_ as c, Z as n, c6 as S, c7 as b, a4 as V, N as h, fj as v, az as C, a8 as i, G as d, a9 as a, aa as l, ah as r, F as e, bJ as w, ab as f } from "./c988e26e.js";
import { useContext as s } from "react";
import { SelectInputValidationChildren as g, SelectInputValidationSection as P } from "./d3b0afba.js";
import { formDataChildren as x, FormDataPropertyView as F } from "./85e61f03.js";
import "react-dom";
const R = [{
  label: o("radio.horizontal"),
  value: "horizontal"
}, {
  label: o("radio.vertical"),
  value: "vertical"
}, {
  label: o("radio.autoColumns"),
  value: "auto_columns"
}], j = {
  defaultValue: p("value"),
  value: p("value"),
  label: u,
  disabled: y,
  onEvent: m,
  options: c,
  style: n(S, "style"),
  labelStyle: n(b, "labelStyle"),
  layout: V(R, "horizontal"),
  viewRef: h,
  inputFieldStyle: n(v, "inputFieldStyle"),
  animationStyle: n(C, "animationStyle"),
  ...g,
  ...x
}, D = (t) => /* @__PURE__ */ i(d, {
  children: [/* @__PURE__ */ i(a, {
    name: l.basic,
    children: [t.options.propertyView({}), t.defaultValue.propertyView({
      label: o("prop.defaultValue")
    })]
  }), ["logic", "both"].includes(s(r).editorModeStatus) && /* @__PURE__ */ i(d, {
    children: [/* @__PURE__ */ e(P, {
      ...t
    }), /* @__PURE__ */ e(F, {
      ...t
    }), /* @__PURE__ */ i(a, {
      name: l.interaction,
      children: [t.onEvent.getPropertyView(), w(t), f(t)]
    })]
  }), ["layout", "both"].includes(s(r).editorModeStatus) && /* @__PURE__ */ e(a, {
    name: l.layout,
    children: t.layout.propertyView({
      label: o("radio.options"),
      tooltip: /* @__PURE__ */ i("div", {
        style: {
          display: "flex",
          flexDirection: "column",
          gap: "8px"
        },
        children: [/* @__PURE__ */ e("div", {
          children: o("radio.horizontalTooltip")
        }), /* @__PURE__ */ e("div", {
          children: o("radio.verticalTooltip")
        }), /* @__PURE__ */ e("div", {
          children: o("radio.autoColumnsTooltip")
        })]
      })
    })
  }), ["layout", "both"].includes(s(r).editorModeStatus) && t.label.getPropertyView(), ["layout", "both"].includes(s(r).editorModeStatus) && /* @__PURE__ */ i(d, {
    children: [/* @__PURE__ */ e(a, {
      name: l.style,
      children: t.style.getPropertyView()
    }), /* @__PURE__ */ e(a, {
      name: l.labelStyle,
      children: t.labelStyle.getPropertyView()
    }), /* @__PURE__ */ e(a, {
      name: l.inputFieldStyle,
      children: t.inputFieldStyle.getPropertyView()
    }), /* @__PURE__ */ e(a, {
      name: l.animationStyle,
      hasTooltip: !0,
      children: t.animationStyle.getPropertyView()
    })]
  })]
});
export {
  j as RadioChildrenMap,
  R as RadioLayoutOptions,
  D as RadioPropertyView
};
