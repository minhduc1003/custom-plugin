import { F as t, bW as u, a8 as l, G as c, a9 as n, aa as r, Y as d, ah as i, bJ as y, ab as h, ac as w, ad as C, bX as b, bI as f, w as P, i1 as x, B as S } from "./c988e26e.js";
import { useContext as s } from "react";
import { ShapeTriContainer as g } from "./2a50c1a7.js";
import { ContainerCompBuilder as v } from "./63085759.js";
import "react-dom";
import "./ef17c1a9.js";
import "./06b2ca8b.js";
const V = function() {
  const o = {
    disabled: f,
    icon: P(x, "")
  };
  return new v(o, (e, a) => /* @__PURE__ */ t(u.Provider, {
    value: e.disabled,
    children: /* @__PURE__ */ t(g, {
      ...e
    })
  })).setPropertyViewFn((e) => /* @__PURE__ */ l(c, {
    children: [/* @__PURE__ */ t(n, {
      name: r.basic,
      children: e.icon.propertyView({
        label: d("iconComp.icon"),
        IconType: "All"
      })
    }), (s(i).editorModeStatus === "logic" || s(i).editorModeStatus === "both") && /* @__PURE__ */ l(n, {
      name: r.interaction,
      children: [y(e), h(e)]
    }), (s(i).editorModeStatus === "layout" || s(i).editorModeStatus === "both") && /* @__PURE__ */ l(c, {
      children: [/* @__PURE__ */ t(n, {
        name: r.layout,
        children: e.container.getPropertyView()
      }), /* @__PURE__ */ t(n, {
        name: r.style,
        children: e.container.stylePropertyView()
      }), e.container.children.showBody.getView() && /* @__PURE__ */ t(n, {
        name: "Body Style",
        children: e.container.bodyStylePropertyView()
      })]
    })]
  })).build();
}();
function B(o) {
  let e = S(o);
  if (e.value) {
    const a = e.value.container;
    if (a && (a.hasOwnProperty("layout") || a.hasOwnProperty("items"))) {
      const m = e.value.autoHeight, p = e.value.scrollbars;
      return {
        ...e,
        value: {
          container: {
            showHeader: !0,
            body: {
              0: {
                view: a
              }
            },
            showBody: !0,
            showFooter: !1,
            autoHeight: m,
            scrollbars: p
          }
        }
      };
    }
  }
  return e;
}
class T extends V {
  constructor(e) {
    super(B(e));
  }
}
const j = w(T, [C]);
function E(o, e) {
  return {
    container: {
      header: b([{
        item: {
          compType: "text",
          name: e.genItemName("containerTitle"),
          comp: {
            text: "### " + d("container.title")
          }
        },
        layoutItem: {
          i: "",
          h: 5,
          w: 24,
          x: 0,
          y: 0
        }
      }])
    }
  };
}
export {
  V as ContainerBaseComp,
  j as ShapeComp,
  E as defaultContainerData
};
