import { X as S, Y as o, M as I, S as l, w as d, L as M, bI as f, bH as z, a8 as y, G as g, bJ as D, ab as x, ar as k, O as s, a4 as T, hw as A, Z as m, hx as F, hy as p, az as O, F as a, aB as H, hz as V, ah as $, a9 as i, aa as n, ac as P, ad as B } from "./c988e26e.js";
import { useRef as W, useState as C, useEffect as R, useContext as b } from "react";
import { TriContainer as U } from "./44a79fed.js";
import { ContainerCompBuilder as L } from "./63085759.js";
import "react-dom";
import "./ef17c1a9.js";
import "./06b2ca8b.js";
const {
  Meta: _
} = V, N = S.div`
  height: 100%;
  width: 100%;
  .ant-card-small >.ant-card-head {
    background-color: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.background;
}} !important;
    border: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.border;
}};
    border-style: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.borderStyle;
}};
    border-width: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.borderWidth;
}};
    border-radius: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.radius;
}};
    font-size: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.textSize;
}};
    font-style: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.fontStyle;
}};
    font-family: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.fontFamily;
}};
    font-weight: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.textWeight;
}};
    text-transform: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.textTransform;
}};
    text-decoration: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.textDecoration;
}};
    color: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.text;
}};
    rotate: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.rotation;
}};
    margin: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.margin;
}};
    padding: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.padding;
}};
  }
  .ant-card-head-title{
    font-size: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.textSize;
}};
    font-family: ${(t) => {
  var e;
  return (e = t.$headerStyle) == null ? void 0 : e.fontFamily;
}};
  }
  .ant-card .ant-card-actions {
    border-top: 1px solid ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.border;
}};
  }
  .ant-card .ant-card-actions>li:not(:last-child) {
    border-inline-end: 1px solid ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.border;
}};
  }
  .ant-card .ant-card-actions {
    background-color: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.background;
}};
  }
  .ant-card .ant-card-body {
   background-color: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.background;
}} !important;
    border: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.border;
}};
    border-style: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.borderStyle;
}};
    border-width: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.borderWidth;
}};
    border-radius: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.radius;
}};
    rotate: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.rotation;
}};
    margin: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.margin;
}};
    padding: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.padding;
}};
  }
  .ant-card {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    margin: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.margin;
}};
    padding: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.padding;
}};
    background-color: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.background;
}};
    border: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.border;
}};
    rotate: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.rotation;
}};
    border-style: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.borderStyle;
}};
    border-radius: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.radius;
}};
    border-width: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.borderWidth;
}};
    box-shadow: ${(t) => {
  var e, c;
  return `${(e = t.$style) == null ? void 0 : e.boxShadow} ${(c = t.$style) == null ? void 0 : c.boxShadowColor}`;
}};
    ${(t) => t.$animationStyle}
  }
  .ant-card-body {
    display: ${(t) => t.$showMate ? "" : "none"};
    height: ${(t) => t.$cardType == "custom" ? "100%" : "auto"};
  }
  .ant-card-body .ant-card-meta .ant-card-meta-title{
    color: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.text;
}} !important;
    font-size: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.textSize;
}};
    font-style: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.fontStyle;
}};
    font-family: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.fontFamily;
}};
    font-weight: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.textWeight;
}};
    text-transform: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.textTransform;
}};
    text-decoration: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.textDecoration;
}};
  }
  .ant-card-body .ant-card-meta .ant-card-meta-description{
    color: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.text;
}} !important;
    font-size: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.textSize;
}};
    font-style: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.fontStyle;
}};
    font-family: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.fontFamily;
}};
    font-weight: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.textWeight;
}};
    text-transform: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.textTransform;
}};
    text-decoration: ${(t) => {
  var e;
  return (e = t.$bodyStyle) == null ? void 0 : e.textDecoration;
}};
  }
`, j = S.div`
  height: 100%;
  width: 100%;
`, G = S.div`
  pointer-events: ${(t) => t.disabled ? "none" : ""};
  svg {
    color: ${(t) => {
  var e;
  return t.disabled ? "#d9d9d9" : (e = t.$style) == null ? void 0 : e.IconColor;
}};
  }
  &:hover {
    svg {
      color: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.activateColor;
}};
    }
}
`, Y = [{
  label: o("card.common"),
  value: "common"
}, {
  label: o("card.custom"),
  value: "custom"
}], J = [{
  label: o("card.default"),
  value: "default"
}, {
  label: o("card.small"),
  value: "small"
}], X = new I({
  label: l,
  icon: d(M, "/icon:antd/settingoutlined"),
  disabled: f,
  hidden: f,
  onEvent: z
}, (t) => t).setPropertyViewFn((t) => /* @__PURE__ */ y(g, {
  children: [t.icon.propertyView({
    label: o("button.icon")
  }), D(t), x(t), t.onEvent.getPropertyView()]
})).build(), Z = k(X, {
  initOptions: [{
    label: o("optionsControl.optionI", {
      i: 1
    }),
    icon: "/icon:antd/settingoutlined"
  }, {
    label: o("optionsControl.optionI", {
      i: 2
    }),
    icon: "/icon:antd/editoutlined"
  }, {
    label: o("optionsControl.optionI", {
      i: 3
    }),
    icon: "/icon:antd/ellipsisoutlined"
  }]
}), q = function() {
  const t = {
    showTitle: s.DEFAULT_TRUE,
    title: d(l, o("card.title")),
    size: T(J, "small"),
    extraTitle: d(l, o("card.more")),
    cardType: T(Y, "common"),
    CoverImg: s.DEFAULT_TRUE,
    imgSrc: d(l, "https://lowcoder.cloud/images/e0a89736c6be4393893d2981ac1fd753.png"),
    imgHeight: d(l, "auto"),
    showMeta: s.DEFAULT_TRUE,
    metaTitle: d(l, o("card.metaTitle")),
    metaDesc: d(l, o("card.metaDesc")),
    hoverable: s.DEFAULT_TRUE,
    showActionIcon: s.DEFAULT_TRUE,
    actionOptions: Z,
    onEvent: A,
    style: m(F, "style"),
    headerStyle: m(p, "headerStyle"),
    bodyStyle: m(p, "bodyStyle"),
    animationStyle: m(O, "animationStyle")
  };
  return new L(t, (e) => {
    e.container.showHeader = !1, e.container.style = Object.assign(e.container.style, {
      CONTAINER_BODY_PADDING: e.style.containerBodyPadding,
      border: "#00000000",
      background: e.style.background
    });
    const c = W(null), [h, v] = C(0), [w, E] = C(0);
    R(() => {
      w && h && u();
    }, [w, h]);
    const u = () => {
      const r = c.current;
      v((r == null ? void 0 : r.clientWidth) ?? 0), E((r == null ? void 0 : r.clientHeight) ?? 0);
    };
    return /* @__PURE__ */ a(H, {
      onResize: u,
      children: /* @__PURE__ */ a(N, {
        ref: c,
        $style: e.style,
        $animationStyle: e.animationStyle,
        $headerStyle: e.headerStyle,
        $bodyStyle: e.bodyStyle,
        $showMate: e.showMeta || e.cardType == "custom",
        $cardType: e.cardType,
        onMouseEnter: () => e.onEvent("focus"),
        onMouseLeave: () => e.onEvent("blur"),
        onClick: () => e.onEvent("click"),
        children: /* @__PURE__ */ y(V, {
          style: {
            width: h,
            height: "100%"
          },
          size: e.size,
          hoverable: e.hoverable,
          title: e.showTitle && e.title,
          extra: e.showTitle && /* @__PURE__ */ a("a", {
            href: "#",
            onClick: () => e.onEvent("clickExtra"),
            children: e.extraTitle
          }),
          cover: e.cardType == "common" && e.CoverImg && /* @__PURE__ */ a("img", {
            src: e.imgSrc,
            height: e.imgHeight
          }),
          actions: e.cardType == "common" && e.showActionIcon ? e.actionOptions.filter((r) => !r.hidden).map((r) => /* @__PURE__ */ a(G, {
            onClick: () => r.onEvent("click"),
            disabled: r.disabled,
            $style: e.style,
            children: r.icon
          })) : [],
          children: [e.cardType == "common" && e.showMeta && /* @__PURE__ */ a(_, {
            title: e.metaTitle,
            description: e.metaDesc
          }), e.cardType == "custom" && /* @__PURE__ */ a(j, {
            children: /* @__PURE__ */ a(U, {
              ...e
            })
          })]
        })
      })
    });
  }).setPropertyViewFn((e) => /* @__PURE__ */ y(g, {
    children: [(b($).editorModeStatus === "logic" || b($).editorModeStatus === "both") && /* @__PURE__ */ y(g, {
      children: [/* @__PURE__ */ y(i, {
        name: n.basic,
        children: [e.size.propertyView({
          label: o("card.titleSize"),
          radioButton: !0
        }), e.showTitle.propertyView({
          label: o("card.showTitle")
        }), e.showTitle.getView() && e.title.propertyView({
          label: o("card.title")
        }), e.showTitle.getView() && e.extraTitle.propertyView({
          label: o("card.extraTitle")
        }), e.cardType.getView() == "common" && e.CoverImg.propertyView({
          label: o("card.CoverImg")
        }), e.cardType.getView() == "common" && e.CoverImg.getView() && e.imgSrc.propertyView({
          label: o("card.imgSrc")
        }), e.cardType.getView() == "common" && e.CoverImg.getView() && e.imgHeight.propertyView({
          label: o("card.imgHeight")
        }), e.cardType.getView() == "common" && e.showMeta.propertyView({
          label: o("card.showMeta")
        }), e.cardType.getView() == "common" && e.showMeta.getView() && e.metaTitle.propertyView({
          label: o("card.metaTitle")
        }), e.cardType.getView() == "common" && e.showMeta.getView() && e.metaDesc.propertyView({
          label: o("card.metaDesc")
        }), e.cardType.getView() == "common" && e.showActionIcon.propertyView({
          label: o("card.showActionIcon")
        }), e.cardType.getView() == "common" && e.showActionIcon.getView() && e.actionOptions.propertyView({
          title: o("card.actionOptions")
        })]
      }), /* @__PURE__ */ y(i, {
        name: n.interaction,
        children: [x(e), e.onEvent.getPropertyView()]
      })]
    }), (b($).editorModeStatus === "layout" || b($).editorModeStatus === "both") && /* @__PURE__ */ y(g, {
      children: [/* @__PURE__ */ a(i, {
        name: n.layout,
        children: e.cardType.propertyView({
          label: o("card.cardType"),
          radioButton: !0
        })
      }), /* @__PURE__ */ a(i, {
        name: n.style,
        children: e.style.getPropertyView()
      }), /* @__PURE__ */ a(i, {
        name: n.headerStyle,
        children: e.headerStyle.getPropertyView()
      }), /* @__PURE__ */ a(i, {
        name: n.bodyStyle,
        children: e.bodyStyle.getPropertyView()
      }), /* @__PURE__ */ a(i, {
        name: n.animationStyle,
        hasTooltip: !0,
        children: e.animationStyle.getPropertyView()
      })]
    })]
  })).build();
}(), ie = P(q, [B]);
export {
  ie as CardComp,
  q as ContainerBaseComp
};
