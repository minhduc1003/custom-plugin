import { useContext as b, useState as k, useEffect as I } from "react";
import { Y as i, eG as T, a4 as D, O as E, w as V, S as j, a3 as O, Z as P, eH as S, v as p, U as B, F as o, a8 as c, G as h, a9 as d, aa as m, ah as w, ab as H, ac as F, ae as g, ad as M, ag as G, bV as U, au as f, aw as A, ax as N, eI as R } from "./c988e26e.js";
import { timelineDate as X, TimelineDataTooltip as Y } from "./7d1c8402.js";
import { convertTimeLineData as Z } from "./20782254.js";
import "react-dom";
const $ = [G], q = [{
  label: i("timeLine.left"),
  value: "left"
}, {
  label: i("timeLine.right"),
  value: "right"
}, {
  label: i("timeLine.alternate"),
  value: "alternate"
}], z = {
  value: T(Z, X),
  mode: D(q, "alternate"),
  reverse: E,
  pending: V(j, i("timeLine.defaultPending")),
  onEvent: O($),
  style: P(S, "style"),
  clickedObject: p({
    title: ""
  }),
  clickedIndex: p(0)
}, J = async (e) => {
  if (!e)
    return null;
  try {
    const r = (await import("./c988e26e.js").then((n) => n.Dm))[e];
    return r ? /* @__PURE__ */ o(r, {}) : null;
  } catch (l) {
    return console.error(`Error loading icon ${e}:`, l), null;
  }
}, K = (e) => {
  const {
    value: l,
    dispatch: r,
    style: n,
    mode: Q,
    reverse: W,
    onEvent: y
  } = e, [x, L] = k([]);
  I(() => {
    (async () => {
      const a = await Promise.all(l.map((s) => s.dot ? J(s.dot) : Promise.resolve(null)));
      L(a);
    })();
  }, [l]);
  const u = l.map((t, a) => ({
    key: a,
    color: t == null ? void 0 : t.color,
    dot: x[a] || "",
    label: /* @__PURE__ */ o("span", {
      style: {
        color: (t == null ? void 0 : t.labelColor) || (n == null ? void 0 : n.labelColor)
      },
      children: t == null ? void 0 : t.label
    }),
    children: /* @__PURE__ */ c(h, {
      children: [/* @__PURE__ */ o(U, {
        type: "link",
        onClick: (s) => {
          s.preventDefault(), r(f("clickedObject", t, !1)), r(f("clickedIndex", a, !1)), y("click");
        },
        style: {
          cursor: "pointer",
          color: (t == null ? void 0 : t.titleColor) || (n == null ? void 0 : n.titleColor)
        },
        children: /* @__PURE__ */ o("b", {
          children: t == null ? void 0 : t.title
        })
      }), /* @__PURE__ */ o("p", {
        style: {
          color: (t == null ? void 0 : t.subTitleColor) || (n == null ? void 0 : n.subTitleColor)
        },
        children: t == null ? void 0 : t.subTitle
      })]
    })
  }));
  return /* @__PURE__ */ o("div", {
    style: {
      margin: n.margin ?? "3px",
      padding: n.padding !== "3px" ? n.padding : "20px 10px 0px 10px",
      width: A(n.margin ?? "3px"),
      height: N(n.margin ?? "3px"),
      background: n.background,
      overflow: "auto",
      overflowX: "hidden",
      borderRadius: n.radius
    },
    children: /* @__PURE__ */ o(R, {
      mode: (e == null ? void 0 : e.mode) || "left",
      reverse: e == null ? void 0 : e.reverse,
      pending: (e == null ? void 0 : e.pending) && /* @__PURE__ */ o("span", {
        style: {
          color: n == null ? void 0 : n.titleColor
        },
        children: (e == null ? void 0 : e.pending) || ""
      }),
      items: u
    })
  });
};
let C = function() {
  return new B(z, (e, l) => /* @__PURE__ */ o(K, {
    ...e,
    dispatch: l
  })).setPropertyViewFn((e) => /* @__PURE__ */ c(h, {
    children: [/* @__PURE__ */ o(d, {
      name: m.basic,
      children: e.value.propertyView({
        label: i("timeLine.value"),
        tooltip: Y,
        placeholder: "[]"
      })
    }), ["logic", "both"].includes(b(w).editorModeStatus) && /* @__PURE__ */ c(d, {
      name: m.interaction,
      children: [e.onEvent.getPropertyView(), H(e)]
    }), ["layout", "both"].includes(b(w).editorModeStatus) && /* @__PURE__ */ c(h, {
      children: [/* @__PURE__ */ c(d, {
        name: m.layout,
        children: [e.mode.propertyView({
          label: i("timeLine.mode"),
          tooltip: i("timeLine.modeTooltip")
        }), e.pending.propertyView({
          label: i("timeLine.pending"),
          tooltip: i("timeLine.pendingDescription")
        }), e.reverse.propertyView({
          label: i("timeLine.reverse")
        })]
      }), /* @__PURE__ */ o(d, {
        name: m.style,
        children: e.style.getPropertyView()
      })]
    })]
  })).build();
}();
C = class extends C {
  autoHeight() {
    return !1;
  }
};
const ie = F(C, [new g("value", i("timeLine.valueDesc")), new g("clickedObject", i("timeLine.clickedObjectDesc")), new g("clickedIndex", i("timeLine.clickedIndexDesc")), M]);
export {
  ie as TimeLineComp
};
