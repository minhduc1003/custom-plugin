import { C as i } from "./5230605f.js";
import { ColumnValueTooltip as m } from "./0417d842.js";
import { F as l, a8 as s, G as u, Y as p, ce as c, ca as r, S as e, w as f } from "./c988e26e.js";
import { formatDate as a, DateEdit as h } from "./82a4bca8.js";
import "react";
import "./be799735.js";
import "react-dom";
import "./975a080d.js";
const C = {
  text: e,
  format: f(e, r)
}, o = (t) => t.text, F = function() {
  return new i(C, (t, d) => {
    const n = t.changeValue ?? o(t);
    return a(n, t.format);
  }, (t) => a(t.text.value, t.format.value), o).setEditViewFn((t) => /* @__PURE__ */ l(h, {
    value: t.value,
    onChange: t.onChange,
    onChangeEnd: t.onChangeEnd,
    showTime: !0
  })).setPropertyViewFn((t) => /* @__PURE__ */ s(u, {
    children: [t.text.propertyView({
      label: p("table.columnValue"),
      tooltip: m
    }), c({
      children: t,
      placeholder: r
    })]
  })).build();
}();
export {
  F as DateTimeComp
};
