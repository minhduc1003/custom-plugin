import { dd as p, cY as c, P as S, S as u, bI as m, ej as b, O as s, fh as C, Z as l, c6 as w, c7 as g, N as h, fi as V, d2 as P, az as f, a8 as o, G as d, a9 as t, aa as a, Y as y, en as F, ah as i, bJ as v, ab as E, dD as x, eo as M, F as r } from "./c988e26e.js";
import { useContext as n } from "react";
import { MarginControl as j } from "./33706f61.js";
import { PaddingControl as I } from "./325a473d.js";
import "react-dom";
const L = JSON.stringify(p.cascader, null, " "), R = {
  value: c("value", p.cascaderDefult),
  label: S,
  placeholder: u,
  disabled: m,
  onEvent: b,
  allowClear: s,
  options: C,
  style: l(w, "style"),
  labelStyle: l(g.filter((e) => ["accent", "validate"].includes(e.name) === !1), "labelStyle"),
  showSearch: s.DEFAULT_TRUE,
  viewRef: h,
  margin: j,
  padding: I,
  inputFieldStyle: l(V, "inputFieldStyle"),
  childrenInputFieldStyle: l(P),
  animationStyle: l(f, "animationStyle")
}, T = (e) => /* @__PURE__ */ o(d, {
  children: [/* @__PURE__ */ o(t, {
    name: a.basic,
    children: [e.options.propertyView({
      label: y("cascader.options")
    }), e.value.propertyView({
      label: y("prop.defaultValue")
    }), F(e)]
  }), ["logic", "both"].includes(n(i).editorModeStatus) && /* @__PURE__ */ o(t, {
    name: a.interaction,
    children: [e.onEvent.getPropertyView(), v(e), E(e)]
  }), ["layout", "both"].includes(n(i).editorModeStatus) && e.label.getPropertyView(), ["logic", "both"].includes(n(i).editorModeStatus) && /* @__PURE__ */ o(t, {
    name: a.advanced,
    children: [x(e), M(e)]
  }), ["layout", "both"].includes(n(i).editorModeStatus) && /* @__PURE__ */ o(d, {
    children: [/* @__PURE__ */ r(t, {
      name: a.style,
      children: e.style.getPropertyView()
    }), /* @__PURE__ */ r(t, {
      name: a.labelStyle,
      children: e.labelStyle.getPropertyView()
    }), /* @__PURE__ */ r(t, {
      name: a.inputFieldStyle,
      children: e.inputFieldStyle.getPropertyView()
    }), /* @__PURE__ */ r(t, {
      name: a.childrenInputFieldStyle,
      children: e.childrenInputFieldStyle.getPropertyView()
    }), /* @__PURE__ */ r(t, {
      name: a.animationStyle,
      hasTooltip: !0,
      children: e.animationStyle.getPropertyView()
    })]
  })]
});
export {
  R as CascaderChildren,
  T as CascaderPropertyView,
  L as defaultDataSource
};
