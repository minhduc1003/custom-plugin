import { dQ as k, dR as A, w as a, a2 as V, S as f, aA as N, df as E, O as g, Z as y, dS as F, az as z, dT as P, U as Y, F as p, G as x, dU as U, du as B, dV as h, _ as d, y as H, dW as X, dX as T, dY as W, dZ as M, d_ as O, d$ as Z, e0 as j, ac as v, e1 as S, Y as _, cf as q, ad as G, cg as Q, bX as J, e as K, d as $ } from "./c988e26e.js";
import { PaginationControl as ee } from "./911053df.js";
import { ContextContainerComp as D } from "./f26c56d5.js";
import { ListView as te } from "./842a0c82.js";
import { listPropertyView as ne } from "./dca7e75f.js";
import "react";
import "react-dom";
const ie = {
  noOfRows: k(A),
  // FIXME: migrate "noOfRows" to "data"
  noOfColumns: a(V, 1),
  itemIndexName: a(f, "i"),
  itemDataName: a(f, "currentItem"),
  dynamicHeight: N,
  heightUnitOfRow: a(V, 1),
  container: D,
  autoHeight: N,
  horizontalGridCells: E,
  scrollbars: a(g, !1),
  showBorder: g,
  pagination: a(ee, {
    pageSize: "6"
  }),
  style: y(F, "style"),
  animationStyle: y(z, "animationStyle"),
  horizontal: a(g, !1),
  minHorizontalWidth: a(P, "100px")
}, oe = new Y(ie, () => /* @__PURE__ */ p(x, {})).setPropertyViewFn(() => /* @__PURE__ */ p(x, {})).build();
class ae extends oe {
  getOriginalContainer() {
    return this.children.container.getSelectedComp().getComp();
  }
  realSimpleContainer(e) {
    return this.getOriginalContainer().realSimpleContainer(e);
  }
  getCompTree() {
    return this.getOriginalContainer().getCompTree();
  }
  findContainer(e) {
    return this.getOriginalContainer().findContainer(e);
  }
  getPasteValue(e) {
    return {
      ...this.toJsonValue(),
      container: this.getOriginalContainer().getPasteValue(e)
    };
  }
  autoHeight() {
    return this.children.autoHeight.getView();
  }
  reduce(e) {
    let n = U({
      inEventContext: !0
    }, () => super.reduce(e));
    if (e.type === B.UPDATE_NODES_V2) {
      const {
        itemCount: l
      } = h(n.children.noOfRows.getView()), r = n.children.pagination.getView(), c = r.total || l, s = (r.current - 1) * r.pageSize;
      s >= c && r.current > 1 ? setTimeout(() => n.children.pagination.children.pageNo.dispatchChangeValueAction(1)) : String(s) !== this.children.container.getSelection() && setTimeout(() => n.children.container.dispatch(D.setSelectionAction(String(s))));
    }
    return n;
  }
  /** expose the data from inner comps */
  itemsNode() {
    const {
      itemCount: e
    } = h(this.children.noOfRows.getView()), n = this.children.itemIndexName.getView(), l = this.children.itemDataName.getView(), r = this.children.noOfRows.exposingNode(), c = this.children.container, s = d(d.range(0, e)).toPairs().fromPairs().mapValues((o) => {
      let m = c.getCachedComp(String(o)) ?? c.getOriginalComp();
      const I = H(m.getComp().getCompTree()), w = d(I).mapKeys((i) => i.children.name.getView()).mapValues((i) => i.children.comp.exposingNode()).value(), L = {
        [n]: X(o),
        [l]: T(r, (i) => typeof i == "number" ? {} : i[o])
      }, b = new W(M(w), L);
      return O(this, "exposing_row_" + o, [b, r, w, n, l], (i, C) => i[1] === C[1] && Z(i.slice(2), C.slice(2), 3))[0];
    }).value(), R = T(M(s), (o) => d.range(0, e).map((m) => o[m]));
    return O(this, "exposing_data", [R, s], (o, m) => j(o[1], m[1]))[0];
  }
}
const re = $(ae, (t) => /* @__PURE__ */ p(te, {
  comp: t
})), se = ne("listView");
let u = K(re, (t) => /* @__PURE__ */ p(se, {
  comp: t
}));
u = v(u, [
  new S("items", (t) => ({
    data: t.itemsNode()
  }), (t) => t.data, _("listView.itemsDesc")),
  q({
    name: "data",
    desc: _("listView.dataDesc"),
    depKeys: ["noOfRows"],
    func: (t) => {
      const {
        data: e
      } = h(t.noOfRows);
      return e;
    }
  }),
  new S("pageNo", (t) => ({
    index: t.children.pagination.children.pageNo.exposingNode()
  }), (t) => t.index, "Page Number"),
  G
]);
const we = Q(u, [{
  method: {
    name: "setPage",
    description: "",
    params: [{
      name: "page",
      type: "number"
    }]
  },
  execute: (t, e) => {
    const n = e[0];
    n && n > 0 && t.children.pagination.children.pageNo.dispatchChangeValueAction(n);
  }
}]);
function Ce(t, e) {
  return {
    noOfRows: `[
  {
    "rate": "9.2",
    "title": "The Shawshank Redemption",
    "url": "https://www.imdb.com/title/tt0111161/",
    "cover": "https://m.media-amazon.com/images/M/MV5BMDFkYTc0MGEtZmNhMC00ZDIzLWFmNTEtODM1ZmRlYWMwMWFmXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_UY67_CR0,0,45,67_AL_.jpg"
  },
  {
    "rate": "9.2",
    "title": "The Godfather",
    "url": "https://www.imdb.com/title/tt0068646/",
    "cover": "https://m.media-amazon.com/images/M/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJmNWYtYzZlODY3ZTk3OTFlXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_UY67_CR1,0,45,67_AL_.jpg"
  },
  {
    "rate": "9.0",
    "title": "The Dark Knight",
    "url": "https://www.imdb.com/title/tt0468569/",
    "cover": "https://m.media-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_UY67_CR0,0,45,67_AL_.jpg"
  }
]`,
    container: J([{
      item: {
        compType: "image",
        name: e.genItemName("image"),
        comp: {
          src: "{{currentItem.cover}}",
          autoHeight: "fixed"
        }
      },
      layoutItem: {
        i: "",
        w: 6,
        h: 14,
        x: 0,
        y: 0
      }
    }, {
      item: {
        compType: "link",
        name: e.genItemName("link"),
        comp: {
          text: "{{i+1}}. {{currentItem.title}}",
          onEvent: [{
            name: "click",
            handler: {
              compType: "goToURL",
              comp: {
                url: "{{currentItem.url}}",
                inNewTab: !0
              },
              condition: "",
              slowdown: "debounce",
              delay: ""
            }
          }]
        }
      },
      layoutItem: {
        i: "",
        h: 5,
        w: 17,
        x: 7,
        y: 0
      }
    }, {
      item: {
        compType: "rating",
        name: e.genItemName("rating"),
        comp: {
          defaultValue: "{{currentItem.rate / 2}}",
          max: "5",
          label: {
            text: "",
            width: "33",
            widthUnit: "%",
            position: "row",
            align: "right"
          },
          allowHalf: !0,
          disabled: !0
        }
      },
      layoutItem: {
        i: "",
        h: 5,
        w: 17,
        x: 7,
        y: 9
      }
    }])
  };
}
export {
  we as ListViewComp,
  ae as ListViewImplComp,
  Ce as defaultListViewData
};
