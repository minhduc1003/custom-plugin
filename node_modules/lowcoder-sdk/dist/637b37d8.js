import { cM as m, w as h, a2 as w, P as C, O as v, bI as V, a3 as x, Z as r, c6 as p, az as F, c7 as P, bS as E, cQ as k, U as R, F as a, a8 as i, G as u, a9 as l, aa as n, Y as o, ah as c, bJ as $, ab as H, ac as M, ae as f, bL as O, X as B, ch as N, av as I, cR as L } from "./c988e26e.js";
import { useRef as j, useEffect as b, useContext as d } from "react";
import { formDataChildren as D, FormDataPropertyView as U } from "./85e61f03.js";
import "react-dom";
const z = [N];
function A(t) {
  return t && t.hasOwnProperty("unChecked") ? {
    label: t.label,
    checked: t.checked,
    unchecked: t.unChecked
  } : t;
}
const G = function() {
  const t = {
    defaultValue: m("defaultValue"),
    value: m("value"),
    max: h(w, "5"),
    label: C,
    allowHalf: v,
    disabled: V,
    onEvent: x(z),
    style: r(p, "style"),
    animationStyle: r(F, "animationStyle"),
    labelStyle: r(P.filter((e) => ["accent", "validate"].includes(e.name) === !1), "labelStyle"),
    inputFieldStyle: E(r(k, "inputFieldStyle"), A),
    ...D
  };
  return new R(t, (e) => {
    const y = {
      ...e.defaultValue
    }.value, S = {
      ...e.value
    }.value, s = j(!1);
    return b(() => {
      e.value.onChange(y);
    }, [y]), b(() => {
      s.current && (e.onEvent("change"), s.current = !1);
    }, [S]), e.label({
      style: e.style,
      labelStyle: e.labelStyle,
      inputFieldStyle: e.inputFieldStyle,
      animationStyle: e.animationStyle,
      children: /* @__PURE__ */ a(Q, {
        count: e.max,
        value: e.value.value,
        onChange: (g) => {
          e.value.onChange(g), s.current = !0;
        },
        allowHalf: e.allowHalf,
        disabled: e.disabled,
        $style: e.inputFieldStyle
      })
    });
  }).setPropertyViewFn((e) => /* @__PURE__ */ i(u, {
    children: [/* @__PURE__ */ i(l, {
      name: n.basic,
      children: [e.defaultValue.propertyView({
        label: o("prop.defaultValue")
      }), e.max.propertyView({
        label: o("rating.max")
      })]
    }), /* @__PURE__ */ a(U, {
      ...e
    }), ["logic", "both"].includes(d(c).editorModeStatus) && /* @__PURE__ */ i(u, {
      children: [/* @__PURE__ */ i(l, {
        name: n.interaction,
        children: [e.onEvent.getPropertyView(), $(e), H(e)]
      }), /* @__PURE__ */ a(l, {
        name: n.advanced,
        children: e.allowHalf.propertyView({
          label: o("rating.allowHalf")
        })
      })]
    }), ["layout", "both"].includes(d(c).editorModeStatus) && e.label.getPropertyView(), ["layout", "both"].includes(d(c).editorModeStatus) && /* @__PURE__ */ i(u, {
      children: [/* @__PURE__ */ a(l, {
        name: n.style,
        children: e.style.getPropertyView()
      }), /* @__PURE__ */ a(l, {
        name: n.labelStyle,
        children: e.labelStyle.getPropertyView()
      }), /* @__PURE__ */ a(l, {
        name: n.inputFieldStyle,
        children: e.inputFieldStyle.getPropertyView()
      }), /* @__PURE__ */ a(l, {
        name: n.animationStyle,
        hasTooltip: !0,
        children: e.animationStyle.getPropertyView()
      })]
    })]
  })).build();
}(), q = M(G, [new f("value", o("export.ratingValueDesc")), new f("max", o("export.ratingMaxDesc")), ...O]), J = (t) => I`
    .ant-rate {
      color: ${t.checked};
    }

    .ant-rate-star-half .ant-rate-star-first,
    .ant-rate-star-full .ant-rate-star-second {
      color: ${t.checked};
    }

    .ant-rate-star-first,
    .ant-rate-star-second {
      color: ${t.unchecked};
    }
  `, Q = B(L)`
  ${(t) => t.$style && J(t.$style)}
`;
export {
  Q as RateStyled,
  q as RatingComp
};
