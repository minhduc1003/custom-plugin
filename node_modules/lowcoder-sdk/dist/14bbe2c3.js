import { dW as n, cI as i, J as o, h0 as l, M as r, F as c, G as p, ac as u, ae as g } from "./c988e26e.js";
import "react";
import "react-dom";
test("test string state control", () => {
  const s = {
    s1: n("s1Value")
  }, t = {
    ...s,
    s2: n("s2Value")
  }, a = {
    s1: n("s1Value")
  };
  let e = new i({
    value: "3{{s1}}"
  });
  e = o(e, s), expect(e.getView().value).toBe("3s1Value"), e = o(e.reduce(e.changeChildAction("value", "newx")), s), expect(e.getView().value).toBe("newx"), e = o(e, t), expect(e.getView().value).toBe("newx"), e = o(e, a), expect(e.getView().value).toBe("3s1Value");
});
test("test comp", () => {
  let s = function() {
    const e = {
      v1: l(["a"])
    };
    return new r(e, (d) => "a").setPropertyViewFn(() => /* @__PURE__ */ c(p, {})).build();
  }();
  s = u(s, [new g("v1")]);
  let t = new s({});
  t = o(t), t = o(t);
  let a = o(t);
  expect(t === a).toBeTruthy();
});
