import { X as K, av as k, aw as x, ax as W, Y as t, Z as j, gX as z, a3 as O, w as c, S as C, O as g, a2 as I, gY as H, cY as R, v as f, U as A, F as s, a8 as h, G as B, a9 as y, aa as d, ab as F, ac as N, ae as n, ad as U, ch as D, gZ as P, g_ as Y, aB as X, g$ as Z, au as u } from "./c988e26e.js";
import { useRef as _, useState as m, useEffect as G } from "react";
import "react-dom";
const L = K.div`
  height: 100%;
  width: 100%;
  ${(e) => e.$style && M(e.$style)}
`, M = (e) => k`
    margin: ${e.margin};
    padding: ${e.padding};
    border-style: ${e.borderStyle};
    border-width: ${e.borderWidth};
    border-color: ${e.border};
    background: ${e.background};
    border-radius: ${e.radius};
    max-width: ${x(e.margin)};
    max-height: ${W(e.margin)};
  `, q = [{
  key: "1",
  title: t("transfer.content", {
    i: 1
  })
}, {
  key: "2",
  title: t("transfer.content", {
    i: 2
  })
}, {
  key: "3",
  title: t("transfer.content", {
    i: 3
  })
}, {
  key: "4",
  title: t("transfer.content", {
    i: 4
  })
}, {
  key: "5",
  title: t("transfer.content", {
    i: 5
  })
}, {
  key: "6",
  title: t("transfer.content", {
    i: 6
  })
}, {
  key: "7",
  title: t("transfer.content", {
    i: 7
  })
}], J = [D, P, Y], Q = {
  style: j(z, "style"),
  onEvent: O(J),
  sourceTitle: c(C, t("transfer.sourceTitle")),
  targetTitle: c(C, t("transfer.targetTitle")),
  oneWay: g,
  pagination: g,
  showSearch: g.DEFAULT_TRUE,
  pageSize: c(I, 10),
  items: H("items", q),
  targetKeys: R("targetKeys", []),
  selectedKeys: f([[], []]),
  targerObject: f([]),
  searchInfo: f(["", ""])
}, ee = (e) => {
  const i = _(null), [o, S] = m(0), [l, v] = m(0), [E, T] = m([]);
  G(() => {
    l && o && b();
  }, [l, o]);
  const p = (a) => {
    e.targetKeys.onChange(a), e.dispatch(u("targerObject", Array.isArray(e.items.value) ? e.items.value.filter((r) => a.includes(r.key)) : [], !1)), e.onEvent("change");
  }, V = (a, r) => {
    T([...a, ...r]), e.dispatch(u("selectedKeys", [a, r], !1)), e.onEvent("selectedChange");
  }, $ = (a, r) => {
    e.dispatch(u("searchInfo", [a, r], !1)), e.onEvent("search");
  }, b = () => {
    const a = i.current;
    S((a == null ? void 0 : a.clientWidth) ?? 0), v((a == null ? void 0 : a.clientHeight) ?? 0);
  };
  return /* @__PURE__ */ s(X, {
    onResize: b,
    children: /* @__PURE__ */ s(L, {
      ref: i,
      $style: e.style,
      children: /* @__PURE__ */ s(Z, {
        listStyle: {
          width: o,
          height: l
        },
        showSearch: e.showSearch,
        dataSource: e.items.value,
        titles: [e.targetTitle, e.sourceTitle],
        targetKeys: e.targetKeys.value,
        selectedKeys: E,
        onChange: p,
        onSelectChange: V,
        render: (a) => a.title,
        oneWay: e.oneWay,
        onSearch: $,
        pagination: e.pagination ? {
          pageSize: e.pageSize || 10
        } : !1
      })
    })
  });
};
let w = function() {
  return new A(Q, (e, i) => /* @__PURE__ */ s(ee, {
    ...e,
    dispatch: i
  })).setPropertyViewFn((e) => /* @__PURE__ */ h(B, {
    children: [/* @__PURE__ */ h(y, {
      name: d.basic,
      children: [e.items.propertyView({
        label: t("transfer.items")
      }), e.targetKeys.propertyView({
        label: t("transfer.targetKeys")
      }), e.sourceTitle.propertyView({
        label: t("transfer.sourceTitle")
      }), e.targetTitle.propertyView({
        label: t("transfer.targetTitle")
      }), e.showSearch.propertyView({
        label: t("transfer.allowSearch")
      }), e.oneWay.propertyView({
        label: t("transfer.oneWay")
      }), e.pagination.propertyView({
        label: t("transfer.pagination")
      }), e.pagination.getView() && e.pageSize.propertyView({
        label: t("transfer.pageSize")
      })]
    }), /* @__PURE__ */ h(y, {
      name: d.layout,
      children: [e.onEvent.propertyView(), F(e)]
    }), /* @__PURE__ */ s(y, {
      name: d.style,
      children: e.style.getPropertyView()
    })]
  })).build();
}();
w = class extends w {
  autoHeight() {
    return !1;
  }
};
const ne = N(w, [new n("items", t("transfer.items")), new n("targetKeys", t("transfer.targetKeys")), new n("targerObject", t("transfer.targerObject")), new n("selectedKeys", t("transfer.selectedKeys")), new n("searchInfo", t("transfer.searchInfo")), U]);
export {
  ne as transferComp
};
