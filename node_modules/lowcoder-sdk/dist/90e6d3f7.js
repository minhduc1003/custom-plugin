const m = [{
  type: "input"
}, {
  type: "textArea"
}, {
  type: "password"
}, {
  type: "richTextEditor"
}], r = [{
  type: "numberInput",
  compInitData: {
    allowNull: !0
  }
}, {
  type: "slider"
}, {
  type: "rating"
}], p = [{
  type: "switch"
}];
function a(e) {
  return "+" + e + ".value";
}
function n(e) {
  return [{
    type: "select",
    exposingValueJs: e
  }, {
    type: "radio",
    exposingValueJs: e
  }, {
    type: "segmentedControl",
    exposingValueJs: e
  }];
}
function o(e) {
  return e + '.value.join(",")';
}
const u = [{
  type: "checkbox",
  exposingValueJs: o
}, {
  type: "multiSelect",
  exposingValueJs: o
}, {
  type: "file",
  exposingValueJs: o
}], c = {
  type: "date"
};
function f(e) {
  return "dayjs(" + e + ".value || 0).valueOf()";
}
function i(e) {
  return {
    type: "date",
    compInitData: {
      showTime: !0
    },
    exposingValueJs: e ? f : void 0
  };
}
const l = {
  type: "time"
};
function s() {
  return [c, l];
}
function C() {
  return {
    comps: [...m, ...r, ...p, ...n(), ...u, ...s()],
    defaultCompType: "input"
  };
}
function d() {
  return {
    comps: [...m, ...n(), ...u, ...s()],
    defaultCompType: "input"
  };
}
function y() {
  return {
    comps: n(),
    defaultCompType: "select"
  };
}
function T() {
  return {
    comps: [...u, ...n()],
    defaultCompType: "checkbox"
  };
}
function S(e) {
  let t = [...r, ...n(a)];
  return e && (t = [...t, ...p, i(!0)]), {
    comps: t,
    defaultCompType: "numberInput"
  };
}
function g() {
  return {
    comps: p,
    defaultCompType: "switch"
  };
}
function b() {
  return {
    comps: [c],
    defaultCompType: "date"
  };
}
function x() {
  return {
    comps: [i()],
    defaultCompType: "date"
  };
}
function v() {
  return {
    comps: [i(!0)],
    defaultCompType: "date"
  };
}
function h() {
  return {
    comps: [l],
    defaultCompType: "time"
  };
}
function w(e, t) {
  if (e)
    return "{{" + (t.exposingValueJs ? t.exposingValueJs(e) : e + ".value") + "}}";
}
export {
  C as allCompSelection,
  g as booleanCompSelection,
  b as dateCompSelection,
  x as dateTimeCompSelection,
  y as enumCompSelection,
  w as generateWrapJs,
  S as numberCompSelection,
  T as setCompSelection,
  d as stringCompSelection,
  h as timeCompSelection,
  v as timestampCompSelection
};
