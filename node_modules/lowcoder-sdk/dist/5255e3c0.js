import { Y as e, cM as b, a5 as w, a4 as r, O as p, bI as C, cZ as $, h_ as k, Z as x, h$ as z, N as P, az as I, U as T, X as D, aw as E, ax as B, F as a, eT as M, i0 as h, bU as F, a8 as i, G as m, a9 as o, aa as l, ah as u, bJ as N, ab as O, ac as R, ae as c, bL as W } from "./c988e26e.js";
import { useState as j, useEffect as U, useContext as d } from "react";
import { selectDivRefMethods as H } from "./d3b0afba.js";
import "react-dom";
const Z = [{
  label: e("step.sizeSmall"),
  value: "small"
}, {
  label: e("step.sizeDefault"),
  value: "default"
}], A = [{
  label: e("step.typeDefault"),
  value: "default"
}, {
  label: e("step.typeNavigation"),
  value: "navigation"
}, {
  label: e("step.typeInline"),
  value: "inline"
}], v = [{
  label: e("step.directionHorizontal"),
  value: "horizontal"
}, {
  label: e("step.directionVertical"),
  value: "vertical"
}];
e("step.statusProcess"), e("step.statusWait"), e("step.statusFinish"), e("step.statusError");
const G = {
  initialValue: b("1"),
  value: w("value"),
  stepStatus: w("process"),
  stepPercent: b("60"),
  size: r(Z, "default"),
  displayType: r(A, "default"),
  direction: r(v, "horizontal"),
  showDots: p,
  showIcons: p,
  selectable: p,
  labelPlacement: r(v, "horizontal"),
  disabled: C,
  onEvent: $,
  options: k,
  style: x(z, "style"),
  viewRef: P,
  animationStyle: x(I, "animationStyle")
};
let J = function() {
  return new T(G, (t) => {
    const f = D.div`
    ${(s) => s.$animationStyle}
      min-height: 24px;
      max-width: ${E(t.style.margin)};
      max-height: ${B(t.style.margin)};
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      text-decoration: ${t.style.textDecoration};
      font-style: ${t.style.fontStyle};
      font-weight: ${t.style.textWeight};
      font-size: ${t.style.textSize};
      text-transform: ${t.style.textTransform};
      margin: ${t.style.margin};
      rotate: ${t.style.rotation};
      padding: ${t.style.padding};
      background-color: ${t.style.background};
      border: ${t.style.borderWidth} solid ${t.style.border};
      border-radius: ${t.style.radius};
      background-image: url(${t.style.backgroundImage});
      background-repeat: ${t.style.backgroundImageRepeat};
      background-size: ${t.style.backgroundImageSize};
      background-position: ${t.style.backgroundImagePosition};
      background-origin: ${t.style.backgroundImageOrigin};
      .ant-steps-item { padding-top: 5px !important; }
      .ant-steps.ant-steps-label-vertical.ant-steps-small .ant-steps-item-icon { margin-top: 17px !important; }
      .ant-steps.ant-steps-label-vertical.ant-steps-default .ant-steps-item-icon { margin-top: 12px !important; }
      .ant-steps.ant-steps-dot .ant-steps-item-process .ant-steps-icon .ant-steps-icon-dot { margin-top: 4px !important; }
      .ant-steps.ant-steps-default .ant-steps-item-icon .ant-steps-icon-dot { margin-top: 9px !important; }
      .ant-steps.ant-steps-small .ant-steps-item-icon .ant-steps-icon-dot { margin-top: 4px !important; }
      .ant-steps.ant-steps-dot .ant-steps-item-title { margin-top: 10px !important; }
      .ant-steps.ant-steps-default.ant-steps-with-progress.ant-steps-label-horizontal .ant-steps-item.ant-steps-item-custom div.ant-steps-item-icon { margin-top:4px !important; }
      .ant-steps.ant-steps-default.ant-steps-with-progress.ant-steps-label-vertical .ant-steps-item.ant-steps-item-custom div.ant-steps-item-icon { margin-top:17px !important; }
      .ant-steps.ant-steps-dot.ant-steps-small.ant-steps-with-progress .ant-steps-item-icon .ant-progress { inset-block-start: -8px !important; inset-inline-start: -11px !important; }
      .ant-steps.ant-steps-dot.ant-steps-default.ant-steps-with-progress .ant-steps-item-icon .ant-progress { inset-block-start: -7px !important; inset-inline-start: -13px !important; }
      .ant-steps.ant-steps-small.ant-steps-with-progress .ant-steps-item:not(.ant-steps-item-custom) .ant-progress { inset-block-start: -5px !important; inset-inline-start: -5px !important; }
      .ant-steps.ant-steps-default.ant-steps-with-progress .ant-steps-item:not(.ant-steps-item-custom) .ant-progress { inset-block-start: -5px !important; inset-inline-start: -5px !important; }
      .ant-steps.ant-steps-small.ant-steps-with-progress .ant-steps-item.ant-steps-item-custom .ant-progress { inset-block-start: -5px !important; inset-inline-start: -10px !important; }
      .ant-steps.ant-steps-default.ant-steps-with-progress .ant-steps-item.ant-steps-item-custom .ant-progress { inset-block-start: -4px !important; inset-inline-start: -13px !important; }
    `, [S, y] = j(t.initialValue.value - 1);
    U(() => {
      const s = Number(t.value.value);
      y(s - 1);
    }, [t.value.value]);
    const V = (s) => {
      var g;
      if (t.selectable == !1)
        return;
      const n = Math.max(0, s);
      y(n), ((g = t.options[n]) == null ? void 0 : g.value) !== void 0 && (t.value.onChange(n + 1 + ""), t.onEvent("change"));
    };
    return /* @__PURE__ */ a(M, {
      theme: {
        token: {
          colorPrimary: t.style.activeBackground,
          colorText: t.style.titleText,
          colorTextDescription: t.style.text,
          fontFamily: t.style.fontFamily
        }
      },
      children: /* @__PURE__ */ a(f, {
        style: t.style,
        $animationStyle: t.animationStyle,
        children: /* @__PURE__ */ a(h, {
          initial: t.initialValue.value - 1,
          current: S,
          onChange: V,
          percent: t.stepPercent.value,
          status: t.stepStatus.value,
          type: t.displayType,
          size: t.size,
          labelPlacement: t.labelPlacement,
          progressDot: t.showDots,
          direction: t.direction,
          children: t.options.map((s, n) => /* @__PURE__ */ a(h.Step, {
            title: s.label,
            subTitle: s.subTitle,
            description: s.description,
            status: s.status,
            icon: t.showIcons && F(s.icon) && s.icon || void 0
          }, n))
        })
      })
    });
  }).setPropertyViewFn((t) => /* @__PURE__ */ i(m, {
    children: [/* @__PURE__ */ i(o, {
      name: l.basic,
      children: [t.options.propertyView({}), t.initialValue.propertyView({
        label: e("step.initialValue"),
        tooltip: e("step.initialValueTooltip")
      })]
    }), ["logic", "both"].includes(d(u).editorModeStatus) && /* @__PURE__ */ a(m, {
      children: /* @__PURE__ */ i(o, {
        name: l.interaction,
        children: [t.onEvent.getPropertyView(), N(t), O(t), t.stepStatus.propertyView({
          label: e("step.status")
        }), t.stepPercent.propertyView({
          label: e("step.percent")
        }), t.selectable.propertyView({
          label: e("step.selectable")
        })]
      })
    }), ["layout", "both"].includes(d(u).editorModeStatus) && /* @__PURE__ */ i(o, {
      name: l.layout,
      children: [t.size.propertyView({
        label: e("step.size"),
        radioButton: !0
      }), t.displayType.propertyView({
        label: e("step.type"),
        radioButton: !1
      }), t.direction.propertyView({
        label: e("step.direction"),
        radioButton: !0
      }), t.direction.getView() == "horizontal" && t.labelPlacement.propertyView({
        label: e("step.labelPlacement"),
        radioButton: !0
      }), t.displayType.getView() != "inline" && !t.showIcons.getView() && t.showDots.propertyView({
        label: e("step.showDots")
      }), t.displayType.getView() != "inline" && !t.showDots.getView() && t.showIcons.propertyView({
        label: e("step.showIcons")
      })]
    }), ["layout", "both"].includes(d(u).editorModeStatus) && /* @__PURE__ */ i(m, {
      children: [/* @__PURE__ */ a(o, {
        name: l.style,
        children: t.style.getPropertyView()
      }), /* @__PURE__ */ a(o, {
        name: l.animationStyle,
        hasTooltip: !0,
        children: t.animationStyle.getPropertyView()
      })]
    })]
  })).setExposeMethodConfigs(H).build();
}();
const q = R(J, [new c("value", e("step.valueDesc")), new c("stepStatus", e("step.status")), new c("stepPercent", e("step.percent")), ...W]);
export {
  q as StepComp
};
