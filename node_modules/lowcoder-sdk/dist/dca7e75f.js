import { a8 as n, G as p, a9 as o, aa as l, Y as t, fm as d, F as i, ah as r, ab as h } from "./c988e26e.js";
import { useContext as a } from "react";
import "react-dom";
function y(m) {
  return (c) => {
    const {
      comp: s
    } = c, e = s.children;
    return /* @__PURE__ */ n(p, {
      children: [/* @__PURE__ */ n(o, {
        name: l.basic,
        children: [e.noOfRows.propertyView({
          label: t("listView.dataDesc"),
          tooltip: t("listView.dataTooltip")
        }), m === "grid" && e.noOfColumns.propertyView({
          label: t("listView.noOfColumns")
        }), e.itemIndexName.propertyView({
          label: t("listView.itemIndexName"),
          tooltip: d("listView.itemIndexNameDesc", {
            default: /* @__PURE__ */ i("b", {
              children: /* @__PURE__ */ i("i", {
                children: "i"
              })
            })
          })
        }), e.itemDataName.propertyView({
          label: t("listView.itemDataName"),
          tooltip: d("listView.itemDataNameDesc", {
            default: /* @__PURE__ */ i("b", {
              children: /* @__PURE__ */ i("i", {
                children: "currentItem"
              })
            })
          })
        })]
      }), (a(r).editorModeStatus === "logic" || a(r).editorModeStatus === "both") && /* @__PURE__ */ i(o, {
        name: t("prop.pagination"),
        children: s.children.pagination.getPropertyView()
      }), (a(r).editorModeStatus === "logic" || a(r).editorModeStatus === "both") && /* @__PURE__ */ i(o, {
        name: l.interaction,
        children: h(e)
      }), (a(r).editorModeStatus === "layout" || a(r).editorModeStatus === "both") && /* @__PURE__ */ n(p, {
        children: [/* @__PURE__ */ n(o, {
          name: l.layout,
          children: [e.horizontalGridCells.propertyView({
            label: t("prop.horizontalGridCells")
          }), e.autoHeight.getPropertyView(), (!e.autoHeight.getView() || e.horizontal.getView()) && e.scrollbars.propertyView({
            label: t("prop.scrollbar")
          }), e.horizontal.propertyView({
            label: t("prop.horizontal")
          }), e.horizontal.getView() && e.minHorizontalWidth.propertyView({
            label: t("prop.minHorizontalWidth"),
            placeholder: "100px"
          })]
        }), /* @__PURE__ */ i(o, {
          name: l.style,
          children: e.style.getPropertyView()
        }), /* @__PURE__ */ i(o, {
          name: l.animationStyle,
          hasTooltip: !0,
          children: e.animationStyle.getPropertyView()
        })]
      })]
    });
  };
}
export {
  y as listPropertyView
};
