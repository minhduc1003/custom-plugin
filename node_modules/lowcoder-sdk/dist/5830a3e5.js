import { useContext as g, useRef as re, useState as C, useEffect as D } from "react";
import { c1 as u, eJ as ce, eG as E, w as I, Y as a, S as L, O as K, a3 as ie, Z as _, eK as de, az as me, ef as k, v as ue, U as pe, F as n, a8 as l, G as V, a9 as i, aa as d, ah as v, ab as he, ac as ye, ae as f, ad as be, ag as ge, eL as Ce, eM as ve, eN as fe, aw as we, ax as xe, eO as T, eP as Ae, eQ as Se, at as De, eR as G, au as Ee, bV as Ie, _ as m, af as Le, eS as ke } from "./c988e26e.js";
import { commentDate as Ve, convertCommentData as Te, checkUserInfoData as Me, checkMentionListData as Ne, CommentDataTooltip as Pe, CommentUserDataTooltip as Ue } from "./15a00e24.js";
import "react-dom";
u.extend(ce);
const je = [ge, Ce, ve, fe], Oe = {
  value: E(Te, Ve),
  title: I(L, a("comment.titledDefaultValue")),
  placeholder: I(L, a("comment.placeholder")),
  buttonText: I(L, a("comment.buttonText")),
  sendCommentAble: K.DEFAULT_TRUE,
  deleteAble: K,
  userInfo: E(Me, {
    name: "{{currentUser.name}}",
    email: "{{currentUser.email}}"
  }),
  mentionList: E(Ne, {
    "@": ["Li Lei", "Han Meimei"],
    "#": ["123", "456", "789"]
  }),
  onEvent: ie(je),
  style: _(de, "style"),
  animationStyle: _(me, "animationStyle"),
  commentList: k("commentList", []),
  deletedItem: k("deletedItem", []),
  submitedItem: k("submitedItem", []),
  mentionName: ue("")
}, Be = (t) => {
  const p = re(null), {
    value: N,
    dispatch: $,
    style: r,
    title: w,
    sendCommentAble: J,
    buttonText: Q,
    onEvent: He,
    mentionList: y,
    userInfo: X,
    placeholder: Z,
    deleteAble: q,
    animationStyle: b
  } = t, [P, W] = C([]), [s, x] = C([]), [ee, te] = C("@"), [A, U] = C(""), S = (e) => {
    W(m.merge(e, {
      "@": m.union(m.concat(e["@"], m.map(s, (o, c) => {
        var h;
        return (h = o == null ? void 0 : o.user) == null ? void 0 : h.name;
      })))
    }));
  };
  D(() => {
    x(N);
  }, [N]), D(() => {
    S(y);
  }, [y]), D(() => {
    t.commentList.onChange(s), S(y), setTimeout(() => {
      p.current && (p.current.scrollTop = 999999);
    }, 50);
  }, [s]);
  const ne = (e, o) => {
    te(o);
  }, ae = (e) => {
    var o, c, h, O, B, H, R, Y, F, z;
    return /* @__PURE__ */ l(Le, {
      onClick: () => t.onEvent("click"),
      style: {
        backgroundColor: (o = e == null ? void 0 : e.user) != null && o.avatar ? "" : ke(((c = e == null ? void 0 : e.user) == null ? void 0 : c.displayName) === void 0 ? (h = e == null ? void 0 : e.user) == null ? void 0 : h.name : (O = e == null ? void 0 : e.user) == null ? void 0 : O.displayName)[1],
        verticalAlign: "middle"
      },
      src: (B = e == null ? void 0 : e.user) == null ? void 0 : B.avatar,
      children: [" ", (H = e == null ? void 0 : e.user) != null && H.displayName ? (R = e == null ? void 0 : e.user) == null ? void 0 : R.displayName : /^([\u4e00-\u9fa5]{2,4})$/gi.test((Y = e == null ? void 0 : e.user) == null ? void 0 : Y.name) ? (F = e == null ? void 0 : e.user) == null ? void 0 : F.name.slice(-2) : (z = e == null ? void 0 : e.user) == null ? void 0 : z.name[0]]
    });
  }, oe = (e) => {
    U(e);
  }, j = () => {
    let e = {
      user: X,
      value: A,
      createdAt: u().format()
    };
    t.submitedItem.onChange(e), x(m.concat(s, [e])), U(""), S(y), t.onEvent("submit");
  }, le = (e) => {
    let o = m.cloneDeep(s);
    t.deletedItem.onChange(o.splice(e, 1)), x(o), t.onEvent("delete");
  }, se = (e) => {
    e.shiftKey && (e.preventDefault(), j());
  };
  return /* @__PURE__ */ n("div", {
    style: {
      margin: r.margin ?? "3px",
      padding: r.padding ?? "3px",
      width: we(r.margin ?? "3px"),
      height: xe(r.margin ?? "3px"),
      background: r.background,
      borderRadius: r.radius,
      animation: b.animation,
      animationDelay: b.animationDelay,
      animationDuration: b.animationDuration,
      animationIterationCount: b.animationIterationCount
    },
    children: /* @__PURE__ */ l("div", {
      style: {
        overflow: "auto",
        overflowX: "hidden",
        height: "100%"
      },
      ref: p,
      children: [/* @__PURE__ */ n(T, {
        header: w !== "" ? /* @__PURE__ */ n("div", {
          style: {
            position: "sticky",
            top: 0,
            background: r.background
          },
          children: s.length > 1 ? w.replaceAll("%d", s.length.toString()).replace("comment", "comments") : w.replaceAll("%d", s.length.toString())
        }) : "",
        size: "small",
        children: /* @__PURE__ */ n(Ae, {
          data: s,
          itemKey: "createdAt",
          children: (e, o) => {
            var c;
            return /* @__PURE__ */ n(T.Item, {
              actions: q ? [/* @__PURE__ */ n(Se, {
                style: {
                  color: "#c32230"
                },
                onClick: () => le(o)
              })] : void 0,
              children: /* @__PURE__ */ n(T.Item.Meta, {
                avatar: ae(e),
                title: /* @__PURE__ */ l("div", {
                  onClick: () => t.onEvent("click"),
                  children: [/* @__PURE__ */ n("a", {
                    children: (c = e == null ? void 0 : e.user) == null ? void 0 : c.name
                  }), /* @__PURE__ */ n(De, {
                    title: u(e == null ? void 0 : e.createdAt).isValid() ? u(e == null ? void 0 : e.createdAt).format("YYYY/M/D HH:mm:ss") : a("comment.dateErr"),
                    placement: "bottom",
                    children: /* @__PURE__ */ n("span", {
                      style: {
                        paddingLeft: "5px",
                        color: "#999",
                        fontSize: "11px"
                      },
                      children: u(e == null ? void 0 : e.createdAt).isValid() ? u(e == null ? void 0 : e.createdAt).fromNow() : a("comment.dateErr")
                    })
                  })]
                }),
                description: /* @__PURE__ */ n("span", {
                  children: e == null ? void 0 : e.value
                })
              })
            }, e == null ? void 0 : e.createdAt);
          }
        })
      }), J ? /* @__PURE__ */ l("div", {
        style: {
          position: "sticky",
          bottom: 0,
          background: r.background
        },
        children: [/* @__PURE__ */ n(G, {
          style: {
            width: "100%",
            height: 50
          },
          onSearch: ne,
          prefix: Object.keys(P),
          onChange: oe,
          onSelect: (e) => {
            $(Ee("mentionName", e == null ? void 0 : e.value, !1)), t.onEvent("mention");
          },
          value: A,
          rows: 2,
          onPressEnter: se,
          placeholder: Z,
          children: (P[ee] || []).map((e, o) => /* @__PURE__ */ n(G.Option, {
            value: e,
            children: e
          }, o.toString()))
        }), /* @__PURE__ */ n(Ie, {
          type: "primary",
          style: {
            width: "100%",
            marginTop: "10px"
          },
          onClick: j,
          disabled: A === "",
          children: Q
        })]
      }) : ""]
    })
  });
};
let M = function() {
  return new pe(Oe, (t, p) => /* @__PURE__ */ n(Be, {
    ...t,
    dispatch: p
  })).setPropertyViewFn((t) => /* @__PURE__ */ l(V, {
    children: [/* @__PURE__ */ n(i, {
      name: d.basic,
      children: t.title.propertyView({
        label: a("comment.title")
      })
    }), (g(v).editorModeStatus === "logic" || g(v).editorModeStatus === "both") && /* @__PURE__ */ l(V, {
      children: [/* @__PURE__ */ l(i, {
        name: d.data,
        children: [t.value.propertyView({
          label: a("comment.value"),
          tooltip: Pe,
          placeholder: "[]"
        }), t.userInfo.propertyView({
          label: a("comment.userInfo"),
          tooltip: Ue
        }), t.mentionList.propertyView({
          label: a("comment.mentionList"),
          tooltip: a("comment.mentionListDec")
        })]
      }), /* @__PURE__ */ l(i, {
        name: d.interaction,
        children: [t.onEvent.getPropertyView(), he(t), t.sendCommentAble.propertyView({
          label: a("comment.showSendButton")
        }), t.deleteAble.propertyView({
          label: a("comment.deleteAble")
        })]
      })]
    }), (g(v).editorModeStatus === "layout" || g(v).editorModeStatus === "both") && /* @__PURE__ */ l(V, {
      children: [/* @__PURE__ */ l(i, {
        name: d.layout,
        children: [t.sendCommentAble.getView() && t.buttonText.propertyView({
          label: a("comment.buttonTextDec")
        }), t.placeholder.propertyView({
          label: a("comment.placeholderDec")
        })]
      }), /* @__PURE__ */ n(i, {
        name: d.style,
        children: t.style.getPropertyView()
      }), /* @__PURE__ */ n(i, {
        name: d.animationStyle,
        hasTooltip: !0,
        children: t.animationStyle.getPropertyView()
      })]
    })]
  })).build();
}();
M = class extends M {
  autoHeight() {
    return !1;
  }
};
const Ke = ye(M, [new f("commentList", a("comment.commentList")), new f("deletedItem", a("comment.deletedItem")), new f("submitedItem", a("comment.submitedItem")), new f("mentionName", a("comment.submitedItem")), be]);
export {
  Ke as CommentComp
};
