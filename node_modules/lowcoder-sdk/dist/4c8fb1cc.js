import { cM as l, O as m, U as c, a8 as i, bU as r, F as o, G as u, a9 as S, aa as y, Y as t, ac as g, ae as a, bL as x } from "./c988e26e.js";
import "react";
import { SliderChildren as w, SliderWrapper as b, SliderStyled as f, SliderPropertyView as p } from "./a789fa2f.js";
import "react-dom";
const C = function() {
  const s = {
    ...w,
    start: l("start", 10),
    end: l("end", 60),
    vertical: m
  };
  return new c(s, (e, v) => e.label({
    style: e.style,
    labelStyle: e.labelStyle,
    inputFieldStyle: e.inputFieldStyle,
    animationStyle: e.animationStyle,
    children: /* @__PURE__ */ i(b, {
      vertical: e.vertical,
      onMouseDown: (n) => (n.stopPropagation(), !1),
      children: [r(e.prefixIcon) && e.prefixIcon, /* @__PURE__ */ o(f, {
        ...e,
        range: !0,
        value: [e.start.value, e.end.value],
        $style: e.inputFieldStyle,
        style: {
          margin: 0
        },
        vertical: e.vertical || !1,
        onChange: ([n, d]) => {
          e.start.onChange(n), e.end.onChange(d), e.onEvent("change");
        }
      }), r(e.suffixIcon) && e.suffixIcon]
    })
  })).setPropertyViewFn((e) => /* @__PURE__ */ i(u, {
    children: [/* @__PURE__ */ i(S, {
      name: y.basic,
      children: [e.start.propertyView({
        label: t("rangeSlider.start")
      }), e.end.propertyView({
        label: t("rangeSlider.end")
      }), e.max.propertyView({
        label: t("prop.maximum")
      }), e.min.propertyView({
        label: t("prop.minimum")
      }), e.step.propertyView({
        label: t("rangeSlider.step"),
        tooltip: t("rangeSlider.stepTooltip")
      }), e.vertical.propertyView({
        label: t("slider.vertical")
      })]
    }), /* @__PURE__ */ o(p, {
      ...e
    })]
  })).build();
}(), D = g(C, [new a("start", t("export.sliderStartDesc")), new a("end", t("export.sliderEndDesc")), new a("max", t("export.sliderMaxValueDesc")), new a("min", t("export.sliderMinValueDesc")), ...x]);
export {
  D as RangeSliderComp
};
