import { ih as r, J as a, Y as l } from "./c988e26e.js";
import "react";
import "react-dom";
function t(e, s, o) {
  const n = a(e.reduce(e.changeValueAction(s)));
  return expect(n.getView()).toEqual(o), n;
}
test("test millisecond control", () => {
  let e = new (r({}))({});
  expect(e.getView()).toEqual(0), e = t(e, "5", 5), e = t(e, "5ms", 5), e = t(e, "5s", 5e3), e = t(e, "0.5s", 500), e = t(e, "-1", 0), e = t(e, "{{-1}}", 0), e = new (r({ right: 1e3 }))({}), expect(e.getView()).toEqual(0), e = t(e, "5", 5), e = t(e, "5ms", 5), e = t(e, "5s", 1e3), e = t(e, "-1", 0), e = t(e, "0.5s", 500), e = t(e, "2000", 1e3), e = new (r({ right: 1e3, defaultValue: 10 }))({}), expect(e.getView()).toEqual(10), e = t(e, "5", 5), e = t(e, "5ms", 5), e = t(e, "5s", 1e3), e = t(e, "-1", 0), e = t(e, "0.5s", 500), e = t(e, "2000", 1e3), e = t(e, "{{2000}}", 1e3), e = t(e, "xx", 10), e = new (r({ right: 5, defaultValue: 3, unit: "s" }))({}), expect(e.getView()).toEqual(3e3), e = t(e, "5", 5e3), e = t(e, "5ms", 5), e = t(e, "5s", 5e3), e = t(e, "-1", 0), e = t(e, "10s", 5e3), e = t(e, "0.5s", 500), e = t(e, "10000", 5e3), e = new (r({
    defaultValue: Number.NaN,
    toMilliseconds: (s, o, n, i) => {
      if (s < 100)
        throw new TypeError(
          l("millisecondsControl.timeoutLessThanMinError", { left: "100ms", value: s })
        );
      return i === "s" ? s * 1e3 : s;
    }
  }))({}), e = t(e, "", Number.NaN), e = t(e, "1", Number.NaN), e = t(e, "{{-1}}", Number.NaN), e = t(e, "-1s", Number.NaN), e = t(e, "1ms", Number.NaN), e = t(e, "0.05s", Number.NaN), e = t(e, "1s", 1e3), e = t(e, "{{10 * 100}}", 1e3), e = t(e, "xx", Number.NaN);
});
