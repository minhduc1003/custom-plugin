import { X as a, gA as m, gB as d, M as b, S as c, f$ as u, bI as i, a8 as C, G as l, Y as n, ab as h, bJ as w, gC as y, F as e, al as g } from "./c988e26e.js";
import { C as k } from "./5230605f.js";
import "react";
import { ColumnLink as f } from "./734fbd0f.js";
import "react-dom";
import "./be799735.js";
const V = a.div`
  > a {
    color: ${m} !important;

    &:hover {
      color: ${d} !important;
    }
  }
`, x = a.div`
  ul {
    background: transparent !important;
    border-bottom: 0;

    li {
      padding: 0 10px 0 0 !important;
      line-height: normal !important;

      &::after {
        content: none !important;
      }
    }
  }  
`, L = new b({
  label: c,
  onClick: u,
  hidden: i,
  disabled: i
}, (t) => t).setPropertyViewFn((t) => /* @__PURE__ */ C(l, {
  children: [t.label.propertyView({
    label: n("label")
  }), t.onClick.propertyView({
    label: n("table.action"),
    placement: "table"
  }), h(t), w(t)]
})).build(), O = function() {
  const t = {
    options: y(L, {
      initOptions: [{
        label: n("table.option1")
      }]
    })
  };
  return new k(t, (r) => {
    const p = r.options.filter((o) => !o.hidden).map((o, s) => ({
      key: s,
      label: /* @__PURE__ */ e(V, {
        children: /* @__PURE__ */ e(f, {
          disabled: o.disabled,
          label: o.label,
          onClick: o.onClick
        })
      })
    }));
    return /* @__PURE__ */ e(x, {
      children: /* @__PURE__ */ e(g, {
        mode: "horizontal",
        items: p
      })
    });
  }, () => "").setPropertyViewFn((r) => /* @__PURE__ */ e(l, {
    children: r.options.propertyView({
      newOptionLabel: n("table.option"),
      title: n("table.optionList")
    })
  })).build();
}();
export {
  O as ColumnLinksComp
};
