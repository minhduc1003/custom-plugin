import { DateTimeComp as a } from "./8c51b61b.js";
import { ButtonComp as l } from "./0417d842.js";
import { Y as e, h as m, a8 as r, G as i, F as p, bP as n } from "./c988e26e.js";
import "react";
import { BooleanComp as s } from "./71bdd49a.js";
import { SwitchComp as b } from "./80c67fbe.js";
import { DateComp as u } from "./82a4bca8.js";
import { ImageComp as c } from "./094988fd.js";
import { LinkComp as d } from "./734fbd0f.js";
import { ColumnLinksComp as C } from "./80229ccd.js";
import { ColumnMarkdownComp as g } from "./16b77c22.js";
import { ProgressComp as h } from "./b25be8d9.js";
import { RatingComp as v } from "./c504e788.js";
import { BadgeStatusComp as w } from "./ad2208e2.js";
import { ColumnTagsComp as f } from "./e5bcb9b0.js";
import { ColumnSelectComp as T } from "./51dea655.js";
import { SimpleTextComp as x } from "./765e17fb.js";
import { ColumnNumberComp as k } from "./98885dce.js";
import { ColumnAvatarsComp as y } from "./9ee13d0e.js";
import { ColumnDropdownComp as V } from "./9f467dd0.js";
import "./5230605f.js";
import "./be799735.js";
import "./975a080d.js";
import "react-dom";
import "./2088ebd5.js";
import "./d3b0afba.js";
import "./85e61f03.js";
import "./36c2248f.js";
import "./70f9cad3.js";
import "./0c3664e6.js";
import "./fcc9e192.js";
import "./325a473d.js";
import "./33706f61.js";
const S = [{
  label: e("table.avatars"),
  value: "avatars"
}, {
  label: e("table.text"),
  value: "text"
}, {
  label: e("table.number"),
  value: "number"
}, {
  label: e("table.link"),
  value: "link"
}, {
  label: e("table.links"),
  value: "links"
}, {
  label: e("table.tag"),
  value: "tag"
}, {
  label: e("table.select"),
  value: "select"
}, {
  label: e("table.dropdown"),
  value: "dropdown"
}, {
  label: e("table.badgeStatus"),
  value: "badgeStatus"
}, {
  label: e("table.button"),
  value: "button"
}, {
  label: e("table.image"),
  value: "image"
}, {
  label: e("table.date"),
  value: "date"
}, {
  label: e("table.dateTime"),
  value: "dateTime"
}, {
  label: "Markdown",
  value: "markdown"
}, {
  label: e("table.boolean"),
  value: "boolean"
}, {
  label: e("table.switch"),
  value: "switch"
}, {
  label: e("table.rating"),
  value: "rating"
}, {
  label: e("table.progress"),
  value: "progress"
}], D = {
  avatars: y,
  text: x,
  number: k,
  button: l,
  badgeStatus: w,
  link: d,
  tag: f,
  select: T,
  dropdown: V,
  links: C,
  image: c,
  markdown: g,
  dateTime: a,
  boolean: s,
  switch: b,
  rating: v,
  progress: h,
  date: u
}, P = m(D, "text");
class ne extends P {
  getView() {
    const o = this.children.comp.getView();
    return {
      view: (t) => o(t),
      value: this.children.comp.getDisplayValue()
    };
  }
  getPropertyView() {
    return /* @__PURE__ */ r(i, {
      children: [/* @__PURE__ */ p(n, {
        showSearch: !0,
        value: this.children.compType.getView(),
        options: S,
        label: e("table.columnType"),
        onChange: (o) => {
          let t = "{{currentCell}}";
          this.children.comp.children.hasOwnProperty("text") && (t = this.children.comp.children.text.toJsonValue()), this.dispatchChangeValueAction({
            compType: o,
            comp: {
              text: t
            }
          });
        }
      }), this.children.comp.getPropertyView()]
    });
  }
}
export {
  ne as ColumnTypeComp,
  D as ColumnTypeCompMap
};
