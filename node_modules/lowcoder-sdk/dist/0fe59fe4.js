import { X as S, N as g, w as b, Y as s, P as c, a4 as x, O as f, L as P, Z as n, c6 as C, c7 as I, dC as V, az as T, U as h, F as t, bU as F, a8 as l, G as y, ah as d, a9 as i, aa as o, ab as v, dE as $, cd as L, dI as R, dJ as D, dK as E, ac as M, ae as N, dF as O, dG as U, dL as q, cg as B, bS as j } from "./c988e26e.js";
import { useContext as u } from "react";
import { FormDataPropertyView as A } from "./85e61f03.js";
import { getStyle as G, textInputChildren as k, TextInputValidationOptions as z, useTextInputProps as H, TextInputBasicSection as J, TextInputInteractionSection as K, TextInputConfigs as X, inputRefMethods as Y, fixOldInputCompData as Z } from "./70f9cad3.js";
import "react-dom";
const _ = S(q)`
  box-shadow: ${(a) => {
  var e, r;
  return `${(e = a.$style) == null ? void 0 : e.boxShadow} ${(r = a.$style) == null ? void 0 : r.boxShadowColor}`;
}};
  ${(a) => a.$style && G(a.$style)}
`;
let p = function() {
  const a = {
    ...k,
    viewRef: g,
    label: b(c, {
      text: s("password.label")
    }),
    validationType: x(z, "Regex"),
    visibilityToggle: f.DEFAULT_TRUE,
    prefixIcon: P,
    style: n(C, "style"),
    labelStyle: n(I, "labelStyle"),
    inputFieldStyle: n(V, "inputFieldStyle"),
    animationStyle: n(T, "animationStyle")
  };
  return new h(a, (e, r) => {
    const [m, w] = H(e);
    return e.label({
      required: e.required,
      children: /* @__PURE__ */ t(_, {
        prefix: F(e.prefixIcon) && e.prefixIcon,
        ...m,
        ref: e.viewRef,
        visibilityToggle: e.visibilityToggle,
        $style: e.inputFieldStyle
      }),
      style: e.style,
      labelStyle: e.labelStyle,
      inputFieldStyle: e.inputFieldStyle,
      animationStyle: e.animationStyle,
      ...w
    });
  }).setPropertyViewFn((e) => /* @__PURE__ */ l(y, {
    children: [/* @__PURE__ */ t(J, {
      ...e
    }), /* @__PURE__ */ t(A, {
      ...e
    }), ["layout", "both"].includes(u(d).editorModeStatus) && e.label.getPropertyView(), ["logic", "both"].includes(u(d).editorModeStatus) && /* @__PURE__ */ l(y, {
      children: [/* @__PURE__ */ t(K, {
        ...e
      }), /* @__PURE__ */ t(i, {
        name: o.layout,
        children: v(e)
      }), /* @__PURE__ */ l(i, {
        name: o.advanced,
        children: [e.visibilityToggle.propertyView({
          label: s("password.visibilityToggle")
        }), $(e), e.prefixIcon.propertyView({
          label: s("button.prefixIcon")
        })]
      }), /* @__PURE__ */ l(i, {
        name: o.validation,
        children: [L(e), R(e), D(e), E(e), e.customRule.propertyView({})]
      })]
    }), ["layout", "both"].includes(u(d).editorModeStatus) && /* @__PURE__ */ l(y, {
      children: [/* @__PURE__ */ t(i, {
        name: o.style,
        children: e.style.getPropertyView()
      }), /* @__PURE__ */ t(i, {
        name: o.labelStyle,
        children: e.labelStyle.getPropertyView()
      }), /* @__PURE__ */ t(i, {
        name: o.inputFieldStyle,
        children: e.inputFieldStyle.getPropertyView()
      }), /* @__PURE__ */ t(i, {
        name: o.animationStyle,
        hasTooltip: !0,
        children: e.animationStyle.getPropertyView()
      })]
    })]
  })).build();
}();
p = j(p, Z);
const Q = B(p, Y), oe = M(Q, [new N("value", s("export.inputValueDesc")), O, U, ...X]);
export {
  oe as PasswordComp
};
