import { X as h, w as n, a2 as i, P as S, bI as f, cZ as g, Z as o, c6 as x, c7 as w, L as c, fe as C, az as $, a8 as r, G as u, ah as d, a9 as t, aa as a, bJ as v, ab as V, Y as b, F as l, av as m, cE as y, ff as P, cX as I, fg as k } from "./c988e26e.js";
import { useContext as s } from "react";
import "react-dom";
const F = (e, p) => m`
    &.ant-slider:not(.ant-slider-disabled) {
      &,
      &:hover,
      &:focus {
        .ant-slider-rail {
          background-color: ${e.track};
        }
        .ant-slider-track {
          background-color: ${e.fill};
        }
        .ant-slider-handle {
          background-color: ${e.thumb};
          border-color: ${e.thumbBorder};
        }
      }
      &:hover {
        .ant-slider-rail {
          background-color: ${y(e.track, 0.1)};
        }
      }
      .ant-slider-handle:focus {
        box-shadow: 0 0 0 5px ${P(y(e.thumbBorder, 0.08), 0.12)};
      }
      .ant-slider-handle::after {
        box-shadow: 0 0 0 2px ${I(e.thumbBorder, 0.1)};
      }
      .ant-slider-handle:hover,
      .ant-slider-handle:active,
      .ant-slider-handle:focus {
        &::after {
          box-shadow: 0 0 0 5px ${e.thumbBorder};
        }
      }
      ${p && m`
        width: auto;	
        min-height: calc(300px - ${e.margin});
        margin: ${e.margin} auto !important;
      `}
    }
  `, L = h(k)`
  ${(e) => e.$style && F(e.$style, e.vertical)}
`, M = h.div`
  width: 100%;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  .ant-slider {
    width: 100%;
  }
`, N = {
  max: n(i, "100"),
  min: n(i, "0"),
  step: n(i, "1"),
  label: S,
  disabled: f,
  onEvent: g,
  style: o(x, "style"),
  labelStyle: o(w.filter((e) => ["accent", "validate"].includes(e.name) === !1), "labelStyle"),
  prefixIcon: c,
  suffixIcon: c,
  inputFieldStyle: o(C, "inputFieldStyle"),
  animationStyle: o($, "animationStyle")
}, X = (e) => /* @__PURE__ */ r(u, {
  children: [["logic", "both"].includes(s(d).editorModeStatus) && /* @__PURE__ */ r(t, {
    name: a.interaction,
    children: [e.onEvent.getPropertyView(), v(e), V(e)]
  }), ["layout", "both"].includes(s(d).editorModeStatus) && e.label.getPropertyView(), ["layout", "both"].includes(s(d).editorModeStatus) && /* @__PURE__ */ r(u, {
    children: [/* @__PURE__ */ r(t, {
      name: a.layout,
      children: [e.prefixIcon.propertyView({
        label: b("button.prefixIcon")
      }), e.suffixIcon.propertyView({
        label: b("button.suffixIcon")
      })]
    }), /* @__PURE__ */ l(t, {
      name: a.style,
      children: e.style.getPropertyView()
    }), /* @__PURE__ */ l(t, {
      name: a.labelStyle,
      children: e.labelStyle.getPropertyView()
    }), /* @__PURE__ */ l(t, {
      name: a.inputFieldStyle,
      children: e.inputFieldStyle.getPropertyView()
    }), /* @__PURE__ */ l(t, {
      name: a.animationStyle,
      hasTooltip: !0,
      children: e.animationStyle.getPropertyView()
    })]
  })]
});
export {
  N as SliderChildren,
  X as SliderPropertyView,
  L as SliderStyled,
  M as SliderWrapper
};
