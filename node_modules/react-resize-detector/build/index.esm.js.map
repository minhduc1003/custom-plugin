{"version":3,"file":"index.esm.js","sources":["../src/utils.ts","../src/useResizeDetector.ts"],"sourcesContent":["import * as React from 'react';\nimport debounce from 'lodash/debounce';\nimport throttle from 'lodash/throttle';\nimport type { DebouncedFunc } from 'lodash';\n\nimport { OnRefChangeType, Props } from './types';\n\nexport type PatchedResizeObserverCallback = DebouncedFunc<ResizeObserverCallback> | ResizeObserverCallback;\n\n/**\n * Wraps the resize callback with a lodash debounce / throttle based on the refresh mode\n */\nexport const patchResizeCallback = (\n  resizeCallback: ResizeObserverCallback,\n  refreshMode: Props['refreshMode'],\n  refreshRate: Props['refreshRate'],\n  refreshOptions: Props['refreshOptions']\n): PatchedResizeObserverCallback => {\n  switch (refreshMode) {\n    case 'debounce':\n      return debounce(resizeCallback, refreshRate, refreshOptions);\n    case 'throttle':\n      return throttle(resizeCallback, refreshRate, refreshOptions);\n    default:\n      return resizeCallback;\n  }\n};\n\n/**\n * A custom hook that converts a callback to a ref to avoid triggering re-renders when passed as a\n * prop or avoid re-executing effects when passed as a dependency\n */\nexport const useCallbackRef =\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  <T extends (...args: any[]) => any>(callback: T | undefined): T => {\n    const callbackRef = React.useRef(callback);\n\n    React.useEffect(() => {\n      callbackRef.current = callback;\n    });\n\n    return React.useMemo(() => ((...args) => callbackRef.current?.(...args)) as T, []);\n  };\n\n/** `useRef` hook doesn't handle conditional rendering or dynamic ref changes.\n * This hook creates a proxy that ensures that `refElement` is updated whenever the ref is changed. */\nexport const useRefProxy =\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  <T extends HTMLElement = any>(targetRef: React.MutableRefObject<T | null> | undefined) => {\n    // we are going to use this ref to store the last element that was passed to the hook\n    const [refElement, setRefElement] = React.useState<T | null>(targetRef?.current || null);\n\n    // if targetRef is passed, we need to update the refElement\n    // we have to use setTimeout because ref get assigned after the hook is called\n    // in the future releases we are going to remove targetRef and force users to use ref returned by the hook\n    if (targetRef) {\n      setTimeout(() => {\n        if (targetRef.current !== refElement) {\n          setRefElement(targetRef.current);\n        }\n      }, 0);\n    }\n\n    // this is a memo that will be called every time the ref is changed\n    // This proxy will properly call setState either when the ref is called as a function or when `.current` is set\n    // we call setState inside to trigger rerender\n    const refProxy: OnRefChangeType<T> = React.useMemo(\n      () =>\n        new Proxy(\n          node => {\n            if (node !== refElement) {\n              setRefElement(node);\n            }\n          },\n          {\n            get(target, prop) {\n              if (prop === 'current') {\n                return refElement;\n              }\n              return target[prop];\n            },\n            set(target, prop, value) {\n              if (prop === 'current') {\n                setRefElement(value);\n              } else {\n                target[prop] = value;\n              }\n              return true;\n            }\n          }\n        ),\n      [refElement]\n    );\n\n    return { refProxy, refElement, setRefElement };\n  };\n\n/** Calculates the dimensions of the element based on the current box model.\n * @see https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/The_box_model\n */\nexport const getDimensions = (entry: ResizeObserverEntry, box: ResizeObserverBoxOptions | undefined) => {\n  // Value\t          Border\t  Padding\t  Inner Content\n  // ---------------------------------------------------\n  // 'border-box'\t    Yes\t      Yes\t      Yes\n  // 'content-box'\t  No\t      No\t      Yes\n  //  undefined       No\t      No?\t      Yes\n\n  if (box === 'border-box') {\n    return {\n      width: entry.borderBoxSize[0].inlineSize,\n      height: entry.borderBoxSize[0].blockSize\n    };\n  }\n\n  if (box === 'content-box') {\n    return {\n      width: entry.contentBoxSize[0].inlineSize,\n      height: entry.contentBoxSize[0].blockSize\n    };\n  }\n\n  return {\n    width: entry.contentRect.width,\n    height: entry.contentRect.height\n  };\n};\n","import { useEffect, useState, useRef, useCallback } from 'react';\nimport type { DebouncedFunc } from 'lodash';\n\nimport { getDimensions, patchResizeCallback, useCallbackRef, useRefProxy } from './utils';\n\nimport type { Dimensions, UseResizeDetectorReturn, useResizeDetectorProps } from './types';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction useResizeDetector<T extends HTMLElement = any>({\n  skipOnMount = false,\n  refreshMode,\n  refreshRate = 1000,\n  refreshOptions,\n  handleWidth = true,\n  handleHeight = true,\n  targetRef,\n  observerOptions,\n  onResize\n}: useResizeDetectorProps<T> = {}): UseResizeDetectorReturn<T> {\n  // If `skipOnMount` is enabled, skip the first resize event\n  const skipResize = useRef<boolean>(skipOnMount);\n\n  // Wrap the `onResize` callback with a ref to avoid re-renders\n  const onResizeRef = useCallbackRef(onResize);\n\n  const [size, setSize] = useState<Dimensions>({\n    width: undefined,\n    height: undefined\n  });\n\n  // Create a proxy ref to handle conditional rendering and dynamic ref changes of the target element\n  const { refProxy, refElement } = useRefProxy<T>(targetRef);\n\n  const { box } = observerOptions || {};\n\n  const resizeCallback: ResizeObserverCallback = useCallback(\n    (entries: ResizeObserverEntry[]) => {\n      if (!handleWidth && !handleHeight) return;\n\n      if (skipResize.current) {\n        skipResize.current = false;\n        return;\n      }\n\n      // Only update the size if one of the observed dimensions has changed\n      const shouldSetSize = (prevSize: Dimensions, nextSize: Dimensions) =>\n        (handleWidth && prevSize.width !== nextSize.width) || (handleHeight && prevSize.height !== nextSize.height);\n\n      entries.forEach(entry => {\n        const dimensions = getDimensions(entry, box);\n        setSize(prevSize => {\n          if (!shouldSetSize(prevSize, dimensions)) return prevSize;\n          onResizeRef?.({\n            width: dimensions.width,\n            height: dimensions.height,\n            entry\n          });\n          return dimensions;\n        });\n      });\n    },\n    [handleWidth, handleHeight, skipResize, box]\n  );\n\n  // Throttle/Debounce the resize event if refreshMode is configured\n  const resizeHandler = useCallback(patchResizeCallback(resizeCallback, refreshMode, refreshRate, refreshOptions), [\n    resizeCallback,\n    refreshMode,\n    refreshRate,\n    refreshOptions\n  ]);\n\n  // Attach ResizeObserver to the element\n  useEffect(() => {\n    let resizeObserver: ResizeObserver | undefined;\n    if (refElement) {\n      resizeObserver = new window.ResizeObserver(resizeHandler);\n      resizeObserver.observe(refElement, observerOptions);\n    }\n    // If refElement is not available, reset the size\n    else if (size.width || size.height) {\n      onResizeRef?.({\n        width: null,\n        height: null,\n        entry: null\n      });\n      setSize({ width: undefined, height: undefined });\n    }\n\n    // Disconnect the ResizeObserver when the component is unmounted\n    return () => {\n      resizeObserver?.disconnect?.();\n      (resizeHandler as DebouncedFunc<ResizeObserverCallback>).cancel?.();\n    };\n  }, [resizeHandler, refElement]);\n\n  return { ref: refProxy, ...size };\n}\n\nexport default useResizeDetector;\n"],"names":[],"mappings":"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"}