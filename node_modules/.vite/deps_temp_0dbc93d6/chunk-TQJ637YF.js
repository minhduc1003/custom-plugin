import {
  C,
  D,
  I,
  M,
  S,
  h as h2,
  k,
  y
} from "./chunk-XIX4IVKI.js";
import {
  ae,
  b,
  ie,
  le,
  ne,
  re,
  ue
} from "./chunk-KGJNSQSZ.js";
import {
  h
} from "./chunk-A3UAJ3XR.js";
import {
  $S,
  A9,
  BXe,
  Bse,
  C5,
  E7,
  Fj1,
  H0,
  JA,
  LQe,
  M8t,
  N,
  T2,
  VS,
  ZK1,
  _,
  _Qe,
  ao,
  b0,
  ca,
  d,
  de,
  fW1,
  gh,
  h5n,
  ka,
  mB1,
  nc,
  p1,
  uW1,
  vo
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/83d1a1b5.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var ve = de(A9)`
box-shadow: ${(e) => {
  var r, d2;
  return `${(r = e.$style) == null ? void 0 : r.boxShadow} ${(d2 = e.$style) == null ? void 0 : d2.boxShadowColor}`;
}};
  ${(e) => {
  var r;
  return T2`
    ${ue(e.$style)}
    input {
      padding: ${(r = e.style) == null ? void 0 : r.padding};
    }
    .ant-select-single {
      width: 100% !important;
    }
  `;
}}
`;
var ge = {
  ...ne,
  viewRef: ZK1,
  allowClear: ao.DEFAULT_TRUE,
  style: nc(fW1, "style"),
  labelStyle: nc(uW1, "labelStyle"),
  prefixIcon: C5,
  suffixIcon: C5,
  items: $S(S, I),
  ignoreCase: ao.DEFAULT_TRUE,
  searchFirstPY: ao.DEFAULT_TRUE,
  searchCompletePY: ao,
  searchLabelOnly: ao.DEFAULT_TRUE,
  valueOrLabel: ca(D, "label"),
  autoCompleteType: ca(M, "normal"),
  autocompleteIconColor: ca(C, "blue"),
  componentSize: ca(k, "small"),
  valueInItems: JA("valueInItems"),
  inputFieldStyle: nc(Bse, "inputFieldStyle"),
  animationStyle: nc(Fj1, "animationStyle")
};
var Se = (e) => e.hasOwnProperty("validateStatus") && e.validateStatus === "error" ? "error" : "";
var S2 = function() {
  return new VS(ge, (e) => {
    const {
      items: r,
      onEvent: d2,
      placeholder: R,
      searchFirstPY: b2,
      searchCompletePY: x,
      searchLabelOnly: A,
      ignoreCase: w,
      valueOrLabel: I2,
      autoCompleteType: be,
      autocompleteIconColor: xe,
      componentSize: $
    } = e, h3 = () => ({
      value: {
        value: e.value.value
      },
      required: e.required,
      minLength: (e == null ? void 0 : e.minLength) ?? 0,
      maxLength: (e == null ? void 0 : e.maxLength) ?? 0,
      validationType: e.validationType,
      regex: e.regex,
      customRule: e.customRule
    }), [Y, z] = (0, import_react.useState)(false), [B, f] = (0, import_react.useState)(e.value.value), [F, L] = (0, import_react.useState)({}), [o, we] = (0, import_react.useState)(h5n() === "zh-cn");
    return (0, import_react.useEffect)(() => {
      f(e.value.value), Y && L(b(h3()));
    }, [e.value.value, e.required, e == null ? void 0 : e.minLength, e == null ? void 0 : e.maxLength, e.validationType, e.regex, e.customRule]), e.label({
      required: e.required,
      children: d(p1, {
        children: d(gh, {
          theme: {
            token: {
              colorBgContainer: e.inputFieldStyle.background,
              colorBorder: e.inputFieldStyle.border,
              borderRadius: parseInt(e.inputFieldStyle.radius),
              colorText: e.inputFieldStyle.text,
              colorPrimary: e.inputFieldStyle.accent,
              controlHeight: $ === "small" ? 30 : 38
            }
          },
          children: d(M8t, {
            disabled: e.disabled,
            value: B,
            options: r,
            style: {
              width: "100%"
            },
            onChange: (n, t) => {
              e.valueInItems.onChange(false), L(b(h3())), f(n), e.value.onChange(n), e.onEvent("change");
            },
            onFocus: () => {
              z(true), e.onEvent("focus");
            },
            onBlur: () => e.onEvent("blur"),
            onSelect: (n, t) => {
              f(t[I2]), e.valueInItems.onChange(true), e.value.onChange(t[I2]), e.onEvent("submit");
            },
            filterOption: (n, t) => {
              if (w) {
                if (t != null && t.label && (t == null ? void 0 : t.label.toUpperCase().indexOf(n.toUpperCase())) !== -1)
                  return true;
              } else if (t != null && t.label && (t == null ? void 0 : t.label.indexOf(n)) !== -1)
                return true;
              if (o && b2 && (t != null && t.label) && t.label.spell("first").toString().toLowerCase().indexOf(n.toLowerCase()) >= 0 || o && x && (t != null && t.label) && t.label.spell().toString().toLowerCase().indexOf(n.toLowerCase()) >= 0)
                return true;
              if (!A) {
                if (w) {
                  if (t != null && t.value && (t == null ? void 0 : t.value.toUpperCase().indexOf(n.toUpperCase())) !== -1)
                    return true;
                } else if (t != null && t.value && (t == null ? void 0 : t.value.indexOf(n)) !== -1)
                  return true;
                if (o && b2 && (t != null && t.value) && t.value.spell("first").toString().toLowerCase().indexOf(n.toLowerCase()) >= 0 || o && x && (t != null && t.value) && t.value.spell().toString().toLowerCase().indexOf(n.toLowerCase()) >= 0)
                  return true;
              }
              return false;
            },
            children: d(ve, {
              ref: e.viewRef,
              placeholder: R,
              allowClear: e.allowClear,
              $style: e.inputFieldStyle,
              prefix: BXe(e.prefixIcon) && e.prefixIcon,
              suffix: BXe(e.suffixIcon) && e.suffixIcon,
              status: Se(F),
              onPressEnter: void 0
            })
          })
        })
      }),
      style: e.style,
      labelStyle: e.labelStyle,
      inputFieldStyle: e.inputFieldStyle,
      animationStyle: e.animationStyle,
      ...F
    });
  }).setPropertyViewFn((e) => N(p1, {
    children: [N(ka, {
      children: [e.autoCompleteType.getView() === "normal" && e.prefixIcon.propertyView({
        label: _("button.prefixIcon")
      }), e.autoCompleteType.getView() === "normal" && e.suffixIcon.propertyView({
        label: _("button.suffixIcon")
      }), mB1(e)]
    }), N(ka, {
      name: _("autoComplete.SectionDataName"),
      children: [e.items.propertyView({
        label: _("autoComplete.value"),
        tooltip: y,
        placeholder: "[]"
      }), h5n() === "zh-cn" && e.searchFirstPY.propertyView({
        label: _("autoComplete.searchFirstPY")
      }), h5n() === "zh-cn" && e.searchCompletePY.propertyView({
        label: _("autoComplete.searchCompletePY")
      }), e.searchLabelOnly.propertyView({
        label: _("autoComplete.searchLabelOnly")
      }), e.ignoreCase.propertyView({
        label: _("autoComplete.ignoreCase")
      }), e.valueOrLabel.propertyView({
        label: _("autoComplete.checkedValueFrom"),
        radioButton: true
      })]
    }), d(re, {
      ...e
    }), d(h, {
      ...e
    }), e.label.getPropertyView(), d(ie, {
      ...e
    }), d(le, {
      ...e
    }), d(ka, {
      name: b0.layout,
      children: E7(e)
    }), d(ka, {
      name: b0.style,
      children: e.style.getPropertyView()
    }), d(ka, {
      name: b0.labelStyle,
      children: e.labelStyle.getPropertyView()
    }), d(ka, {
      name: b0.inputFieldStyle,
      children: e.inputFieldStyle.getPropertyView()
    }), d(ka, {
      name: b0.animationStyle,
      hasTooltip: true,
      children: e.animationStyle.getPropertyView()
    })]
  })).setExposeMethodConfigs(h2).setExposeStateConfigs([new vo("value", _("export.inputValueDesc")), new vo("valueInItems", _("autoComplete.valueInItems")), _Qe, LQe, ...ae]).build();
}();
S2 = class extends S2 {
  autoHeight() {
    return true;
  }
};
var Ee = H0(S2, [new vo("value", _("export.inputValueDesc")), new vo("valueInItems", _("autoComplete.valueInItems")), _Qe, LQe, ...ae]);

export {
  Ee
};
//# sourceMappingURL=chunk-TQJ637YF.js.map
