import {
  x
} from "./chunk-Y7AE76OL.js";
import {
  ne
} from "./chunk-YT7XWS54.js";
import {
  BXe,
  C5,
  G$,
  M2,
  N,
  _,
  ao,
  d,
  de,
  p1,
  pQe,
  t2,
  vc
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/98885dce.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var F = de.div`
  .ant-input-number  {
    width: 100%;
    border-radius: 0;
    background: transparent !important;
    // padding: 0 !important;
    box-shadow: none;

    input {
      padding: 0;
      border-radius: 0;
    }
  }
`;
var S = {
  text: vc,
  step: t2(vc, 1),
  precision: pQe.closed(0, 20, 0),
  float: ao,
  prefix: M2,
  prefixIcon: C5,
  suffixIcon: C5,
  suffix: M2
};
var r = false;
var m = 1;
var l = 0;
var x2 = (t) => t.text;
var A = function() {
  return new ne(S, (t, e) => {
    r = t.float, m = t.step, l = t.precision;
    const a = t.changeValue ?? x2(t);
    let n = r ? a : Math.floor(a);
    return r && (n = n.toFixed(l + 1)), N(p1, {
      children: [BXe(t.prefixIcon) && d("span", {
        children: t.prefixIcon
      }), d("span", {
        children: t.prefix + n + t.suffix
      }), BXe(t.suffixIcon) && d("span", {
        children: t.suffixIcon
      }), " "]
    });
  }, (t) => t.text.value, x2).setEditViewFn((t) => d(F, {
    children: d(G$, {
      step: m,
      defaultValue: t.value,
      autoFocus: true,
      variant: "borderless",
      onChange: (e) => {
        e = e ?? 0, t.onChange(r ? e : Math.floor(e));
      },
      precision: r ? l : 0,
      onBlur: t.onChangeEnd,
      onPressEnter: t.onChangeEnd
    })
  })).setPropertyViewFn((t) => N(p1, {
    children: [t.text.propertyView({
      label: _("table.columnValue"),
      tooltip: x
    }), t.step.propertyView({
      label: _("table.numberStep"),
      tooltip: _("table.numberStepTooltip"),
      onFocus: (e) => {
        if (!e) {
          const a = t.step.getView(), V = t.float.getView() ? a : Math.floor(a);
          t.step.dispatchChangeValueAction(String(V));
        }
      }
    }), r && t.precision.propertyView({
      label: _("table.precision")
    }), t.prefix.propertyView({
      label: _("table.prefix")
    }), t.prefixIcon.propertyView({
      label: _("button.prefixIcon")
    }), t.suffix.propertyView({
      label: _("table.suffix")
    }), t.suffixIcon.propertyView({
      label: _("button.suffixIcon")
    }), t.float.propertyView({
      label: _("table.float"),
      onChange: (e) => {
        const a = t.step.getView(), n = e ? a : Math.floor(a);
        t.step.dispatchChangeValueAction(String(n));
      }
    })]
  })).build();
}();

export {
  A
};
//# sourceMappingURL=chunk-MEZEKXQL.js.map
