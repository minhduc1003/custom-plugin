import {
  C11,
  E7,
  Fj1,
  H0,
  N,
  QU1,
  U8,
  VS,
  Vr,
  _,
  ao,
  b0,
  b11,
  ca,
  d,
  dW1,
  de,
  g11,
  hQ,
  ka,
  nc,
  p1,
  s2e,
  sW1,
  sa,
  sne,
  vo,
  y11,
  ya,
  z3
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/203cb838.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var it = de.div`
  align-items: center;
  cursor: pointer;
  font-size: 2.9em;
  text-align: center;
  word-wrap: break-word;
  line-height: initial;
  ${(t) => t.$animationStyle}
  background-color: ${(t) => {
  var e;
  return (e = t.$style) == null ? void 0 : e.background;
}};
 font-weight: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.textWeight;
}};
border-radius: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.radius;
}};
font-size: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.textSize;
}};
rotate: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.rotation;
}};
text-transform: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.textTransform;
}};
color: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.text;
}};
border: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.border;
}};
border-style: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.borderStyle;
}};
border-width: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.borderWidth;
}};
font-family: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.fontFamily;
}};
font-style: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.fontStyle;
}};
margin: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.margin;
}};
padding: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.padding;
}};
background: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.background;
}};
text-decoration: ${(t) => {
  var e;
  return (e = t == null ? void 0 : t.$style) == null ? void 0 : e.textDecoration;
}};
`;
var lt = de.div`
  width: 100%;
  min-height: 35px;
  display: flex;
  justify-content: center;
  padding-right: 15px;
  padding-bottom: 10px;
  margin-top: 10px;
`;
var P = de(sa)`
background-color: ${(t) => t.$style.background};
font-weight: ${(t) => t.$style.textWeight};
border-radius: ${(t) => t.$style.radius};
font-size: ${(t) => t.$style.textSize};
rotate: ${(t) => t.$style.rotation};
text-transform: ${(t) => t.$style.textTransform};
color: ${(t) => t.$style.text};
border: ${(t) => t.$style.border};
border-style: ${(t) => t.$style.borderStyle};
border-width: ${(t) => t.$style.borderWidth};
font-family: ${(t) => t.$style.fontFamily};
font-style: ${(t) => t.$style.fontStyle};
margin: ${(t) => t.$style.margin};
padding: ${(t) => t.$style.padding};
background: ${(t) => t.$style.background};
text-decoration: ${(t) => t.$style.textDecoration};
`;
function rt(t) {
  const e = Math.floor(t / 36e5), y = Math.floor(t % (1e3 * 60 * 60) / (1e3 * 60)), n = Math.floor(t % (1e3 * 60) / 1e3), l = t % 1e3;
  return `${g(e)}:${g(y)}:${g(n)}:${g(l, 3)}`;
}
function g(t, e = 2) {
  return String(t).padStart(e, "0");
}
var dt = [y11, g11, sne, C11, b11];
var ot = [{
  label: _("timer.timer"),
  value: "timer"
}, {
  label: _("timer.countdown"),
  value: "countdown"
}];
var st = {
  style: nc(sW1),
  animationStyle: nc(Fj1),
  startButtonStyle: nc(dW1),
  resetButtonStyle: nc(dW1),
  onEvent: ya(dt),
  defaultValue: QU1("defaultValue", "00:00:00:000"),
  timerType: ca(ot, "timer"),
  elapsedTime: z3(0),
  timerState: z3("stoped"),
  actionHandler: z3(""),
  hideButton: ao
};
var ct = (t) => {
  const [e, y] = (0, import_react.useState)(0), [n, l] = (0, import_react.useState)("stoped"), [$, S] = (0, import_react.useState)(0), [r, D] = (0, import_react.useState)(0), [z, T] = (0, import_react.useState)(true);
  (0, import_react.useEffect)(() => {
    t.actionHandler != "" && (t.actionHandler === "start" ? B() : t.actionHandler === "pause" ? H() : t.actionHandler === "resume" ? C() : t.actionHandler === "reset" && E(), t.dispatch(U8("actionHandler", "", true)));
  }, [t.actionHandler]), (0, import_react.useEffect)(() => {
    n === "stoped" && S(u);
  }, [t.defaultValue.value]), (0, import_react.useEffect)(() => {
    n === "started" && N2();
  }, [e]), (0, import_react.useEffect)(() => {
    n === "stoped" && r && r && clearInterval(r), t.dispatch(U8("timerState", n, false));
  }, [n]);
  const u = (0, import_react.useMemo)(() => {
    const [o, W, F, j] = t.defaultValue.value && t.defaultValue.value.split(":") || [];
    let M = parseInt(o, 10) * 36e5 + parseInt(W, 10) * 6e4 + parseInt(F, 10) * 1e3 + parseInt(j, 10);
    return isNaN(M) ? 0 : M;
  }, [t.defaultValue.value]), N2 = () => {
    D(Number(setInterval(() => {
      let o = t.timerType === "timer" ? Date.now() - e : u - (Date.now() - e);
      o <= 0 && (l("stoped"), t.onEvent("countdown"), T(false), o = 0), S(o), t.dispatch(U8("elapsedTime", o, false));
    }, 18)));
  }, B = () => {
    l("started"), t.onEvent("start"), y(t.timerType === "timer" ? Date.now() - u : Date.now());
  }, H = () => {
    r && clearInterval(r), l("paused"), t.onEvent("pause");
  }, C = () => {
    y(t.timerType === "timer" ? Date.now() - $ : Date.now() - (u - $)), l("started"), t.onEvent("resume");
  }, E = () => {
    r && clearInterval(r), l("stoped"), S(u), T(true), t.onEvent("reset");
  };
  return N(it, {
    $style: t.style,
    $animationStyle: t.animationStyle,
    children: [rt($), d(lt, {
      hidden: t.hideButton,
      children: N(hQ, {
        children: [d(P, {
          $style: t.startButtonStyle,
          disabled: !z,
          type: n === "stoped" ? "primary" : "default",
          onClick: () => {
            n === "stoped" ? B() : n === "started" ? H() : n === "paused" && C();
          },
          children: n === "stoped" ? _("timer.start") : n === "started" ? _("timer.pause") : _("timer.resume")
        }), d(P, {
          $style: t.resetButtonStyle,
          onClick: () => E(),
          children: _("timer.reset")
        })]
      })
    })]
  });
};
var ut = function() {
  return new VS(st, (t, e) => d(ct, {
    ...t,
    dispatch: e
  })).setPropertyViewFn((t) => N(p1, {
    children: [["logic", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && N(p1, {
      children: [N(ka, {
        name: b0.basic,
        children: [t.timerType.propertyView({
          label: _("timer.timerType")
        }), t.defaultValue.propertyView({
          label: _("timer.defaultValue")
        }), t.hideButton.propertyView({
          label: _("timer.hideButton")
        })]
      }), N(ka, {
        name: b0.interaction,
        children: [E7(t), t.onEvent.propertyView()]
      })]
    }), ["layout", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && N(p1, {
      children: [d(ka, {
        name: b0.style,
        children: t.style.getPropertyView()
      }), d(ka, {
        name: b0.animationStyle,
        hasTooltip: true,
        children: t.animationStyle.getPropertyView()
      }), d(ka, {
        name: b0.startButtonStyle,
        children: t.startButtonStyle.getPropertyView()
      }), d(ka, {
        name: b0.resetButtonStyle,
        children: t.resetButtonStyle.getPropertyView()
      })]
    })]
  })).setExposeMethodConfigs([{
    method: {
      name: "start/pause",
      description: _("timer.startPause"),
      params: []
    },
    execute: async (t, e) => {
      t.children.timerState.value === "stoped" ? t.children.actionHandler.dispatch(t.children.actionHandler.changeValueAction("start")) : t.children.timerState.value === "paused" ? t.children.actionHandler.dispatch(t.children.actionHandler.changeValueAction("resume")) : t.children.timerState.value === "started" && t.children.actionHandler.dispatch(t.children.actionHandler.changeValueAction("pause"));
    }
  }, {
    method: {
      name: "reset",
      description: _("timer.reset"),
      params: []
    },
    execute: async (t, e) => {
      t.children.actionHandler.dispatch(t.children.actionHandler.changeValueAction("reset"));
    }
  }]).build();
}();
var ft = H0(ut, [new vo("defaultValue", _("timer.defaultValue")), new vo("elapsedTime", _("timer.elapsedTime")), new vo("timerState", _("timer.timerState")), s2e]);
export {
  ft as TimerComp
};
//# sourceMappingURL=203cb838-VHUPA2LZ.js.map
