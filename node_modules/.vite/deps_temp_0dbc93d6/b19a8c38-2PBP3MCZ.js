import {
  Bn,
  N0,
  PL,
  Qh,
  To,
  _n,
  ae1
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/b19a8c38.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var C = Bn(123);
var s = "TestComp";
var n = "comps/lazyLoadComp/lazyLoadComp.test";
var d = ae1(s, n);
test("lazyload comp", async () => {
  let e = null;
  e = new d({
    dispatch: (t) => {
      e && (e = e.reduce(t));
    }
  }), expect(e.toJsonValue()).toBe(void 0), await e.load(), expect(e.toJsonValue()).toBe(123), e.dispatchChangeValueAction(345), expect(e.toJsonValue()).toBe(345);
});
test("lazyload comp keep values", async () => {
  let e = null;
  e = new d({
    dispatch: (t) => {
      e && (e = e.reduce(t));
    },
    value: 456
  }), expect(e.toJsonValue()).toBe(456), await e.load(), expect(e.toJsonValue()).toBe(456);
});
test("lazyload comp exposing data", async () => {
  const e = ae1(s, n, async () => Qh(To({
    hello: Bn(123)
  }), (a) => ({
    hello: a.children.hello.getView()
  })));
  let t = null;
  t = new e({
    dispatch: (a) => {
      t && (t = t.reduce(a));
    }
  }), await t.load();
  const o = PL(t);
  expect(o.exposingValues.hello).toBe(123);
});
test("lazyload comp execute method", async () => {
  const e = ae1(s, n, async () => N0(To({
    hello: Bn(123)
  }), [{
    method: {
      name: "add",
      params: [{
        name: "value",
        type: "number"
      }]
    },
    execute: (o, a) => {
      const p = o.children.hello;
      p.dispatchChangeValueAction(p.getView() + a[0]);
    }
  }]));
  let t = null;
  t = new e({
    dispatch: (o) => {
      t && (t = t.reduce(o));
    }
  }), await t.load(), t.reduce(_n({
    type: "execute",
    methodName: "add",
    params: [10]
  }, false)), await new Promise((o) => setTimeout(o, 20)), expect(t.children.hello.getView()).toEqual(133);
});
export {
  C as TestComp
};
//# sourceMappingURL=b19a8c38-2PBP3MCZ.js.map
