{
  "version": 3,
  "sources": ["../../lowcoder-sdk/dist/2088ebd5.js"],
  "sourcesContent": ["import { av as n, cW as b, cX as c, X as u, cY as d, P as k, bI as x, cZ as f, c_ as $, Z as a, c6 as m, c7 as s, a4 as g, N as v, c$ as p, az as C, U as S, F as i, ac as w, ae as B, Y as W, bL as I, d0 as F, bS as D } from \"./c988e26e.js\";\nimport { SelectInputValidationChildren as E, useSelectInputValidate as R, selectDivRefMethods as V, SelectInputInvalidConfig as z } from \"./d3b0afba.js\";\nimport { formDataChildren as L } from \"./85e61f03.js\";\nimport { RadioLayoutOptions as O, RadioPropertyView as y } from \"./36c2248f.js\";\nimport \"react\";\nimport { fixOldInputCompData as M } from \"./70f9cad3.js\";\nimport \"react-dom\";\nconst N = (e) => n`\n    .ant-checkbox-wrapper:not(.ant-checkbox-wrapper-disabled) {\n      color: ${e.staticText};\n      max-width: calc(100% - 8px);\n\n      span:not(.ant-checkbox) {\n        ${b};\n      }\n\n      .ant-checkbox .ant-checkbox-checked > .ant-checkbox-inner {\n        border-color: ${e.checkedBorder};\n        border-width:${e.borderWidth ? e.borderWidth : \"2px\"};\n      }\n\n      .ant-checkbox:not(.ant-checkbox-checked) > .ant-checkbox-inner{\n        border-color: ${e.uncheckedBorder};\n        border-width:${e.borderWidth ? e.borderWidth : \"2px\"};\n      }\n\n      .ant-checkbox-checked:not(.ant-checkbox-disabled) {\n        .ant-checkbox-inner {\n          background-color: ${e.checkedBackground};\n          border-color: ${e.checkedBorder};\n          border-width:${e.borderWidth ? e.borderWidth : \"2px\"};\n\n          &::after {\n            border-color: ${e.checked};\n          }\n        }\n\n        &::after {\n          border-color: ${e.checkedBorder};\n          border-width:${e.borderWidth ? e.borderWidth : \"2px\"};\n          border-radius: ${e.radius};\n        }\n      }\n      \n      .ant-checkbox-inner) {\n        background-color: ${e.uncheckedBackground};\n        border-radius: ${e.radius};\n        border-color: ${e.checkedBorder};\n        border-width:${e.borderWidth ? e.borderWidth : \"2px\"};\n      }\n    \n      &:hover .ant-checkbox-inner, \n      .ant-checkbox:hover .ant-checkbox-inner,\n      .ant-checkbox-input + ant-checkbox-inner {\n        ${e.hoverBackground && `background-color: ${e.hoverBackground}`};\n        ${e.hoverBackground && `border-color: ${e.hoverBackground}`};\n      }\n\n      \n\n      &:hover .ant-checkbox-inner,\n      .ant-checkbox:hover .ant-checkbox-inner,\n      .ant-checkbox-input:focus + .ant-checkbox-inner {\n        border-color: ${e.checkedBorder};\n        border-width:${e.borderWidth ? e.borderWidth : \"2px\"};\n      }\n\n      &:hover .ant-checkbox-checked:not(.ant-checkbox-disabled) .ant-checkbox-inner {\n        background-color: ${e.hoverBackground || c(e.checkedBackground, 0.1)};\n        border-color: ${e.hoverBackground || c(e.checkedBackground, 0.1)};\n      }\n    }\n\n    \n\n    .ant-checkbox-group-item {\n      font-family:${e.fontFamily};\n      font-size:${e.textSize};\n      font-weight:${e.textWeight};\n      font-style:${e.fontStyle};\n      text-transform:${e.textTransform};\n      text-decoration:${e.textDecoration};\n    }\n    .ant-checkbox-wrapper {\n      padding: ${e.padding};\n      .ant-checkbox-inner,\n      .ant-checkbox-checked::after {\n        border-radius: ${e.radius};\n      }\n    }\n  `, P = u(F)`\n  min-height: 32px;\n  ${(e) => e.$style && N(e.$style)}\n  ${(e) => {\n  if (e.$layout === \"horizontal\")\n    return n`\n        display: flex;\n        align-items: center;\n        flex-wrap: wrap;\n      `;\n  if (e.$layout === \"vertical\")\n    return n`\n        display: flex;\n        flex-direction: column;\n      `;\n  if (e.$layout === \"auto_columns\")\n    return n`\n        break-inside: avoid;\n        columns: 160px;\n      `;\n}}\n`;\nlet t = function() {\n  const e = {\n    defaultValue: d(\"defaultValue\"),\n    value: d(\"value\"),\n    label: k,\n    disabled: x,\n    onEvent: f,\n    options: $,\n    style: a(m, \"style\"),\n    labelStyle: a(s.filter((o) => [\"accent\", \"validate\", \"lineheight\"].includes(o.name) === !1), \"labelStyle\"),\n    layout: g(O, \"horizontal\"),\n    viewRef: v,\n    inputFieldStyle: a(p, \"inputFieldStyle\"),\n    animationStyle: a(C, \"animationStyle\"),\n    ...E,\n    ...L\n  };\n  return new S(e, (o) => {\n    const [l, h] = R(o);\n    return o.label({\n      required: o.required,\n      style: o.style,\n      labelStyle: o.labelStyle,\n      inputFieldStyle: o.inputFieldStyle,\n      animationStyle: o.animationStyle,\n      children: /* @__PURE__ */ i(P, {\n        ref: o.viewRef,\n        disabled: o.disabled,\n        value: o.value.value,\n        $style: o.inputFieldStyle,\n        $layout: o.layout,\n        options: o.options.filter((r) => r.value !== void 0 && !r.hidden).map((r) => ({\n          label: r.label,\n          value: r.value,\n          disabled: r.disabled\n        })),\n        onChange: (r) => {\n          h(r);\n        }\n      }),\n      ...l\n    });\n  }).setPropertyViewFn((o) => /* @__PURE__ */ i(y, {\n    ...o\n  })).setExposeMethodConfigs(V).build();\n}();\nt = D(t, M);\nconst Z = w(t, [new B(\"value\", W(\"selectInput.valueDesc\")), z, ...I]);\nexport {\n  Z as CheckboxComp,\n  N as getStyle\n};\n"],
  "mappings": "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",
  "names": ["N", "de"]
}
