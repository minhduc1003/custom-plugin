import {
  d
} from "./chunk-3BT4U3F2.js";
import {
  $6n,
  Bn,
  Fse,
  IXe,
  M2,
  Pse,
  R6n,
  S0,
  Xj1,
  Yj1,
  Zj1,
  _,
  ao,
  d3,
  dee,
  g2,
  gM,
  h1,
  nV,
  nc,
  t2,
  v6e,
  yw,
  zte
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/e6ae73db.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var x = {
  header: nV,
  sider: nV,
  body: t2(dee(d), {
    0: {
      view: {
        layout: {},
        items: {}
      }
    }
  }),
  showApp: ao,
  contentApp: M2,
  baseUrl: M2,
  footer: nV,
  showHeader: ao.DEFAULT_TRUE,
  showSider: ao.DEFAULT_TRUE,
  innerSider: ao.DEFAULT_TRUE,
  siderCollapsible: t2(ao, false),
  siderCollapsed: t2(ao, false),
  siderRight: t2(ao, false),
  siderWidth: t2(M2, "20%"),
  siderCollapsedWidth: t2(M2, "0"),
  showFooter: ao,
  horizontalGridCells: v6e,
  autoHeight: gM,
  siderScrollbars: t2(ao, false),
  contentScrollbars: t2(ao, false),
  style: nc(Pse, "style"),
  headerStyle: nc(Zj1, "headerStyle"),
  siderStyle: nc(Yj1, "siderStyle"),
  bodyStyle: nc(Fse, "bodyStyle"),
  footerStyle: nc(Xj1, "footerStyle"),
  appliedThemeId: Bn("")
};
var E = zte(new g2(x, (a, e) => ({
  ...a,
  dispatch: e
})).build(), $6n);
var L = class extends E {
  // scrollbars: any;
  allContainers() {
    return [this.children.header, this.children.sider, ...Object.values(this.children.body.getView()).map((e) => e.children.view), this.children.footer];
  }
  realSimpleContainer(e) {
    return h1.isNil(e) ? this.children.body.getView()[0].children.view : this.allContainers().find((t) => t.realSimpleContainer(e));
  }
  getCompTree() {
    return R6n(this.allContainers().map((e) => e.getCompTree()));
  }
  findContainer(e) {
    for (const t of this.allContainers()) {
      const o = t.findContainer(e);
      if (o)
        return o === t ? this : o;
    }
  }
  getPasteValue(e) {
    return {
      ...this.toJsonValue(),
      header: this.children.header.getPasteValue(e),
      sider: this.children.sider.getPasteValue(e),
      body: h1.mapValues(this.children.body.getView(), (t) => ({
        ...t.toJsonValue(),
        view: t.children.view.getPasteValue(e)
      })),
      footer: this.children.footer.getPasteValue(e)
    };
  }
  autoHeight() {
    return this.children.autoHeight.getView();
  }
  exposingNode() {
    const e = {};
    return IXe(this.getCompTree(), (t) => {
      const o = t.children.comp;
      let l = o.exposingNode();
      if (yw(l) && !l.children.hasOwnProperty("formDataKey")) {
        const p = o.children.formDataKey;
        p && (l = d3({
          ...l.children,
          formDataKey: p.exposingNode()
        }));
      }
      return e[t.children.name.getView()] = l, true;
    }), S0(this, "exposing_node", d3(e), u);
  }
  getPropertyView() {
    return [this.areaPropertyView(), this.gridPropertyView(), this.heightPropertyView()];
  }
  areaPropertyView() {
    return [this.children.showHeader.propertyView({
      label: _("prop.showHeader")
    }), this.children.showSider.propertyView({
      label: _("prop.showSider")
    }), this.children.siderRight.propertyView({
      label: _("prop.siderRight")
    }), this.children.innerSider.propertyView({
      label: _("prop.innerSider")
    }), this.children.siderCollapsible.propertyView({
      label: _("prop.siderCollapsible")
    }), this.children.siderCollapsed.propertyView({
      label: _("prop.siderCollapsed")
    }), this.children.showFooter.propertyView({
      label: _("prop.showFooter")
    }), this.children.siderWidth.propertyView({
      label: _("prop.siderWidth"),
      tooltip: _("prop.siderWidthTooltip")
    }), this.children.siderCollapsedWidth.propertyView({
      label: _("prop.siderCollapsedWidth"),
      tooltip: _("prop.siderCollapsedWidthTooltip")
    })];
  }
  heightPropertyView() {
    return [this.children.autoHeight.getPropertyView(), this.children.siderScrollbars.propertyView({
      label: _("prop.siderScrollbar")
    }), !this.children.autoHeight.getView() && this.children.contentScrollbars.propertyView({
      label: _("prop.contentScrollbar")
    })];
  }
  gridPropertyView() {
    return [this.children.horizontalGridCells.propertyView({
      label: _("prop.horizontalGridCells")
    })];
  }
  appSelectorPropertyView() {
    return [this.children.showApp.propertyView({
      label: _("prop.showApp"),
      tooltip: _("prop.showAppTooltip")
    }), this.children.showApp.getView() && this.children.contentApp.propertyView({
      label: _("prop.appID")
    }), this.children.showApp.getView() && this.children.baseUrl.propertyView({
      label: _("prop.baseURL")
    })];
  }
  stylePropertyView() {
    return this.children.style.getPropertyView();
  }
  headerStylePropertyView() {
    return this.children.headerStyle.getPropertyView();
  }
  siderStylePropertyView() {
    return this.children.siderStyle.getPropertyView();
  }
  bodyStylePropertyView() {
    return this.children.bodyStyle.getPropertyView();
  }
  footerStylePropertyView() {
    return this.children.footerStyle.getPropertyView();
  }
};
function u(a, e) {
  if (a === e)
    return true;
  if (a && e && yw(a) && yw(e)) {
    const t = a.children, o = e.children, l = Object.keys(t);
    return l.length === Object.keys(o).length && l.every((p) => u(t[p], o[p]));
  }
  return false;
}

export {
  L
};
//# sourceMappingURL=chunk-HSFC3LCQ.js.map
