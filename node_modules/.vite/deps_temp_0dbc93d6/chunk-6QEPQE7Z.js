import {
  te
} from "./chunk-WX2SP7KE.js";
import {
  Uo
} from "./chunk-NCDKRTSH.js";
import {
  D
} from "./chunk-PJT5DRVG.js";
import {
  DPe,
  E7,
  Fa,
  G3,
  If2,
  N,
  P2e,
  RN2,
  T2,
  U4,
  V9,
  WKe,
  Yg,
  Ylr,
  _,
  _92,
  b0,
  d,
  d1e,
  da,
  de,
  fB1,
  ho,
  il,
  jKe,
  ka,
  nm2,
  p1,
  q8,
  s4,
  tH,
  u3
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/b0ddbdcf.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var ae = de.div`
  display: flex;
  justify-content: end;
  width: 100%;
  gap: 8px;
  align-items: center;
`;
var de2 = de.span`
  ${Fa};
  color: #8b8fa3;
`;
var se = de(nm2)`
  width: 16px;
  height: 16px;
  cursor: pointer;

  &:hover {
    g g {
      stroke: #4965f2;
    }
  }
`;
var M = T2`
  height: 16px;
  width: 16px;
  display: inline-block;

  &:hover {
    cursor: pointer;
  }

  &:hover path {
    fill: #315efb;
  }
`;
var ce = de(DPe)`
  ${M}
`;
var he = de(If2)`
  ${M}
`;
var pe = de(da)`
  width: 100px;

  &,
  > div {
    height: 22px;
  }

  .ant-segmented-item-label {
    height: 18px;
    min-height: 18px;
    line-height: 18px;
    padding: 0;
  }
`;
var ue = de.div`
  display: flex;
  align-items: center;
  color: ${G3}
  line-height: 16px;
  font-size: 13px;
`;
var me = [{
  label: "Row 1",
  value: 0
}, {
  label: "Row 2",
  value: 1
}, {
  label: "Row 3",
  value: 2
}];
var be = [{
  label: "Normal",
  value: "normal"
}, {
  label: "Summary",
  value: "summary"
}];
var we = [{
  label: _("table.allColumn"),
  value: "all"
}, {
  label: _("table.visibleColumn"),
  value: "visible"
}];
var ye = [{
  label: _("prop.hide"),
  value: "hide"
}, {
  label: _("table.editable"),
  value: "editable"
}, {
  label: _("table.autoWidth"),
  value: "autoWidth"
}, {
  label: _("table.sortable"),
  value: "sortable"
}, {
  label: _("table.align"),
  value: "align"
}];
function ge(e) {
  const {
    hide: l,
    setHide: h
  } = e;
  return d(l ? ce : he, {
    onClick: (a) => {
      h(!l);
    }
  });
}
function R(e, l) {
  const h = (a) => e === "autoWidth" ? a.children.autoWidth.getView() === "auto" : a.children[e].getView(), p = l ?? ((a) => a);
  return (a) => {
    const r = Array.isArray(a), f = r ? a : [a], u = f.map((c) => {
      if (e !== "editable")
        return false;
      const w = c.children.render.getOriginalComp().children.comp.children.compType.getView();
      return !D[w].canBeEditable();
    });
    let m = true, b = true;
    f.forEach((c, w) => {
      if (u[w]) {
        r || (m = false);
        return;
      }
      h(c) ? b = false : m = false;
    });
    const V = (c) => {
      f.forEach((w, C) => !u[C] && w.children[e].dispatch(il(ho(p(c), true))));
    };
    return e === "hide" ? d(ge, {
      hide: m,
      setHide: (c) => V(c)
    }) : d(d1e, {
      indeterminate: !m && !b,
      disabled: !r && u[0],
      checked: m,
      onChange: (c) => {
        V(c.target.checked);
      }
    });
  };
}
var k = {
  hide: R("hide"),
  editable: R("editable"),
  sortable: R("sortable"),
  autoWidth: R("autoWidth", (e) => e ? "auto" : "fixed"),
  align: (e) => {
    const l = Array.isArray(e) ? e : [e], h = Array.isArray(e) ? void 0 : e.children.align.getView();
    return d(pe, {
      options: P2e,
      value: h,
      radioButton: true,
      onChange: (p) => {
        l.forEach((a) => a.children.align.dispatch(il(ho(p, true))));
      }
    });
  }
};
function fe(e) {
  const [l, h] = (0, import_react.useState)("normal"), [p, a] = (0, import_react.useState)(0), {
    comp: r
  } = e, f = te(r.children.selection)[0] ?? "0", [u, m] = (0, import_react.useState)("all"), b = r.children.columns.getView(), V = r.children.dataRowExample.getView(), c = r.children.dynamicColumn.getView(), w = r.children.data.getView(), [C, z] = (0, import_react.useState)("hide"), O = (0, import_react.useMemo)(() => b.filter((o) => u === "all" || !o.children.hide.getView()), [u, b]), D2 = parseInt(r.children.summaryRows.getView()), F = N(ae, {
    children: [N("div", {
      style: {
        display: "flex",
        alignItems: "center",
        marginRight: "auto"
      },
      children: [d(RN2, {
        label: e.columnLabel
      }), d(de2, {
        children: " (" + b.length + ")"
      })]
    }), V && d(V9, {
      title: _("table.refreshButtonTooltip"),
      children: d(se, {
        onClick: () => {
          r.dispatch(s4("columns", r.children.columns.dataChangedAction({
            rowExample: V,
            doGeneColumn: true,
            dynamicColumn: c,
            data: w
          })));
        }
      })
    }), d(tH, {
      icon: d(q8, {}),
      text: _("addItem"),
      onClick: () => {
        r.children.columns.dispatch(r.children.columns.pushAction(Uo()));
      }
    })]
  });
  return d(p1, {
    children: d(WKe, {
      headerItem: d(jKe, {
        title: d(da, {
          border: true,
          style: {
            width: "auto",
            marginLeft: "8px"
          },
          value: u,
          options: we,
          label: "",
          onChange: (o) => {
            m(o);
          }
        }),
        config: {
          dataIndex: "header"
        },
        draggable: false,
        optionExtra: N(ue, {
          children: [d(da, {
            border: true,
            style: {
              width: "auto"
            },
            value: C,
            options: ye,
            label: "",
            onChange: (o) => {
              z(o);
            }
          }), k[C](b)]
        })
      }),
      itemExtra: (o) => d("div", {
        style: {
          display: "flex",
          alignItems: "center",
          height: "100%"
        },
        onClick: (s) => s.stopPropagation(),
        children: k[C](o)
      }),
      items: O,
      optionToolbar: F,
      itemTitle: (o) => {
        const s = o.getView();
        return s.hide ? d("span", {
          style: {
            color: G3
          },
          children: s.title
        }) : s.title;
      },
      popoverTitle: (o) => {
        const s = o.getView();
        return s.isCustom ? _("table.customColumn") : s.dataIndex;
      },
      content: (o, s) => N(p1, {
        children: [d(Yg, {
          block: true,
          options: be,
          value: l,
          onChange: (v) => h(v)
        }), l === "summary" && d(Yg, {
          block: true,
          options: me.slice(0, D2),
          value: p,
          onChange: (v) => a(v)
        }), o.propertyView(f, l, p), o.getView().isCustom && d(_92, {
          onClick: () => {
            U4.confirm({
              title: _("table.deleteColumn"),
              content: _("table.confirmDeleteColumn") + `${o.getView().title}?`,
              onConfirm: () => r.children.columns.dispatch(r.children.columns.deleteAction(s)),
              confirmBtnType: "delete",
              okText: _("delete")
            });
          },
          children: _("delete")
        })]
      }),
      onAdd: () => {
        r.children.columns.dispatch(r.children.columns.pushAction(Uo()));
      },
      onMove: (o, s) => {
        const v = r.children.columns.arrayMoveAction(o, s);
        r.children.columns.dispatch(v);
      },
      dataIndex: (o) => o.getView().dataIndex,
      scrollable: true
    })
  });
}
function Ve(e) {
  const l = _("table.columnNum");
  return [
    u3({
      filterText: l
    }, d(fe, {
      comp: e,
      columnLabel: l
    }))
    /* comp.children.dynamicColumn.propertyView({ label: trans("table.dynamicColumn") }),
    dynamicColumn &&
      comp.children.dynamicColumnConfig.propertyView({
        label: trans("table.dynamicColumnConfig"),
        tooltip: trans("table.dynamicColumnConfigDesc"),
      }), */
  ];
}
function at(e) {
  const l = e.editorModeStatus, h = _("data");
  return N(p1, {
    children: [["logic", "both"].includes(l) && d(ka, {
      name: _("table.dataDesc"),
      children: u3({
        filterText: h
      }, d("div", {
        className: Ylr,
        children: e.children.data.propertyView({
          label: h
        })
      }))
    }), ["layout", "both"].includes(l) && d(ka, {
      name: _("prop.columns"),
      children: Ve(e)
    }), ["logic", "both"].includes(l) && N(p1, {
      children: [N(ka, {
        name: b0.interaction,
        children: [e.children.onEvent.getPropertyView(), E7(e.children), fB1(e.children), e.children.showDataLoadSpinner.propertyView({
          label: _("table.showDataLoadSpinner")
        }), e.children.selection.getPropertyView(), e.children.editModeClicks.propertyView({
          label: _("table.editMode"),
          radioButton: true
        }), e.children.searchText.propertyView({
          label: _("table.searchText"),
          tooltip: _("table.searchTextTooltip"),
          placeholder: "{{input1.value}}"
        })]
      }), N(ka, {
        name: "Summary",
        children: [e.children.showSummary.propertyView({
          label: _("table.showSummary")
        }), e.children.showSummary.getView() && e.children.summaryRows.propertyView({
          label: _("table.totalSummaryRows"),
          radioButton: true
        })]
      }), d(ka, {
        name: "Insert Rows",
        children: e.children.inlineAddNewRow.propertyView({
          label: _("table.inlineAddNewRow")
        })
      }), d(ka, {
        name: _("prop.toolbar"),
        children: e.children.toolbar.getPropertyView()
      })]
    }), ["layout", "both"].includes(l) && N(p1, {
      children: [N(ka, {
        name: b0.layout,
        children: [e.children.size.propertyView({
          label: _("table.tableSize"),
          radioButton: true
        }), e.children.autoHeight.getPropertyView(), e.children.showHorizontalScrollbar.propertyView({
          label: _("prop.showHorizontalScrollbar")
        }), !e.children.autoHeight.getView() && e.children.showVerticalScrollbar.propertyView({
          label: _("prop.showVerticalScrollbar")
        }), e.children.fixedHeader.propertyView({
          label: _("table.fixedHeader"),
          tooltip: _("table.fixedHeaderTooltip")
        }), e.children.hideHeader.propertyView({
          label: _("table.hideHeader")
        }), e.children.viewModeResizable.propertyView({
          label: _("table.viewModeResizable"),
          tooltip: _("table.viewModeResizableTooltip")
        }), e.children.visibleResizables.propertyView({
          label: _("table.visibleResizables"),
          tooltip: _("table.visibleResizablesTooltip")
        })]
      }), d(ka, {
        name: _("prop.pagination"),
        children: e.children.pagination.getPropertyView()
      })]
    }), ["logic", "both"].includes(l) && d(p1, {
      children: N(ka, {
        name: b0.advanced,
        children: [e.children.expansion.getPropertyView(), e.children.dynamicColumn.propertyView({
          label: _("table.dynamicColumn")
        }), e.children.dynamicColumn.getView() && e.children.dynamicColumnConfig.propertyView({
          label: _("table.dynamicColumnConfig"),
          tooltip: _("table.dynamicColumnConfigDesc")
        })]
      })
    }), ["layout", "both"].includes(l) && N(p1, {
      children: [d(ka, {
        name: "Table Style",
        children: e.children.style.getPropertyView()
      }), d(ka, {
        name: "Header Style",
        children: e.children.headerStyle.getPropertyView()
      }), d(ka, {
        name: "Toolbar Style",
        children: e.children.toolbarStyle.getPropertyView()
      }), N(ka, {
        name: "Row Style",
        children: [e.children.showRowGridBorder.propertyView({
          label: _("table.showVerticalRowGridBorder")
        }), e.children.showHRowGridBorder.propertyView({
          label: _("table.showHorizontalRowGridBorder")
        }), e.children.rowStyle.getPropertyView(), e.children.rowAutoHeight.getPropertyView(), e.children.rowHeight.getPropertyView(), e.children.rowColor.getPropertyView()]
      }), d(ka, {
        name: "Column Style",
        children: e.children.columnsStyle.getPropertyView()
      }), d(ka, {
        name: "Summary Row Style",
        children: e.children.summaryRowStyle.getPropertyView()
      })]
    })]
  });
}

export {
  at
};
//# sourceMappingURL=chunk-6QEPQE7Z.js.map
