import {
  EZn,
  Ksn,
  M2,
  PL,
  d,
  g2,
  h1,
  p1,
  uJe,
  vC,
  vc
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/2bf0dcb7.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var c = new g2({
  v1: M2,
  v2: vc
}, (e) => e).setPropertyViewFn(() => d(p1, {})).build();
var n = {
  value: {
    v1: "v1: {{a + 1}}",
    v2: "{{a + 2}}"
  }
};
var b = uJe(c, ["a"]);
describe("withParamsForMap", () => {
  it("performance", () => {
    let e = new b(n);
    e = PL(e);
    const t = h1.chain(h1.range(5e3)).map((o) => [o, {
      a: o
    }]).fromPairs().value();
    e = e.batchSet(t);
    const p = EZn(() => PL(e));
    expect(p < 1e4).toBeTruthy();
  }), it("test_node", () => {
    let e = new c({
      value: {
        v1: "",
        v2: "2"
      }
    });
    e = PL(e);
    const t = e.reduce(vC(n.value));
    expect(t.node() === e.node()).toBeTruthy(), expect(Ksn(t.node()) === Ksn(e.node())).toBeTruthy();
  });
});
//# sourceMappingURL=2bf0dcb7-3MVIZXVO.js.map
