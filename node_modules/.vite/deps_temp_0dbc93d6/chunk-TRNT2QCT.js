import {
  m
} from "./chunk-BKE5AUP3.js";
import {
  o
} from "./chunk-MHPZYSTA.js";
import {
  D,
  T
} from "./chunk-2SYORDDG.js";
import {
  KRe,
  Vr,
  d,
  de,
  h4,
  lZn,
  nn,
  zf
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/034fe3cf.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var y = de(KRe)`
  width: 100%;
  box-shadow: ${(e) => `${e.$style.boxShadow} ${e.$style.boxShadowColor}`};
  ${(e) => e.$style && T(e.$style)}
`;
var w = de.div`
  width: 100%;
  margin: 10px 0px; 
`;
var b = de(h4)`
  width: 100%;
  .ant-select-selector {
    font-size: 14px;
    line-height: 1.5;
  }
`;
var C = import_react.default.lazy(() => import("./1f89a7c1-PWYD5OLU.js").then((e) => ({
  default: e.DateMobileUIView
})));
var V = (e) => {
  const a = (0, import_react.useContext)(Vr), d2 = Array.isArray(e.placeholder) ? e.placeholder[0] : e.placeholder;
  return m(d(C, {
    ...e
  }), d(y, {
    ...e,
    multiple: false,
    ref: e.viewRef,
    minDate: e.minDate ? nn(e.minDate, lZn) : void 0,
    maxDate: e.maxDate ? nn(e.maxDate, lZn) : void 0,
    hourStep: e.hourStep,
    minuteStep: e.minuteStep,
    secondStep: e.secondStep,
    disabledDate: (i) => D(i, e.minDate, e.maxDate),
    picker: "date",
    inputReadOnly: zf(a == null ? void 0 : a.getAppSettings().maxWidth),
    placeholder: d2,
    renderExtraFooter: () => e.timeZone === "UserChoice" && d(w, {
      children: d(b, {
        options: o.filter((i) => i.value !== "UserChoice"),
        placeholder: "Select Time Zone",
        defaultValue: "Etc/UTC",
        onChange: e.onClickDateTimeZone
      })
    })
  }));
};

export {
  V
};
//# sourceMappingURL=chunk-TRNT2QCT.js.map
