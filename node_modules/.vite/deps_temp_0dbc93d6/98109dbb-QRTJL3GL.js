import {
  AG1
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/98109dbb.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
test("object create", () => {
  new AG1({
    value: {
      compType: "js"
    }
  });
});
test("onSuccess/onFail => onEvent", () => {
  let e = new AG1({
    value: {
      compType: "js",
      onSuccess: [{
        name: "after",
        handler: {
          compType: "empty",
          comp: {},
          condition: "",
          slowdown: "debounce",
          delay: ""
        }
      }],
      onFail: [{
        name: "after",
        handler: {
          compType: "empty",
          comp: {},
          condition: "",
          slowdown: "debounce",
          delay: ""
        }
      }]
    }
  });
  expect(e.children.onEvent.toJsonValue().length).toEqual(2), expect(e.children.onEvent.toJsonValue()[0].name).toEqual("success"), expect(e.children.onEvent.toJsonValue()[1].name).toEqual("fail"), expect(e.children.onEvent.toJsonValue().onSuccess).toEqual(void 0), expect(e.children.onEvent.toJsonValue().onFail).toEqual(void 0);
});
test("add notification for old query", () => {
  let e = new AG1({
    value: {
      compType: "js"
    }
  });
  expect(e.children.notification.toJsonValue().showSuccess).toEqual(true), expect(e.children.notification.toJsonValue().showFail).toEqual(true), e = new AG1({
    value: {
      compType: "js",
      onEvent: []
    }
  }), expect(e.children.notification.toJsonValue().showSuccess).toEqual(false), expect(e.children.notification.toJsonValue().showFail).toEqual(false), e = new AG1({
    value: {
      compType: "js",
      notification: {
        showSuccess: true,
        success: {
          text: ""
        },
        showFail: true,
        fail: [{
          text: "",
          condition: ""
        }],
        duration: ""
      }
    }
  }), expect(e.children.notification.toJsonValue().showSuccess).toEqual(true), expect(e.children.notification.toJsonValue().showFail).toEqual(true);
});
//# sourceMappingURL=98109dbb-QRTJL3GL.js.map
