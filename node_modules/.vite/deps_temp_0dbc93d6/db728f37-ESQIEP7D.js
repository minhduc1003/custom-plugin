import {
  C,
  S
} from "./chunk-IPM7W2G5.js";
import {
  C5,
  E7,
  H0,
  N,
  O9,
  QU1,
  TU1,
  VS,
  Vr,
  Yh,
  _,
  aOe,
  ao,
  b0,
  ca,
  d,
  de,
  eW1,
  eu,
  iV,
  ka,
  nW1,
  nc,
  o7t,
  p1,
  r7,
  s2e,
  t2,
  tW1,
  vc,
  vo,
  ya
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/db728f37.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var G = de(o7t)`
  background: ${(e) => e.$style.background};
  color: ${(e) => e.$style.fill};
  cursor: ${(e) => e.$cursorPointer ? "pointer" : ""};
`;
var X = de.div`
display: flex;
width: 100%;
height: 100%;
align-items: center;
flex-direction: ${(e) => e.labelPosition === "left" ? "row" : "row-reverse"};
${(e) => e.$style && {
  ...e.$style,
  borderRadius: e.$style.radius
}}
`;
var Y = de.div`
width: calc(100% - ${(e) => e.iconSize}px);
display: flex;
padding-left: 5px;
padding-right: 5px;
flex-direction: column;
justify-content: flex-end;
align-items: ${(e) => e.alignmentPosition === "left" ? "flex-start" : "flex-end"};
`;
var Z = de.span`
max-width: 100%;
overflow: hidden;
text-overflow: ellipsis;
white-space: nowrap;
font-weight: ${(e) => e.$style.textWeight};
border-radius: ${(e) => e.$style.radius};
font-size: ${(e) => e.$style.textSize};
text-transform: ${(e) => e.$style.textTransform};
color: ${(e) => e.$style.text};
border: ${(e) => e.$style.border};
border-style: ${(e) => e.$style.borderStyle};
border-width: ${(e) => e.$style.borderWidth};
font-family: ${(e) => e.$style.fontFamily};
font-style: ${(e) => e.$style.fontStyle};
margin: ${(e) => e.$style.margin};
padding: ${(e) => e.$style.padding};
background: ${(e) => e.$style.background};
text-decoration: ${(e) => e.$style.textDecoration};
`;
var J = de.span`
max-width: 100%;
overflow: hidden;
text-overflow: ellipsis;
white-space: nowrap;
font-weight: ${(e) => e.$style.textWeight};
border-radius: ${(e) => e.$style.radius};
font-size: ${(e) => e.$style.textSize};
text-transform: ${(e) => e.$style.textTransform};
color: ${(e) => e.$style.text};
border: ${(e) => e.$style.border};
border-style: ${(e) => e.$style.borderStyle};
border-width: ${(e) => e.$style.borderWidth};
font-family: ${(e) => e.$style.fontFamily};
font-style: ${(e) => e.$style.fontStyle};
margin: ${(e) => e.$style.margin};
padding: ${(e) => e.$style.padding};
background: ${(e) => e.$style.background};
text-decoration: ${(e) => e.$style.textDecoration};
`;
var K = [eu];
var Q = [{
  label: _("avatarComp.square"),
  value: "square"
}, {
  label: _("avatarComp.circle"),
  value: "circle"
}];
var _2 = [{
  label: _("labelProp.left"),
  value: "left"
}, {
  label: _("labelProp.right"),
  value: "right"
}];
var ee = {
  style: nc(tW1, "style"),
  avatarStyle: nc(eW1, "avatarStyle"),
  labelStyle: nc(nW1, "labelStyle"),
  captionStyle: nc(nW1, "captionStyle"),
  icon: t2(C5, "/icon:solid/user"),
  iconSize: t2(vc, 40),
  onEvent: ya(K),
  shape: ca(Q, "circle"),
  title: QU1("title", ""),
  src: QU1("src", ""),
  avatarLabel: QU1("avatarLabel", "{{currentUser.name}}"),
  avatarCatption: QU1("avatarCatption", "{{currentUser.email}}"),
  labelPosition: ca(_2, "left"),
  alignmentPosition: t2(iV, "left"),
  enableDropdownMenu: ao,
  options: TU1,
  ...C
};
var te = (e) => {
  const {
    shape: u,
    title: b,
    src: f,
    iconSize: g
  } = e;
  (0, import_react.useContext)(Vr).getUICompByName((0, import_react.useContext)(Yh));
  const w = e.options.findIndex((o) => {
    var n;
    return (n = o.prefixIcon) == null ? void 0 : n.props.value;
  }) > -1, y = e.options.filter((o) => !o.hidden).map((o, n) => ({
    title: o.label,
    label: o.label,
    key: o.label + " - " + n,
    disabled: o.disabled,
    icon: w && d("span", {
      children: o.prefixIcon
    }),
    onEvent: o.onEvent
  })), C2 = d(r7, {
    items: y,
    onClick: ({
      key: o
    }) => {
      var n;
      return (n = y.find((x) => x.key === o)) == null ? void 0 : n.onEvent("click");
    }
  });
  return d(O9, {
    menu: {
      items: y
    },
    placement: e.labelPosition === "left" ? "bottomLeft" : "bottomRight",
    arrow: true,
    disabled: !e.enableDropdownMenu,
    dropdownRender: () => C2,
    children: N(X, {
      iconSize: e.iconSize,
      labelPosition: e.labelPosition,
      $style: e.style,
      children: [d(aOe, {
        count: e.badgeCount.value,
        dot: e.badgeType === "dot",
        size: e.badgeSize,
        overflowCount: e.overflowCount,
        title: e.badgeTitle,
        offset: e.shape === "circle" ? [-2, 6] : [0, 0],
        children: d(G, {
          size: g,
          icon: b.value !== "" ? null : e.icon,
          shape: u,
          $style: e.avatarStyle,
          src: f.value,
          onClick: () => e.onEvent("click"),
          children: b.value
        })
      }), N(Y, {
        iconSize: e.iconSize,
        alignmentPosition: e.alignmentPosition,
        children: [d(Z, {
          $style: e.labelStyle,
          children: e.avatarLabel.value
        }), d(J, {
          $style: e.captionStyle,
          children: e.avatarCatption.value
        })]
      })]
    })
  });
};
var ae = function() {
  return new VS(ee, (e) => d(te, {
    ...e
  })).setPropertyViewFn((e) => N(p1, {
    children: [N(ka, {
      name: b0.basic,
      children: [e.src.propertyView({
        label: _("avatarComp.src"),
        placeholder: "http://xxxx/xx.jpg",
        tooltip: _("avatarComp.avatarCompTooltip")
      }), e.title.propertyView({
        label: _("avatarComp.title"),
        tooltip: _("avatarComp.avatarCompTooltip")
      }), e.icon.propertyView({
        label: _("avatarComp.icon"),
        IconType: "All",
        tooltip: _("avatarComp.avatarCompTooltip")
      }), e.shape.propertyView({
        label: _("avatarComp.shape"),
        radioButton: true
      }), e.iconSize.propertyView({
        label: _("avatarComp.iconSize")
      }), e.enableDropdownMenu.propertyView({
        label: _("avatarComp.enableDropDown")
      }), e.enableDropdownMenu.getView() && e.options.propertyView({})]
    }), N(ka, {
      name: _("avatarComp.label"),
      children: [e.avatarLabel.propertyView({
        label: _("avatarComp.label")
      }), e.avatarCatption.propertyView({
        label: _("avatarComp.caption")
      }), e.labelPosition.propertyView({
        label: _("avatarComp.labelPosition"),
        radioButton: true
      }), e.alignmentPosition.propertyView({
        label: _("avatarComp.alignmentPosition"),
        radioButton: true
      })]
    }), d(S, {
      ...e
    }), d(ka, {
      name: b0.interaction,
      children: e.onEvent.getPropertyView()
    }), d(ka, {
      name: b0.layout,
      children: E7(e)
    }), d(ka, {
      name: b0.style,
      children: e.style.getPropertyView()
    }), d(ka, {
      name: b0.avatarStyle,
      children: e.avatarStyle.getPropertyView()
    }), d(ka, {
      name: b0.labelStyle,
      children: e.labelStyle.getPropertyView()
    }), d(ka, {
      name: b0.captionStyle,
      children: e.captionStyle.getPropertyView()
    })]
  })).build();
}();
var re = H0(ae, [s2e, new vo("badgeCount", _("button.textDesc"))]);
export {
  re as AvatarComp
};
//# sourceMappingURL=db728f37-ESQIEP7D.js.map
