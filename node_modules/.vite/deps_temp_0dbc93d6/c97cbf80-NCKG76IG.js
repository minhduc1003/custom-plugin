import {
  I,
  M
} from "./chunk-KOUQ2M4L.js";
import "./chunk-WDXFLO22.js";
import "./chunk-FDUHEGUX.js";
import "./chunk-ZEO3HUQB.js";
import {
  E32,
  N0,
  QU1,
  VS,
  Vr,
  d
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/c97cbf80.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var I2 = function() {
  const a = {
    ...I,
    defaultValue: QU1("defaultValue"),
    value: QU1("value")
    // style: styleControl(SelectStyle),
  };
  return new VS(a, (e, M2) => {
    const s = (0, import_react.useContext)(Vr), p = Object.values(s.getAllUICompMap()), g = e.options.map((t) => {
      var i, c, l, m;
      const h = t.target;
      let o;
      const n = p.find((d2) => d2.children.name.getView() === h);
      if (n)
        try {
          o = (c = (i = n.children.comp).getRef) == null ? void 0 : c.call(i);
        } catch {
          o = (m = (l = n.children.comp).getRef) == null ? void 0 : m.call(l);
        }
      return {
        /**
         * I'm pretty sure it's safe to use dangerouslySetInnerHTML here as any creator of an app
         * will have unrestricted access to the data of any user anyway. E.g. have a button that
         * just sends the current cookies wherever, thus the developer of the app must be trusted
         * in all cases
         * This even applies to things like <b onmouseover="alert('mouseover');">, because the
         * app creator might desire functionality like this.
         */
        title: d("div", {
          dangerouslySetInnerHTML: {
            __html: t.title
          }
        }),
        description: d("div", {
          dangerouslySetInnerHTML: {
            __html: t.description
          }
        }),
        target: o == null ? void 0 : o.current,
        arrow: t.arrow,
        placement: t.placement === "" ? void 0 : t.placement,
        mask: t.mask,
        cover: t.cover ? d("img", {
          src: t.cover
        }) : void 0,
        type: t.type === "" ? void 0 : t.type
      };
    });
    return d(E32, {
      steps: g,
      open: e.open.value,
      onClose: () => e.open.onChange(false),
      disabledInteraction: e.disabledInteraction,
      arrow: e.arrow,
      placement: e.placement === "" ? void 0 : e.placement,
      type: e.type === "" ? void 0 : e.type,
      mask: e.mask
    });
  }).setPropertyViewFn((e) => d(M, {
    ...e
  })).build();
}();
var U = N0(I2, [{
  method: {
    name: "startTour",
    description: "Triggers the tour to start",
    params: []
  },
  execute: (a, e) => {
    a.children.open.getView().onChange(true);
  }
}]);
export {
  U as TourComp
};
//# sourceMappingURL=c97cbf80-NCKG76IG.js.map
