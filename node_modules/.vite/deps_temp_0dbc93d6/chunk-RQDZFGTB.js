import {
  A
} from "./chunk-SDNB64XM.js";
import {
  c,
  h
} from "./chunk-A3UAJ3XR.js";
import {
  V
} from "./chunk-TRNT2QCT.js";
import {
  o
} from "./chunk-MHPZYSTA.js";
import {
  M,
  S,
  v
} from "./chunk-2SYORDDG.js";
import {
  BXe,
  C5,
  E7,
  EB1,
  Fj1,
  GK1,
  H0,
  H3,
  HQe,
  M2,
  MB1,
  N,
  N0,
  OB1,
  PW1,
  QU1,
  RQe,
  SB1,
  SQe,
  US,
  VC,
  VS,
  Vr,
  WS,
  ZK1,
  _,
  ao,
  b0,
  ca,
  d,
  fKn,
  fW1,
  h1,
  kB1,
  ka,
  lZn,
  nc,
  nn,
  o2,
  oJe,
  p1,
  pQe,
  qC,
  qOe,
  t2,
  uW1,
  vB1,
  vKn,
  wB1,
  xB1,
  xP1,
  ya,
  zB1,
  zP1
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/62fdf1a5.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
nn.extend(vKn);
nn.extend(fKn);
nn.extend(qOe);
var Fe = [VC, WS, US];
var ze = {
  required: ao,
  minDate: M2,
  maxDate: M2,
  minTime: M2,
  maxTime: M2,
  customRule: SQe
};
var Y = {
  label: GK1,
  placeholder: t2(M2, _("date.placeholder")),
  format: M2,
  disabled: H3,
  onEvent: ya(Fe),
  showTime: ao,
  use12Hours: ao,
  hourStep: pQe.closed(1, 24, 1),
  minuteStep: pQe.closed(1, 60, 1),
  secondStep: pQe.closed(1, 60, 1),
  style: nc(fW1, "style"),
  animationStyle: nc(Fj1, "animationStyle"),
  labelStyle: nc(uW1.filter((t) => ["accent", "validate"].includes(t.name) === false), "labelStyle"),
  suffixIcon: t2(C5, "/icon:regular/calendar"),
  ...ze,
  viewRef: ZK1,
  inputFieldStyle: nc(PW1, "inputFieldStyle"),
  timeZone: ca(o, "Etc/UTC")
};
var Q = (t) => h1.pick(t, "format", "showTime", "use12Hours", "hourStep", "minuteStep", "secondStep", "placeholder");
var W = (t, e) => [t.showTime.propertyView({
  label: _("date.showTime")
}), !e && t.use12Hours.propertyView({
  label: _("prop.use12Hours")
})];
var X = (t, e = true) => {
  if (e && t.showTime.getView())
    return N(ka, {
      name: b0.advanced,
      children: [EB1(t), wB1(t), xB1(t)]
    });
};
var p = (t, e = "date") => {
  if (e === "date")
    return [SB1(t), MB1(t)];
};
var ee = (t, e = "date") => {
  if (e === "date" && t.showTime.getView())
    return [zB1(t), kB1(t)];
};
function D(t) {
  if (t.customRule)
    return {
      validateStatus: "error",
      help: t.customRule
    };
  const e = nn(t.value.value, lZn);
  return t.required && (t.value.value === "" || !e.isValid()) ? {
    validateStatus: "error",
    help: _("prop.required")
  } : {
    validateStatus: "success"
  };
}
var ke = {
  value: QU1("value"),
  userTimeZone: QU1("userTimeZone", "Etc/UTC"),
  ...Y,
  ...c
};
var Ie = new VS(ke, (t) => {
  let e = null;
  t.value.value !== "" && (e = nn(t.value.value, lZn));
  const [a, i] = (0, import_react.useState)(e);
  (0, import_react.useEffect)(() => {
    const m = t.value.value ? nn(t.value.value, lZn) : null;
    i(m);
  }, [t.value.value]);
  const g = (m) => {
    t.userTimeZone.onChange(m);
  };
  return t.label({
    required: t.required,
    style: t.style,
    labelStyle: t.labelStyle,
    inputFieldStyle: t.inputFieldStyle,
    animationStyle: t.animationStyle,
    onMouseDown: (m) => m.stopPropagation(),
    children: d(V, {
      onClickDateTimeZone: g,
      timeZone: t.timeZone,
      viewRef: t.viewRef,
      disabledTime: () => v(t.minTime, t.maxTime),
      $style: t.inputFieldStyle,
      disabled: t.disabled,
      ...Q(t),
      hourStep: t.hourStep,
      minDate: t.minDate,
      maxDate: t.maxDate,
      placeholder: t.placeholder,
      value: a != null && a.isValid() ? a : null,
      onChange: (m) => {
        M(m && m.isValid() ? m.format(t.showTime ? zP1 : xP1) : "", t.value.onChange, t.onEvent);
      },
      onPanelChange: () => {
        M("", t.value.onChange, o2.noop);
      },
      onFocus: () => t.onEvent("focus"),
      onBlur: () => t.onEvent("blur"),
      suffixIcon: BXe(t.suffixIcon) && t.suffixIcon
    }),
    ...D(t)
  });
}).setPropertyViewFn((t) => {
  const e = oJe();
  return N(p1, {
    children: [N(ka, {
      name: b0.basic,
      children: [t.value.propertyView({
        label: _("prop.defaultValue"),
        placeholder: "2022-04-07 21:39:59",
        tooltip: _("date.formatTip")
      }), t.timeZone.propertyView({
        label: _("prop.timeZone")
      })]
    }), d(h, {
      ...t
    }), ((0, import_react.useContext)(Vr).editorModeStatus === "logic" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && N(p1, {
      children: [N(ka, {
        name: b0.validation,
        children: [vB1(t), p(t), ee(t), t.customRule.propertyView({})]
      }), N(ka, {
        name: b0.interaction,
        children: [t.onEvent.getPropertyView(), qC(t), E7(t)]
      })]
    }), ((0, import_react.useContext)(Vr).editorModeStatus === "layout" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && t.label.getPropertyView(), ((0, import_react.useContext)(Vr).editorModeStatus === "layout" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && N(ka, {
      name: b0.layout,
      children: [OB1({
        children: t
      }), t.placeholder.propertyView({
        label: _("date.placeholderText")
      })]
    }), ((0, import_react.useContext)(Vr).editorModeStatus === "logic" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && d(p1, {
      children: N(ka, {
        name: b0.advanced,
        children: [W(t, e), t.suffixIcon.propertyView({
          label: _("button.suffixIcon")
        })]
      })
    }), ((0, import_react.useContext)(Vr).editorModeStatus === "logic" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && !e && X(t), ((0, import_react.useContext)(Vr).editorModeStatus === "layout" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && N(p1, {
      children: [d(ka, {
        name: b0.style,
        children: t.style.getPropertyView()
      }), d(ka, {
        name: b0.labelStyle,
        children: t.labelStyle.getPropertyView()
      }), d(ka, {
        name: b0.inputFieldStyle,
        children: t.inputFieldStyle.getPropertyView()
      }), d(ka, {
        name: b0.animationStyle,
        hasTooltip: true,
        children: t.animationStyle.getPropertyView()
      })]
    })]
  });
}).setExposeMethodConfigs(S).build();
var Ae = function() {
  const t = {
    start: QU1("start"),
    end: QU1("end"),
    userRangeTimeZone: QU1("userRangeTimeZone", "Etc/UTC"),
    ...c,
    ...Y
  };
  return new VS(t, (e) => {
    let a = null;
    e.start.value !== "" && (a = nn(e.start.value, lZn));
    let i = null;
    e.end.value !== "" && (i = nn(e.end.value, lZn));
    const [g, m] = (0, import_react.useState)(a), [T, te] = (0, import_react.useState)(i);
    (0, import_react.useEffect)(() => {
      const y = e.start.value ? nn(e.start.value, lZn) : null;
      m(y);
    }, [e.start.value]), (0, import_react.useEffect)(() => {
      const y = e.end.value ? nn(e.end.value, lZn) : null;
      te(y);
    }, [e.end.value]);
    const ae = d(A, {
      onClickDateRangeTimeZone: (y) => {
        e.userRangeTimeZone.onChange(y);
      },
      timeZone: e == null ? void 0 : e.timeZone,
      viewRef: e.viewRef,
      $style: e.inputFieldStyle,
      disabled: e.disabled,
      ...Q(e),
      start: g != null && g.isValid() ? g : null,
      end: T != null && T.isValid() ? T : null,
      minDate: e.minDate,
      maxDate: e.maxDate,
      placeholder: [e.placeholder, e.placeholder],
      disabledTime: () => v(e.minTime, e.maxTime),
      onChange: (y, v2) => {
        e.start.onChange(y && y.isValid() ? y.format(e.showTime ? zP1 : xP1) : ""), e.end.onChange(v2 && v2.isValid() ? v2.format(e.showTime ? zP1 : xP1) : ""), e.onEvent("change");
      },
      onPanelChange: (y, v2) => {
        v2[0] !== "date" && M("", e.start.onChange, o2.noop), v2[1] !== "date" && M("", e.end.onChange, o2.noop);
      },
      onFocus: () => e.onEvent("focus"),
      onBlur: () => e.onEvent("blur"),
      suffixIcon: BXe(e.suffixIcon) && e.suffixIcon
    }), R = D({
      ...e,
      value: e.start
    }), z = D({
      ...e,
      value: e.end
    });
    return e.label({
      required: e.required,
      style: e.style,
      labelStyle: e.labelStyle,
      children: ae,
      inputFieldStyle: e.inputFieldStyle,
      onMouseDown: (y) => y.stopPropagation(),
      ...R.validateStatus !== "success" ? R : z.validateStatus !== "success" ? z : R
    });
  }).setPropertyViewFn((e) => {
    const a = oJe();
    return N(p1, {
      children: [N(ka, {
        name: b0.basic,
        children: [e.start.propertyView({
          label: _("date.start"),
          placeholder: "2022-04-07 21:39:59",
          tooltip: _("date.formatTip")
        }), e.end.propertyView({
          label: _("date.end"),
          placeholder: "2022-04-07 21:39:59",
          tooltip: _("date.formatTip")
        }), e.timeZone.propertyView({
          label: _("prop.timeZone")
        })]
      }), d(h, {
        ...e
      }), ((0, import_react.useContext)(Vr).editorModeStatus === "logic" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && N(p1, {
        children: [N(ka, {
          name: b0.validation,
          children: [vB1(e), p(e), ee(e), e.customRule.propertyView({})]
        }), N(ka, {
          name: b0.interaction,
          children: [e.onEvent.getPropertyView(), qC(e), E7(e)]
        })]
      }), ((0, import_react.useContext)(Vr).editorModeStatus === "layout" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && e.label.getPropertyView(), ((0, import_react.useContext)(Vr).editorModeStatus === "layout" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && N(ka, {
        name: b0.layout,
        children: [OB1({
          children: e
        }), e.placeholder.propertyView({
          label: _("date.placeholderText")
        })]
      }), ((0, import_react.useContext)(Vr).editorModeStatus === "logic" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && d(p1, {
        children: N(ka, {
          name: b0.advanced,
          children: [W(e, a), e.suffixIcon.propertyView({
            label: _("button.suffixIcon")
          })]
        })
      }), ((0, import_react.useContext)(Vr).editorModeStatus === "logic" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && X(e), ((0, import_react.useContext)(Vr).editorModeStatus === "layout" || (0, import_react.useContext)(Vr).editorModeStatus === "both") && N(p1, {
        children: [d(ka, {
          name: b0.style,
          children: e.style.getPropertyView()
        }), d(ka, {
          name: b0.labelStyle,
          children: e.labelStyle.getPropertyView()
        }), d(ka, {
          name: b0.inputFieldStyle,
          children: e.inputFieldStyle.getPropertyView()
        })]
      })]
    });
  }).build();
}();
var Ge = H0(Ie, [HQe({
  name: "value",
  desc: _("export.datePickerValueDesc"),
  depKeys: ["value", "showTime", "timeZone", "userTimeZone"],
  func: (t) => {
    let e = null;
    for (const a of lZn)
      if (nn.utc(t.value, a).isValid()) {
        e = nn.utc(t.value, a);
        break;
      }
    if (!t.showTime && (e == null ? void 0 : e.hour()) === 0 && (e == null ? void 0 : e.minute()) === 0 && (e == null ? void 0 : e.second()) === 0 && (e = e == null ? void 0 : e.hour(12)), e != null && e.isValid()) {
      const a = t.timeZone === "UserChoice" ? t.userTimeZone : t.timeZone || "UTC";
      return e.tz(a).format(t.showTime ? zP1 : xP1);
    }
    return null;
  }
}), HQe({
  name: "formattedValue",
  desc: _("export.datePickerFormattedValueDesc"),
  depKeys: ["value", "format", "timeZone", "userTimeZone"],
  func: (t) => {
    let e = null;
    for (const a of lZn)
      if (nn.utc(t.value, a).isValid()) {
        e = nn.utc(t.value, a);
        break;
      }
    if (!t.showTime && (e == null ? void 0 : e.hour()) === 0 && (e == null ? void 0 : e.minute()) === 0 && (e == null ? void 0 : e.second()) === 0 && (e = e == null ? void 0 : e.hour(12)), e != null && e.isValid()) {
      const a = t.timeZone === "UserChoice" ? t.userTimeZone : t.timeZone || "UTC";
      return e.tz(a).format(t.format);
    }
    return "";
  }
}), HQe({
  name: "timestamp",
  desc: _("export.datePickerTimestampDesc"),
  depKeys: ["value"],
  func: (t) => {
    const e = t.value ? nn(t.value, lZn) : null;
    return e != null && e.isValid() ? e.unix() : "";
  }
}), HQe({
  name: "invalid",
  desc: _("export.invalidDesc"),
  depKeys: ["value", "required", "minTime", "maxTime", "minDate", "maxDate", "customRule"],
  func: (t) => D({
    ...t,
    value: {
      value: t.value
    }
  }).validateStatus !== "success"
}), HQe({
  name: "timeZone",
  desc: _("export.timeZoneDesc"),
  depKeys: ["timeZone", "userTimeZone"],
  func: (t) => (console.log("input.timeZone", t.timeZone), t.timeZone === "UserChoice" ? t.userTimeZone : t.timeZone || "UTC")
}), ...RQe]);
var I = H0(Ae, [HQe({
  name: "start",
  desc: _("export.dateRangeStartDesc"),
  depKeys: ["start", "showTime", "timeZone", "userRangeTimeZone"],
  func: (t) => {
    let e = null;
    for (const a of lZn)
      if (nn.utc(t.start, a).isValid()) {
        e = nn.utc(t.start, a);
        break;
      }
    if (!t.showTime && (e == null ? void 0 : e.hour()) === 0 && (e == null ? void 0 : e.minute()) === 0 && (e == null ? void 0 : e.second()) === 0 && (e = e == null ? void 0 : e.hour(12)), e != null && e.isValid()) {
      const a = t.timeZone === "UserChoice" ? t.userRangeTimeZone : t.timeZone || "UTC";
      return e.tz(a).format(t.showTime ? zP1 : xP1);
    }
    return null;
  }
}), HQe({
  name: "end",
  desc: _("export.dateRangeEndDesc"),
  depKeys: ["end", "showTime", "timeZone", "userRangeTimeZone"],
  func: (t) => {
    let e = null;
    for (const a of lZn)
      if (nn.utc(t.end, a).isValid()) {
        e = nn.utc(t.end, a);
        break;
      }
    if (!t.showTime && (e == null ? void 0 : e.hour()) === 0 && (e == null ? void 0 : e.minute()) === 0 && (e == null ? void 0 : e.second()) === 0 && (e = e == null ? void 0 : e.hour(12)), e != null && e.isValid()) {
      const a = t.timeZone === "UserChoice" ? t.userRangeTimeZone : t.timeZone || "UTC";
      return e.tz(a).format(t.showTime ? zP1 : xP1);
    }
    return null;
  }
}), HQe({
  name: "startTimestamp",
  desc: _("export.dateRangeStartTimestampDesc"),
  depKeys: ["start", "timeZone", "userRangeTimeZone"],
  func: (t) => {
    let e = null;
    for (const a of lZn)
      if (nn.utc(t.start, a).isValid()) {
        e = nn.utc(t.start, a);
        break;
      }
    if (e != null && e.isValid()) {
      const a = t.timeZone === "UserChoice" ? t.userRangeTimeZone : t.timeZone || "UTC";
      return e.tz(a).unix();
    }
    return "";
  }
}), HQe({
  name: "endTimestamp",
  desc: _("export.dateRangeEndTimestampDesc"),
  depKeys: ["end", "timeZone", "userRangeTimeZone"],
  func: (t) => {
    let e = null;
    for (const a of lZn)
      if (nn.utc(t.end, a).isValid()) {
        e = nn.utc(t.end, a);
        break;
      }
    if (e != null && e.isValid()) {
      const a = t.timeZone === "UserChoice" ? t.userRangeTimeZone : t.timeZone || "UTC";
      return e.tz(a).unix();
    }
    return "";
  }
}), HQe({
  name: "formattedValue",
  desc: _("export.dateRangeFormattedValueDesc"),
  depKeys: ["start", "end", "format", "timeZone", "userRangeTimeZone"],
  func: (t) => {
    let e = null, a = null;
    for (const i of lZn)
      if (nn.utc(t.start, i).isValid()) {
        e = nn.utc(t.start, i);
        break;
      }
    for (const i of lZn)
      if (nn.utc(t.end, i).isValid()) {
        a = nn.utc(t.end, i);
        break;
      }
    if (!t.showTime && (e == null ? void 0 : e.hour()) === 0 && (e == null ? void 0 : e.minute()) === 0 && (e == null ? void 0 : e.second()) === 0 && (e = e == null ? void 0 : e.hour(12)), !t.showTime && (a == null ? void 0 : a.hour()) === 0 && (a == null ? void 0 : a.minute()) === 0 && (a == null ? void 0 : a.second()) === 0 && (a = a == null ? void 0 : a.hour(12)), e != null && e.isValid() || a != null && a.isValid()) {
      const i = t.timeZone === "UserChoice" ? t.userRangeTimeZone : t.timeZone || "UTC", g = e != null && e.isValid() ? e.tz(i).format(t.format) : "", m = a != null && a.isValid() ? a.tz(i).format(t.format) : "";
      return [g, m].filter(Boolean).join(" - ");
    }
    return "";
  }
}), HQe({
  name: "formattedStartValue",
  desc: _("export.dateRangeFormattedStartValueDesc"),
  depKeys: ["start", "format", "timeZone", "userRangeTimeZone"],
  func: (t) => {
    let e = null;
    for (const a of lZn)
      if (nn.utc(t.start, a).isValid()) {
        e = nn.utc(t.start, a);
        break;
      }
    if (!t.showTime && (e == null ? void 0 : e.hour()) === 0 && (e == null ? void 0 : e.minute()) === 0 && (e == null ? void 0 : e.second()) === 0 && (e = e == null ? void 0 : e.hour(12)), e != null && e.isValid()) {
      const a = t.timeZone === "UserChoice" ? t.userRangeTimeZone : t.timeZone || "UTC";
      return e.tz(a).format(t.format);
    }
    return "";
  }
}), HQe({
  name: "formattedEndValue",
  desc: _("export.dateRangeFormattedEndValueDesc"),
  depKeys: ["end", "format", "timeZone", "userRangeTimeZone"],
  func: (t) => {
    let e = null;
    for (const a of lZn)
      if (nn.utc(t.end, a).isValid()) {
        e = nn.utc(t.end, a);
        break;
      }
    if (!t.showTime && (e == null ? void 0 : e.hour()) === 0 && (e == null ? void 0 : e.minute()) === 0 && (e == null ? void 0 : e.second()) === 0 && (e = e == null ? void 0 : e.hour(12)), e != null && e.isValid()) {
      const a = t.timeZone === "UserChoice" ? t.userRangeTimeZone : t.timeZone || "UTC";
      return e.tz(a).format(t.format);
    }
    return "";
  }
}), HQe({
  name: "invalid",
  desc: _("export.invalidDesc"),
  depKeys: ["start", "end", "required", "minTime", "maxTime", "minDate", "maxDate", "customRule", "timeZone", "userRangeTimeZone"],
  func: (t) => {
    const e = t.timeZone === "UserChoice" ? t.userRangeTimeZone : t.timeZone || "UTC";
    let a = null, i = null;
    for (const T of lZn)
      if (nn.utc(t.start, T).isValid()) {
        a = nn.utc(t.start, T).tz(e);
        break;
      }
    for (const T of lZn)
      if (nn.utc(t.end, T).isValid()) {
        i = nn.utc(t.end, T).tz(e);
        break;
      }
    const g = a && (!a.isValid() || t.minDate && a.isBefore(nn(t.minDate).tz(e)) || t.maxDate && a.isAfter(nn(t.maxDate).tz(e))), m = i && (!i.isValid() || t.minDate && i.isBefore(nn(t.minDate).tz(e)) || t.maxDate && i.isAfter(nn(t.maxDate).tz(e)));
    return g || m;
  }
}), HQe({
  name: "timeZone",
  desc: _("export.timeZoneDesc"),
  depKeys: ["timeZone", "userRangeTimeZone"],
  func: (t) => t.timeZone === "UserChoice" ? t.userRangeTimeZone : t.timeZone || "UTC"
}), ...RQe]);
I = N0(I, [...S, {
  method: {
    name: "clearAll",
    description: _("date.clearAllDesc"),
    params: []
  },
  execute: (t) => {
    t.children.start.getView().onChange(""), t.children.end.getView().onChange("");
  }
}, {
  method: {
    name: "resetAll",
    description: _("date.resetAllDesc"),
    params: []
  },
  execute: (t) => {
    t.children.start.getView().reset(), t.children.end.getView().reset();
  }
}, {
  method: {
    name: "setRange",
    params: []
  },
  execute: (t, e) => {
    if (e.length !== 1)
      return Promise.reject(_("formComp.valuesLengthError"));
    const a = e[0];
    if (typeof a != "object" || a === null || Array.isArray(a) || !a.hasOwnProperty("start") || !a.hasOwnProperty("end"))
      return Promise.reject(_("formComp.valueTypeError"));
    t.children.start.getView().onChange(a.start), t.children.end.getView().onChange(a.end);
  }
}]);

export {
  Ie,
  Ae,
  Ge,
  I
};
//# sourceMappingURL=chunk-RQDZFGTB.js.map
