{
  "version": 3,
  "sources": ["../../lowcoder-sdk/dist/f253966a.js"],
  "sourcesContent": ["import { C as g, O as w } from \"./f915fcd2.js\";\nimport { J as a, dW as d, _ as c } from \"./c988e26e.js\";\nimport { MockTableComp as h } from \"./b416b998.js\";\nimport { TableComp as x } from \"./e830a3ab.js\";\nimport \"react\";\nimport \"./22fa10de.js\";\nimport \"./8c51b61b.js\";\nimport \"./5230605f.js\";\nimport \"./be799735.js\";\nimport \"react-dom\";\nimport \"./0417d842.js\";\nimport \"./975a080d.js\";\nimport \"./82a4bca8.js\";\nimport \"./71bdd49a.js\";\nimport \"./2088ebd5.js\";\nimport \"./d3b0afba.js\";\nimport \"./85e61f03.js\";\nimport \"./36c2248f.js\";\nimport \"./70f9cad3.js\";\nimport \"./80c67fbe.js\";\nimport \"./094988fd.js\";\nimport \"./734fbd0f.js\";\nimport \"./80229ccd.js\";\nimport \"./16b77c22.js\";\nimport \"./b25be8d9.js\";\nimport \"./0c3664e6.js\";\nimport \"./c504e788.js\";\nimport \"./ad2208e2.js\";\nimport \"./e5bcb9b0.js\";\nimport \"./51dea655.js\";\nimport \"./fcc9e192.js\";\nimport \"./325a473d.js\";\nimport \"./33706f61.js\";\nimport \"./765e17fb.js\";\nimport \"./98885dce.js\";\nimport \"./9ee13d0e.js\";\nimport \"./9f467dd0.js\";\nimport \"./765a8ca5.js\";\nimport \"./3e9c3444.js\";\nimport \"./464239f7.js\";\nimport \"./608865ad.js\";\nimport \"./911053df.js\";\nimport \"./6a2c46a1.js\";\nimport \"./b0ddbdcf.js\";\nimport \"./ada1f35c.js\";\nimport \"./68ba86a3.js\";\ntest(\"test column\", () => {\n  const e = {\n    title: \"name\"\n    // editable: true, // TODO: change to boolean\n  };\n  let o = new g({\n    value: e\n  });\n  o = a(o);\n  const t = o.getView();\n  expect(t.title).toEqual(e.title);\n});\ntest(\"test column render\", () => {\n  const e = {\n    render: {\n      compType: \"text\",\n      comp: {\n        text: \"{{currentRow.id}}\"\n      }\n    }\n    // editable: true, // TODO: change to boolean\n  };\n  let o = new g({\n    value: e\n  });\n  o = a(o);\n  const t = o.getView();\n  expect(t.render({\n    currentCell: null,\n    currentIndex: null,\n    currentRow: {\n      id: \"hello\"\n    },\n    currentOriginalIndex: null\n  }, \"0\").getView().view({}).props.normalView).toEqual(\"hello\");\n});\ntest(\"test table\", async () => {\n  const e = {\n    data: JSON.stringify([{\n      a: 1\n    }]),\n    columns: [{\n      dataIndex: \"a\",\n      hide: !0\n    }, {\n      title: \"custom\",\n      dataIndex: \"\",\n      isCustom: !0\n    }]\n  }, o = {\n    query1: d({\n      data: [{\n        q: 1\n      }]\n    }),\n    query2: d({\n      data: [{\n        q2: 2\n      }]\n    })\n  };\n  let t = new x({\n    dispatch: (l) => {\n      t = a(t.reduce(l), o);\n    },\n    value: e\n  });\n  t = a(t);\n  let r = t.children.columns.getView();\n  expect(r.length).toEqual(2), t = a(t.reduce(t.changeChildAction(\"data\", '[{\"a\":1, \"c\":2, \"d\":3}]'))), await new Promise((l) => setTimeout(l, 20)), r = t.children.columns.getView(), expect(r.length).toEqual(4), expect(r[0].getView().dataIndex).toEqual(\"a\"), expect(r[0].getView().hide).toBe(!0), expect(r[1].getView().title).toEqual(\"custom\"), expect(r[2].getView().title).toEqual(\"c\"), expect(r[3].getView().title).toEqual(\"d\");\n}, 1e3);\ntest(\"test mock table render\", () => {\n  let e = new h({});\n  e = a(e);\n});\ntest(\"test table data transform\", () => {\n  function e(i, m) {\n    const p = m.exposingValues.displayData, {\n      data: u\n    } = m.getProps(), s = m.filterData;\n    return expect(u.length).toEqual(3), expect(p.length).toEqual(i), expect(p.map((n) => c.omit(n, \"custom\"))).toEqual(c.map(s, (n) => c.omit(n, w))), {\n      transformedData: s,\n      data: u,\n      displayData: p\n    };\n  }\n  const o = {\n    data: JSON.stringify([{\n      id: 1,\n      name: \"gg\"\n    }, {\n      id: 5,\n      name: \"gg2\"\n    }, {\n      id: 3,\n      name: \"jjj\"\n    }]),\n    columns: [{\n      dataIndex: \"id\",\n      isCustom: !1,\n      sortable: !0,\n      render: {\n        compType: \"text\",\n        comp: {\n          text: \"{{currentCell}}\"\n        }\n      }\n    }, {\n      dataIndex: \"name\",\n      isCustom: !1,\n      render: {\n        compType: \"text\",\n        comp: {\n          text: \"{{currentCell}}\"\n        }\n      }\n    }, {\n      title: \"custom\",\n      dataIndex: \"ealekfg\",\n      isCustom: !0,\n      render: {\n        compType: \"image\",\n        comp: {\n          src: \"{{currentRow.id}}\"\n        }\n      }\n    }]\n  };\n  let t = new x({\n    dispatch: (i) => {\n      t = a(t.reduce(i));\n    },\n    value: o\n  });\n  t = a(t), t = a(t.reduce(t.changeChildAction(\"sort\", [{\n    column: \"id\",\n    desc: !0\n  }])));\n  let {\n    transformedData: r,\n    data: l,\n    displayData: f\n  } = e(3, t);\n  expect(r.map((i) => i.id)).toEqual([5, 3, 1]), t = a(t.reduce(t.changeChildAction(\"toolbar\", {\n    searchText: \"gg\"\n  }))), e(2, t), t = a(t.reduce(t.changeChildAction(\"toolbar\", {\n    showFilter: !0,\n    filter: {\n      stackType: \"and\",\n      filters: [{\n        columnKey: \"id\",\n        filterValue: \"4\",\n        operator: \"gt\"\n      }, {\n        columnKey: \"id\",\n        filterValue: \"5\",\n        operator: \"lte\"\n      }]\n    }\n  }))), e(1, t);\n});\n"],
  "mappings": "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",
  "names": []
}
