import {
  B,
  G,
  H as H2,
  O as O2,
  U,
  Y
} from "./chunk-5JBSKPRP.js";
import {
  H,
  ae
} from "./chunk-5IAS3Q6R.js";
import {
  O,
  k
} from "./chunk-PPPGPJTG.js";
import {
  GK1,
  H0,
  M2,
  N,
  U11,
  U8,
  VS,
  Vr,
  ZK1,
  _,
  ao,
  b0,
  ca,
  d,
  de,
  eU1,
  fW1,
  hB1,
  ho2,
  ka,
  mB1,
  nc,
  p1,
  pB1,
  t2,
  uW1,
  vo,
  z3
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/98e6b95a.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var ee = de(ho2)`
  width: 100%;
  ${(e) => e.$style && H(e.$style)}
`;
var te = [{
  label: _("tree.singleSelect"),
  value: "single"
}, {
  label: _("tree.multiSelect"),
  value: "multi"
}, {
  label: _("tree.checkbox"),
  value: "check"
}];
var le = [{
  label: _("tree.showAll"),
  value: "all"
}, {
  label: _("tree.showParent"),
  value: "parent"
}, {
  label: _("tree.showChild"),
  value: "child"
}];
var ae2 = {
  ...B,
  selectType: ca(te, "single"),
  checkedStrategy: ca(le, "parent"),
  label: GK1,
  placeholder: t2(M2, _("tree.placeholder")),
  // TODO: more event
  onEvent: U11,
  allowClear: ao,
  showSearch: ao.DEFAULT_TRUE,
  inputValue: z3(""),
  // search value
  style: nc(fW1, "style"),
  labelStyle: nc(uW1, "labelStyle"),
  inputFieldStyle: nc(eU1, "inputFieldStyle"),
  viewRef: ZK1
};
function oe(e) {
  switch (e) {
    case "all":
      return ho2.SHOW_ALL;
    case "parent":
      return ho2.SHOW_PARENT;
    case "child":
      return ho2.SHOW_CHILD;
  }
}
var re = (e) => {
  const {
    treeData: y,
    selectType: s,
    value: i,
    expanded: b,
    style: C,
    labelStyle: f,
    inputValue: V
  } = e, p = s === "single", [v, T] = O(e);
  return (0, import_react.useEffect)(() => {
    p && i.value.length > 1 && i.onChange(i.value.slice(0, 1));
  }, [s]), G(e), e.label({
    required: e.required,
    ...v,
    style: C,
    labelStyle: f,
    inputFieldStyle: e.inputFieldStyle,
    children: d(ee, {
      ref: e.viewRef,
      $style: e.inputFieldStyle,
      popupMatchSelectWidth: false,
      disabled: e.disabled,
      placeholder: e.placeholder,
      allowClear: e.allowClear,
      fieldNames: {
        label: "label",
        value: "value"
      },
      treeData: y,
      multiple: !p,
      value: p ? i.value[0] : i.value,
      treeCheckable: s === "check",
      showCheckedStrategy: oe(e.checkedStrategy),
      treeLine: e.showLine ? {
        showLeafIcon: e.showLeafIcon
      } : false,
      treeExpandedKeys: V ? void 0 : b.value,
      onTreeExpand: (l) => {
        b.onChange(l);
      },
      onChange: (l) => {
        const x = Array.isArray(l) ? l : l !== void 0 ? [l] : [];
        T(x);
      },
      showSearch: e.showSearch,
      treeNodeFilterProp: "label",
      autoClearSearchValue: false,
      onSearch: (l) => {
        e.dispatch(U8("inputValue", l, false));
      },
      onFocus: () => e.onEvent("focus"),
      onBlur: () => e.onEvent("blur")
    }, s)
  });
};
var w = function() {
  return new VS(ae2, (e, y) => d(re, {
    ...e,
    dispatch: y
  })).setPropertyViewFn((e) => N(p1, {
    children: [N(ka, {
      name: b0.basic,
      children: [O2(e), hB1(e)]
    }), ["logic", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && N(p1, {
      children: [d(k, {
        ...e
      }), Y(e), N(ka, {
        name: b0.interaction,
        children: [e.onEvent.getPropertyView(), e.hidden.propertyView({
          label: _("prop.hide")
        }), e.disabled.propertyView({
          label: _("prop.disabled")
        }), e.selectType.propertyView({
          label: _("tree.selectType")
        }), U(e), e.selectType.getView() === "check" && e.checkedStrategy.propertyView({
          label: _("tree.checkedStrategy")
        }), mB1(e), pB1(e)]
      })]
    }), ["layout", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && N(ka, {
      name: b0.layout,
      children: [e.expanded.propertyView({
        label: _("tree.expanded")
      }), e.defaultExpandAll.propertyView({
        label: _("tree.defaultExpandAll")
      }), e.showLine.propertyView({
        label: _("tree.showLine")
      }), e.showLine.getView() && e.showLeafIcon.propertyView({
        label: _("tree.showLeafIcon")
      })]
    }), ["layout", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && e.label.getPropertyView(), ["layout", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && N(p1, {
      children: [d(ka, {
        name: b0.style,
        children: e.style.getPropertyView()
      }), d(ka, {
        name: b0.labelStyle,
        children: e.labelStyle.getPropertyView()
      }), d(ka, {
        name: b0.inputFieldStyle,
        children: e.inputFieldStyle.getPropertyView()
      })]
    })]
  })).setExposeMethodConfigs(ae).build();
}();
w = class extends w {
  autoHeight() {
    return true;
  }
};
var we = H0(w, [...H2, new vo("inputValue", _("select.inputValueDesc"))]);

export {
  we
};
//# sourceMappingURL=chunk-5YXZUTZ4.js.map
