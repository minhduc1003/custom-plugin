import {
  BK1,
  BW1,
  E7,
  Fj1,
  Gse,
  M2,
  N,
  VS,
  Vr,
  _,
  ao,
  b0,
  d,
  de,
  gM,
  h1,
  ka,
  nc,
  p1,
  qse,
  s2e,
  t2,
  vo,
  zte,
  zx
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/ede9fb49.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var D = de(zx)`
 
  margin-top: 3.5px;
  rotate: ${(t) => t.type === "vertical" ? "0deg" : t.$style.rotation};
  .ant-divider-inner-text {
    height: 32px;
    display: flex;
    align-items: center;
    font-size: ${(t) => t.$style.textSize};
    font-weight: ${(t) => t.$style.textWeight};
    font-family: ${(t) => t.$style.fontFamily};
    text-transform: ${(t) => t.$style.textTransform};
    ${(t) => t.$style.textDecoration !== void 0 ? `text-decoration: ${t.$style.textDecoration};` : ""}
    font-style: ${(t) => t.$style.fontStyle};
  }

  ${(t) => t.$animationStyle}
  min-width: 1px;
  width: ${(t) => qse(t.$style.margin)};
  min-height: ${(t) => Gse(t.$style.margin)};
  margin: ${(t) => t.$style.margin};
  padding: ${(t) => t.$style.padding};
  border-radius: ${(t) => t.$style.radius};
  border-top: ${(t) => t.$style.borderWidth && t.$style.borderWidth !== "0px" ? t.$style.borderWidth : "1px"} 
              ${(t) => t.$style.borderStyle} 
              ${(t) => t.$style.border};

  .ant-divider-inner-text::before,
  .ant-divider-inner-text::after {
    border-block-start: ${(t) => t.$style.borderWidth && t.$style.borderWidth !== "0px" ? t.$style.borderWidth : "1px"} 
                      ${(t) => t.$style.border} !important;
    border-block-start-color: inherit;
    border-block-end: 0;
    border-block-start-radius: inherit;
  }

  &.ant-divider-horizontal.ant-divider-with-text {
    margin: 0;
    border-top-color: ${(t) => t.$style.color};
    color: ${(t) => t.$style.text};
  }

  &.ant-divider-horizontal.ant-divider-with-text::before,
  &.ant-divider-horizontal.ant-divider-with-text::after {
    border-top-color: ${(t) => t.$style.color};
    border-radius: ${(t) => t.$style.radius};
    border-top: ${(t) => t.$style.borderWidth && t.$style.borderWidth !== "0px" ? t.$style.borderWidth : "1px"} 
               ${(t) => t.$style.borderStyle} 
               ${(t) => t.$style.border};
  }
  &.ant-divider-vertical {
    height:  ${(t) => t.type === "vertical" && "200px"}; 
    border-left: ${(t) => t.$style.borderWidth && t.$style.borderWidth !== "0px" ? t.$style.borderWidth : "1px"} 
                ${(t) => t.$style.borderStyle} 
                ${(t) => t.$style.border};
    border-top: none;
  }
`;
var H = {
  title: M2,
  align: BK1(),
  type: ao,
  autoHeight: t2(gM, "auto"),
  style: nc(BW1, "style"),
  animationStyle: nc(Fj1, "animationStyle")
};
function P(t) {
  return t && t.hasOwnProperty("color") ? {
    ...t,
    style: {
      color: t.color,
      text: ""
    }
  } : t;
}
var k = zte(new VS(H, (t) => {
  const e = t.type ? "vertical" : "horizontal";
  return d(D, {
    orientation: t.align,
    type: e,
    $style: t.style,
    $animationStyle: t.animationStyle,
    children: e === "horizontal" && t.title
  });
}).setPropertyViewFn((t) => {
  var e;
  return N(p1, {
    children: [!((e = t == null ? void 0 : t.type) != null && e.getView()) && d(ka, {
      name: b0.basic,
      children: t.title.propertyView({
        label: _("divider.title")
      })
    }), ["logic", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && d(ka, {
      name: b0.interaction,
      children: E7(t)
    }), ["layout", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && N(p1, {
      children: [N(ka, {
        name: b0.layout,
        children: [!h1.isEmpty(t.title.getView()) && t.align.propertyView({
          label: _("divider.align"),
          radioButton: true
        }), t.autoHeight.getPropertyView()]
      }), N(ka, {
        name: b0.style,
        children: [t.type.propertyView({
          label: _("divider.type")
        }), t.style.getPropertyView()]
      }), d(ka, {
        name: b0.animationStyle,
        hasTooltip: true,
        children: t.animationStyle.getPropertyView()
      })]
    })]
  });
}).setExposeStateConfigs([new vo("title", _("divider.titleDesc")), new vo("align", _("divider.alignDesc")), s2e]).build(), P);
var A = class extends k {
  autoHeight() {
    return this.children.autoHeight.getView();
  }
};

export {
  A
};
//# sourceMappingURL=chunk-2U7PNSWS.js.map
