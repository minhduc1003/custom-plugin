import {
  We,
  Ye,
  Ze
} from "./chunk-KYYAOQDN.js";
import {
  Ba
} from "./chunk-LMSFAF37.js";
import "./chunk-FXWJ52WH.js";
import "./chunk-IRR3YWAF.js";
import {
  N
} from "./chunk-AVQ6CQRS.js";
import {
  Blr,
  Dlr,
  E22,
  Flr,
  HC,
  Klr,
  Lg2,
  N as N2,
  Ns,
  O9,
  Oee,
  Plr,
  QN,
  Tee,
  Ulr,
  Vr,
  Wlr,
  _,
  _H,
  aBe,
  b3,
  d,
  de,
  fl,
  gv2,
  h1,
  hQ,
  iQ,
  jI,
  jlr,
  kee,
  m$e,
  mqe,
  nBe,
  p1,
  qXe,
  qe1,
  qsn,
  r7,
  sa,
  uee,
  x0,
  zH,
  zc,
  zx
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/6d3d41c3.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
function ee(H) {
  const {
    themeSettingKey: r,
    name: M,
    desc: O,
    color: v,
    radius: B,
    configChange: C,
    showVarName: E = true,
    margin: k,
    padding: I,
    gridColumns: S,
    borderStyle: T,
    borderWidth: w,
    borderColor: j,
    fontFamily: V
  } = H, J = h1.debounce(C, 0), [x, b] = (0, import_react.useState)(v), [X, $] = (0, import_react.useState)(B), [D, F] = (0, import_react.useState)(k), [Y, R] = (0, import_react.useState)(I), [_2, K] = (0, import_react.useState)(S), [P, U] = (0, import_react.useState)(T), [W, A] = (0, import_react.useState)(w), [ne, q] = (0, import_react.useState)(j), [Z, z] = (0, import_react.useState)(V), l = `(${r})`, s = () => {
    !x || !_H(x) ? b(v) : (b(x0(x)), C({
      themeSettingKey: r,
      color: x0(x)
    }));
  }, o = (e) => {
    let t = "";
    !e || Number(e) === 0 ? t = "0" : /^[0-9]+$/.test(e) ? t = Number(e) + "px" : /^[0-9]+(px|%)$/.test(e) ? t = e : t = "0", $(t), C({
      themeSettingKey: r,
      radius: t
    });
  }, i = (e) => {
    let t = "";
    !e || Number(e) === 0 ? t = "0" : /^[0-9]+$/.test(e) ? t = Number(e) + "px" : /^[0-9]+(px|%)$/.test(e) ? t = e : t = "3px", F(t), C({
      themeSettingKey: r,
      margin: t
    });
  }, c = (e) => {
    let t = "";
    !e || Number(e) === 0 ? t = "0" : /^[0-9]+$/.test(e) ? t = Number(e) + "px" : /^[0-9]+(px|%)$/.test(e) ? t = e : t = "3px", R(t), C({
      themeSettingKey: r,
      padding: t
    });
  }, d2 = (e) => {
    let t = "";
    e ? t = e : t = "24", K(t), C({
      themeSettingKey: r,
      gridColumns: t
    });
  }, u = (e) => {
    let t = "";
    e ? t = e : t = "solid", U(t), C({
      themeSettingKey: r,
      borderStyle: t
    });
  }, y = (e) => {
    let t = "";
    !e || Number(e) === 0 ? t = "0" : /^[0-9]+$/.test(e) ? t = Number(e) + "px" : /^[0-9]+(px|%)$/.test(e) ? t = e : t = "1px", A(e), C({
      themeSettingKey: r,
      borderWidth: t
    });
  }, m = (e) => {
    let t = "";
    e ? t = e : t = "Roboto, sans-serif", z(t), C({
      themeSettingKey: r,
      fontFamily: t
    });
  };
  return (0, import_react.useEffect)(() => {
    x && _H(x) && J({
      themeSettingKey: r,
      color: x
    });
  }, [x]), (0, import_react.useEffect)(() => {
    b(v);
  }, [v]), (0, import_react.useEffect)(() => {
    $(B);
  }, [B]), (0, import_react.useEffect)(() => {
    F(k);
  }, [k]), (0, import_react.useEffect)(() => {
    R(I);
  }, [I]), (0, import_react.useEffect)(() => {
    K(S);
  }, [S]), (0, import_react.useEffect)(() => {
    U(T);
  }, [T]), (0, import_react.useEffect)(() => {
    A(w);
  }, [w]), (0, import_react.useEffect)(() => {
    q(j);
  }, [j]), (0, import_react.useEffect)(() => {
    z(V);
  }, [V]), N2(Dlr, {
    className: H.className,
    children: [N2("div", {
      className: "text-desc",
      children: [N2("div", {
        className: "name",
        children: [M, " ", E && d("span", {
          children: l
        })]
      }), d("div", {
        className: "desc",
        children: O
      })]
    }), r !== "radius" && r !== "margin" && r !== "padding" && r !== "gridColumns" && r !== "borderStyle" && r !== "borderWidth" && r !== "fontFamily" && N2("div", {
      className: "config-input",
      children: [d(mqe, {
        changeColor: h1.debounce(b, 500, {
          leading: true,
          trailing: true
        }),
        color: x,
        trigger: "hover"
      }), d(Ns, {
        value: x,
        onChange: (e) => b(e.target.value),
        onBlur: s,
        onKeyUp: (e) => e.nativeEvent.key === "Enter" && s()
      })]
    }), r === "radius" && N2("div", {
      className: "config-input",
      children: [d(Plr, {
        $radius: B || "0",
        children: d("div", {
          children: d(aBe, {
            style: {
              width: "16px",
              margin: "-2px 0 2px -2px",
              padding: "0px"
            }
          })
        })
      }), d(Ns, {
        value: X,
        onChange: (e) => $(e.target.value),
        onBlur: (e) => o(e.target.value),
        onKeyUp: (e) => e.nativeEvent.key === "Enter" && o(e.currentTarget.value)
      })]
    }), r === "borderStyle" && N2("div", {
      className: "config-input",
      children: [d(Wlr, {
        $borderStyle: T || "solid",
        children: d("div", {
          children: d(nBe, {
            style: {
              width: "16px",
              margin: "2px 0 0 2px",
              padding: "0px"
            }
          })
        })
      }), d(Ns, {
        value: P,
        onChange: (e) => U(e.target.value),
        onBlur: (e) => u(e.target.value),
        onKeyUp: (e) => e.nativeEvent.key === "Enter" && u(e.currentTarget.value)
      })]
    }), r === "borderWidth" && N2("div", {
      className: "config-input",
      children: [d(Ulr, {
        $borderWidth: w || "1px",
        children: d("div", {
          children: d(Oee, {
            style: {
              width: "16px",
              margin: "2px 0 0 2px",
              padding: "0px"
            }
          })
        })
      }), d(Ns, {
        value: W,
        onChange: (e) => A(e.target.value),
        onBlur: (e) => y(e.target.value),
        onKeyUp: (e) => e.nativeEvent.key === "Enter" && y(e.currentTarget.value)
      })]
    }), r === "margin" && N2("div", {
      className: "config-input",
      children: [d(Flr, {
        $margin: k || "4px",
        children: d("div", {
          children: d(kee, {
            title: ""
          })
        })
      }), d(Ns, {
        value: D,
        onChange: (e) => F(e.target.value),
        onBlur: (e) => i(e.target.value),
        onKeyUp: (e) => e.nativeEvent.key === "Enter" && i(e.currentTarget.value)
      })]
    }), r === "padding" && N2("div", {
      className: "config-input",
      children: [d(Blr, {
        $padding: I || "4px",
        children: d("div", {
          children: d(Tee, {
            title: ""
          })
        })
      }), d(Ns, {
        value: Y,
        onChange: (e) => R(e.target.value),
        onBlur: (e) => c(e.target.value),
        onKeyUp: (e) => e.nativeEvent.key === "Enter" && c(e.currentTarget.value)
      })]
    }), r === "gridColumns" && N2("div", {
      className: "config-input",
      children: [d(jlr, {
        $gridColumns: S || "24",
        children: d("div", {
          children: d(gv2, {
            title: ""
          })
        })
      }), d(iQ, {
        style: {
          width: "90%",
          margin: "8px 5% 0 5%"
        },
        min: 8,
        max: 48,
        value: parseInt(_2 || "24"),
        onChange: (e) => K(e.toString()),
        onChangeComplete: (e) => d2(e.toString())
      })]
    }), r === "fontFamily" && d("div", {
      className: "config-input",
      children: d(Ns, {
        value: Z,
        onChange: (e) => z(e.target.value),
        onBlur: (e) => m(e.target.value),
        onKeyUp: (e) => e.nativeEvent.key === "Enter" && m(e.currentTarget.value)
      })
    })]
  });
}
var qe = [{
  label: "Hide Component",
  key: "hidden"
}, {
  label: "Disable Component",
  key: "disable"
}, {
  label: "Margin",
  key: "style.margin"
}, {
  label: "Padding",
  key: "style.padding"
}, {
  label: "Font Size",
  key: "style.textSize"
}, {
  label: "Font Weight",
  key: "style.textWeight"
}, {
  label: "Font Family",
  key: "style.fontFamily"
}, {
  label: "Font Style",
  key: "style.fontStyle"
}, {
  label: "Text Transform",
  key: "style.textTransform"
}, {
  label: "Text Decoration",
  key: "style.textDecoration"
}, {
  label: "Border Radius",
  key: "style.borderRadius"
}, {
  label: "Border Width",
  key: "style.borderWidth"
}, {
  label: "Border Style",
  key: "style.borderStyle"
}, {
  label: "Background Image",
  key: "style.backgroundImage"
}, {
  label: "Background Image Repeat",
  key: "style.backgroundImageRepeat"
}, {
  label: "Background Image Size",
  key: "style.backgroundImageSize"
}, {
  label: "Background Image Position",
  key: "style.backgroundImagePosition"
}, {
  label: "Background Image Origin",
  key: "style.backgroundImageOrigin"
}];
var Ze2 = de.div`
  height: calc(100vh - ${HC});
`;
var Qe = de(O9)`
  .ant-dropdown-menu-item-icon {
    width: 14px !important;
    height: 14px !important; 
    max-width: 14px !important;
  }
`;
var it = (H) => {
  const r = (0, import_react.useContext)(Vr), [M, O] = (0, import_react.useState)([]);
  b3(), jI();
  const [v, B] = (0, import_react.useState)(r.getCollisionStatus()), [C, E] = (0, import_react.useState)([]), [k, I] = (0, import_react.useState)(""), [S, T] = (0, import_react.useState)(null), [w, j] = (0, import_react.useState)(""), V = (0, import_react.useRef)(null);
  (0, import_react.useEffect)(() => {
    qXe(v);
  }, [v]);
  const J = (0, import_react.useCallback)((l) => {
    T(l);
  }, []), x = (l) => {
    r.rootComp.children.settings.children.disableCollision.dispatchChangeValueAction(l), B(l);
  }, b = (l, s, o) => {
    const {
      items: i,
      children: c
    } = l;
    if (Object.keys(i).length)
      for (const d2 in i) {
        const u = {
          title: i[d2].children.name.getView(),
          type: i[d2].children.compType.getView(),
          key: d2,
          children: []
        };
        if (o) {
          const y = qsn(s, o);
          u.disabled = true, y == null || y.children.push(u);
        } else
          s.push(u);
      }
    if (Object.keys(c).length)
      for (const d2 in c)
        b(c[d2], s, d2);
    return s;
  }, X = (0, import_react.useCallback)((l) => {
    r.setSelectedCompNames(/* @__PURE__ */ new Set([l]), "leftPanel");
  }, [r]), $ = (l, s) => (s.find((o) => o.name === l.title), d(Ze, {
    children: d("span", {
      children: d("span", {
        children: l.title
      })
    })
  })), [D, F] = (0, import_react.useState)([]);
  (0, import_react.useEffect)(() => {
    const l = Y();
    F(l);
  }, [r]);
  const Y = () => {
    const l = r.getUIComp().getTree(), s = b(l, []), o = r.rootComp.toJsonValue();
    return o.ui.compType === "module" ? s.forEach((i) => {
      i.pos = o.ui.comp.container.layout[i.key].pos;
    }) : s.forEach((i) => {
      i.pos = o.ui.layout[i.key].pos;
    }), s.sort((i, c) => {
      const d2 = (i == null ? void 0 : i.pos) || 0, u = (c == null ? void 0 : c.pos) || 0;
      return d2 < u ? -1 : d2 > u ? 1 : 0;
    }), s;
  }, R = (l) => {
    const {
      expandedKeys: s
    } = l;
    s.includes(l.node.key) || O(s);
  }, _2 = (l) => {
    const s = l.node.pos.split("-"), o = l.dragNode.pos.split("-");
    s.length === o.length && F((i) => {
      let c = Ba(i);
      const d2 = Number(s[s.length - 1]), u = Number(o[o.length - 1]), y = s.slice(0, -1).join("-"), m = y === "0" ? {
        children: c
      } : K(c, y);
      if (m && m.children) {
        const g = m.children.findIndex((a) => a.key === l.dragNode.key);
        if (g !== -1) {
          const [a] = m.children.splice(g, 1);
          m.children.splice(d2 > u ? d2 - 1 : d2, 0, a);
        }
      }
      const e = r.rootComp.toJsonValue();
      let t = {};
      if (e.ui.compType === "module") {
        m.children.forEach((a, se) => {
          t[a.key] = {
            ...e.ui.comp.container.layout[a.key],
            pos: se
          };
        });
        const g = r.rootComp.children.ui.getModuleLayoutComp();
        g == null || g.children.container.dispatchChangeValueAction({
          ...e.ui.comp.container,
          layout: t
        });
      } else
        m.children.forEach((g, a) => {
          t[g.key] = {
            ...e.ui.layout[g.key],
            pos: a
          };
        }), r.rootComp.children.ui.dispatchChangeValueAction({
          ...e.ui,
          layout: t
        });
      return c;
    });
  }, K = (l, s) => {
    const o = s.split("-").map((c) => Number(c));
    let i = {
      children: l
    };
    for (let c = 0; c < o.length; c++)
      i = i.children[o[c]];
    return i;
  };
  (0, import_react.useCallback)((l) => {
    switch (l) {
      case "hidden":
      case "disable":
        return "true | false";
      case "style.border":
        return "e.g., #ffffff";
      case "style.borderRadius":
      case "style.radius":
        return "e.g., 4px";
      case "style.borderWidth":
        return "e.g., 2px";
      case "style.borderStyle":
        return "solid | dashed | dotted";
      case "style.backgroundImage":
        return "URL as string";
      case "style.backgroundImageRepeat":
        return "repeat | repeat-x | repeat-y | no-repeat";
      case "style.backgroundImageSize":
        return "cover | contain | % | px";
      case "style.backgroundImagePosition":
        return "top | bottom | center | % | px";
      case "style.backgroundImageOrigin":
        return "padding-box | border-box | content-box";
      case "style.margin":
      case "style.padding":
        return "e.g., 4px 8px 16px 32px";
      case "style.textSize":
        return "e.g., 16px";
      case "style.textWeight":
        return "bold | 900 | normal | 400";
      case "style.fontFamily":
        return "Arial, sans-serif";
      case "style.fontStyle":
        return "normal | italic | oblique";
      case "style.textTransform":
        return "none | capitalize | uppercase | lowercase";
      case "style.textDecoration":
        return "none | underline | overline | line-through";
      default:
        return "Action Value";
    }
  }, []);
  const P = (l, s) => {
    var o, i, c, d2, u;
    for (let y of W()) {
      const m = qsn(D, y), e = r.getUICompByName(m.title);
      if (e) {
        const {
          children: t
        } = e.children.comp, g = e.children.compType.getView(), a = s.split(".");
        a.length === 1 ? (o = t[a[0]]) == null || o.dispatchChangeValueAction(l) : a.length === 2 && (t[a[0]] ? t[a[0]].children[a[1]] ? (d2 = t[a[0]].children[a[1]]) == null || d2.dispatchChangeValueAction(l) : (u = t[a[0]][a[1]]) == null || u.dispatchChangeValueAction(l) : (i = t[g].children[a[0]]) != null && i.children[a[1]] && ((c = t[g].children[a[0]].children[a[1]]) == null || c.dispatchChangeValueAction(l)));
      }
    }
  };
  (0, import_react.useEffect)(() => {
    E([]);
    const l = [], s = r.getUIComp().getTree(), o = b(s, []);
    for (let i of r.selectedCompNames)
      for (let c of o)
        c.title === i && l.push(c.key);
    E(l);
  }, [r]);
  const U = (l, s) => {
    E(l);
    const o = /* @__PURE__ */ new Set();
    for (let i of s.checkedNodes)
      o.add(i.title);
    r.setSelectedCompNames(o, "leftPanel");
  }, W = () => C, A = () => k, ne = (0, import_react.useCallback)((l) => {
    var o, i, c, d2, u;
    const s = A();
    for (let y of W()) {
      const m = qsn(D, y), e = r.getUICompByName(m.title);
      if (e) {
        const {
          children: t
        } = e.children.comp, g = e.children.compType.getView(), a = l.split(".");
        a.length === 1 ? (o = t[a[0]]) == null || o.dispatchChangeValueAction(s) : a.length === 2 && (t[a[0]] ? t[a[0]].children[a[1]] ? (d2 = t[a[0]].children[a[1]]) == null || d2.dispatchChangeValueAction(s) : (u = t[a[0]][a[1]]) == null || u.dispatchChangeValueAction(s) : (i = t[g].children[a[0]]) != null && i.children[a[1]] && ((c = t[g].children[a[0]].children[a[1]]) == null || c.dispatchChangeValueAction(s)));
      }
    }
  }, [A, W]), q = () => {
    const l = h1.sortBy(r.uiCompInfoList(), [(o) => o.name]), s = r.getCollisionStatus();
    return N2(p1, {
      children: [N2("div", {
        style: {
          margin: "0px 16px"
        },
        children: [N2("div", {
          style: {
            marginBottom: "10px"
          },
          children: [_("leftPanel.activatelayers"), d(E22, {
            style: {
              margin: "0px 10px"
            },
            size: "small",
            defaultChecked: v,
            disabled: false,
            onChange: (o) => {
              x(o);
            }
          })]
        }), d(Ye, {
          checkable: true,
          onCheck: U,
          selectable: false,
          checkedKeys: C,
          draggable: s,
          onDragEnter: R,
          onDrop: (o) => _2(o),
          treeData: D,
          icon: (o) => o.type && d("div", {
            style: {
              margin: "3px 4px 0 -4px"
            },
            children: We[o.type] || d(Lg2, {})
          }),
          switcherIcon: (o) => o.expanded ? d(QN, {}) : d(uee, {}),
          expandedKeys: M,
          onExpand: (o) => O(o),
          titleRender: (o) => $(o, l)
        }), d("div", {
          style: {
            margin: "10px 0px"
          },
          children: N2(m$e, {
            gap: "small",
            vertical: true,
            children: [d(Qe, {
              dropdownRender: () => d(r7, {
                items: qe,
                onClick: ({
                  key: o
                }) => {
                  J(o);
                }
              }),
              children: d(sa, {
                size: "small",
                children: N2(hQ, {
                  children: ["Action ", d(N, {})]
                })
              })
            }), d(fl, {
              ref: V,
              value: k,
              onChange: (o) => I(o.target.value),
              placeholder: w
            }), d(sa, {
              type: "primary",
              disabled: !S,
              onClick: () => S && ne(S),
              children: "Apply Action"
            }), d("br", {}), d(ee, {
              themeSettingKey: "background",
              name: _("componentDoc.styleBackgroundColor"),
              color: "#ffffff",
              configChange: (o) => P(o.color, "style.background")
            }), d(ee, {
              themeSettingKey: "border",
              name: _("componentDoc.styleBorderColor"),
              color: "#ffffff",
              configChange: (o) => P(o.color, "style.border")
            }), d(ee, {
              themeSettingKey: "text",
              name: _("style.textColor"),
              color: "#ffffff",
              configChange: (o) => P(o.color, "style.text")
            })]
          })
        })]
      }), d(zx, {})]
    });
  }, Z = (0, import_react.useMemo)(() => {
    if (!qe1(r.getAppType()))
      return q();
  }, [r, X, M, D, k]), z = d(zc, {
    children: d("div", {
      style: {
        paddingBottom: 80
      },
      children: d(zH, {
        name: _("leftPanel.layers"),
        width: 288,
        noMargin: true,
        children: d("div", {
          className: Klr,
          children: Z
        })
      })
    })
  });
  return d(Ze2, {
    className: "cypress-left-content",
    children: z
  });
};
export {
  it as LeftLayersContent
};
//# sourceMappingURL=6d3d41c3-2TGTER7G.js.map
