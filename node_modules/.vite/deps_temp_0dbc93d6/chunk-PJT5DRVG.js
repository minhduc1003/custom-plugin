import {
  L
} from "./chunk-3KC2BSDX.js";
import {
  v as v2
} from "./chunk-AOVWTW27.js";
import {
  A
} from "./chunk-MEZEKXQL.js";
import {
  H
} from "./chunk-35OR5TC6.js";
import {
  G
} from "./chunk-TU5ZXGQL.js";
import {
  y
} from "./chunk-XHYKILBN.js";
import {
  O as O2
} from "./chunk-UJOKFOHB.js";
import {
  B
} from "./chunk-BFA4XLEP.js";
import {
  f
} from "./chunk-FB47X7C3.js";
import {
  $
} from "./chunk-U3BV2XWB.js";
import {
  v
} from "./chunk-ZJJZ7KCT.js";
import {
  M
} from "./chunk-UD6GF23N.js";
import {
  ou
} from "./chunk-JNTGN7JA.js";
import {
  F
} from "./chunk-DTUB3P6T.js";
import {
  z
} from "./chunk-FJZ2UJYE.js";
import {
  O
} from "./chunk-MYGL7TQR.js";
import {
  I
} from "./chunk-4PBCAFGZ.js";
import {
  k
} from "./chunk-Y7AE76OL.js";
import {
  N,
  X6,
  _,
  d,
  da,
  p1
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/22fa10de.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var S = [{
  label: _("table.avatars"),
  value: "avatars"
}, {
  label: _("table.text"),
  value: "text"
}, {
  label: _("table.number"),
  value: "number"
}, {
  label: _("table.link"),
  value: "link"
}, {
  label: _("table.links"),
  value: "links"
}, {
  label: _("table.tag"),
  value: "tag"
}, {
  label: _("table.select"),
  value: "select"
}, {
  label: _("table.dropdown"),
  value: "dropdown"
}, {
  label: _("table.badgeStatus"),
  value: "badgeStatus"
}, {
  label: _("table.button"),
  value: "button"
}, {
  label: _("table.image"),
  value: "image"
}, {
  label: _("table.date"),
  value: "date"
}, {
  label: _("table.dateTime"),
  value: "dateTime"
}, {
  label: "Markdown",
  value: "markdown"
}, {
  label: _("table.boolean"),
  value: "boolean"
}, {
  label: _("table.switch"),
  value: "switch"
}, {
  label: _("table.rating"),
  value: "rating"
}, {
  label: _("table.progress"),
  value: "progress"
}];
var D = {
  avatars: H,
  text: v2,
  number: A,
  button: k,
  badgeStatus: M,
  link: B,
  tag: ou,
  select: L,
  dropdown: G,
  links: O2,
  image: y,
  markdown: f,
  dateTime: F,
  boolean: O,
  switch: I,
  rating: v,
  progress: $,
  date: z
};
var P = X6(D, "text");
var ne = class extends P {
  getView() {
    const o = this.children.comp.getView();
    return {
      view: (t) => o(t),
      value: this.children.comp.getDisplayValue()
    };
  }
  getPropertyView() {
    return N(p1, {
      children: [d(da, {
        showSearch: true,
        value: this.children.compType.getView(),
        options: S,
        label: _("table.columnType"),
        onChange: (o) => {
          let t = "{{currentCell}}";
          this.children.comp.children.hasOwnProperty("text") && (t = this.children.comp.children.text.toJsonValue()), this.dispatchChangeValueAction({
            compType: o,
            comp: {
              text: t
            }
          });
        }
      }), this.children.comp.getPropertyView()]
    });
  }
};

export {
  D,
  ne
};
//# sourceMappingURL=chunk-PJT5DRVG.js.map
