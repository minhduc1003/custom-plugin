import {
  Bj2,
  Fj2,
  T2,
  TQe,
  de,
  et1,
  jj1,
  nc,
  nt1,
  sa,
  tt1,
  zte
} from "./chunk-2ZELARZW.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/975a080d.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
function l(r) {
  const o = r.background && Bj2(r.background), e = r.background && Fj2(r.background);
  return T2`
    &&& {
      border-radius: ${r.radius};
      border-width:${r.borderWidth};
      margin: ${r.margin};
      padding: ${r.padding};
      rotate: ${r.rotation && r.rotation};
      &:not(:disabled) {
        --antd-wave-shadow-color: ${r.border};
        border-color: ${r.border};
        color: ${r.text};
        font-size: ${r.textSize};
        font-weight: ${r.textWeight};
        font-family: ${r.fontFamily};
        font-style: ${r.fontStyle};
        text-transform:${r.textTransform};
        text-decoration:${r.textDecoration};
        background-color: ${r.background};
        border-radius: ${r.radius};
        margin: ${r.margin};
        padding: ${r.padding};

        &:hover,
        &:focus {
          color: ${r.text};
          background-color: ${o};
          border-color: ${r.border === r.background ? o : r.border} !important;
        }
        &:active {
          color: ${r.text};
          background-color: ${e};
          border-color: ${r.border === r.background ? e : r.border} !important;
        }
      }
    }
  `;
}
var u = de(sa)`
  ${(r) => r.$buttonStyle && l(r.$buttonStyle)}
  width: 100%;
  height: auto;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  gap: 6px; 
  span {
    overflow: hidden;
    text-overflow: ellipsis;
  }
  line-height:${(r) => {
  var o;
  return (o = r.$buttonStyle) == null ? void 0 : o.lineHeight;
}}; 
`;
var w = de.div`
  // The button component is disabled but can respond to drag & select events
  ${(r) => r.disabled && `
    cursor: not-allowed;
    button:disabled {
      pointer-events: none;
    }
  `};
`;
function m(r) {
  return r && (r.hasOwnProperty("backgroundColor") || r.hasOwnProperty("borderColor") || r.hasOwnProperty("color")) ? {
    background: r.backgroundColor,
    border: r.borderColor,
    text: r.color
  } : r;
}
var x = nc(jj1, "style");
var C = zte(x, m);
var B = TQe([et1, tt1, nt1]);

export {
  l,
  u,
  w,
  C,
  B
};
//# sourceMappingURL=chunk-QUWBOWXT.js.map
