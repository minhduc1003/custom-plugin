{
  "version": 3,
  "sources": ["../../lowcoder-sdk/dist/a2148958.js"],
  "sourcesContent": ["import { cG as t, i5 as s, J as a, Y as o } from \"./c988e26e.js\";\nimport \"react\";\nimport \"react-dom\";\njest.mock(\"lowcoder-design/src/components/GlobalInstances\", () => ({\n  __esModule: !0,\n  // this property makes it work\n  default: \"mockedDefaultExport\",\n  messageInstance: {\n    error: jest.fn(),\n    success: jest.fn()\n  }\n}));\nconst c = {\n  value: {\n    showSuccess: !0,\n    success: {\n      text: \"success\"\n    },\n    showFail: !0,\n    fail: [{\n      text: \"{{ data + 1 }}\",\n      condition: \"{{ data + 1 === 2 }}\"\n    }, {\n      text: \"{{ data }}\",\n      condition: \"{{ data === 3 }}\"\n    }],\n    duration: \"\"\n  }\n};\nbeforeAll(() => {\n  jest.spyOn(t, \"error\"), jest.spyOn(t, \"success\");\n});\ntest(\"test custom fail\", () => {\n  let e = new s(c);\n  e = a(e), e.getView()(\"\", \"automatic\", {\n    data: 1,\n    success: !1\n  }), expect(t.error).toHaveBeenCalledWith(\"2\", 3);\n});\ntest(\"test system fail\", () => {\n  let e = new s(c);\n  e = a(e), e.getView()(\"\", \"automatic\", {\n    data: 4,\n    success: !1\n  }), expect(t.error).toHaveBeenCalledWith(o(\"query.failMessageWithName\", {\n    name: \"\",\n    result: \"{}\"\n  }), 3);\n});\ntest(\"test custom success\", () => {\n  let e = new s(c);\n  e = a(e), e.getView()(\"\", \"automatic\", {\n    data: 4,\n    success: !0\n  }), expect(t.success).toHaveBeenCalledTimes(0), e.getView()(\"\", \"manual\", {\n    data: 4,\n    success: !1\n  }), expect(t.success).toHaveBeenCalledTimes(0), e.getView()(\"\", \"manual\", {\n    data: 1,\n    success: !0\n  }), expect(t.success).toHaveBeenCalledTimes(0), expect(t.error).toHaveBeenCalled(), e.getView()(\"\", \"manual\", {\n    data: 4,\n    success: !0\n  }), expect(t.success).toHaveBeenCalledWith(\"success\", 3);\n});\ntest(\"test system success\", () => {\n  let e = new s({\n    value: {\n      showSuccess: !0,\n      success: {\n        text: \"\"\n      },\n      showFail: !0,\n      fail: [{\n        text: \"{{ data }}\",\n        condition: \"{{ data === 2 }}\"\n      }, {\n        text: \"{{ data }}\",\n        condition: \"{{ data === 3 }}\"\n      }],\n      duration: \"\"\n    }\n  });\n  e = a(e), e.getView()(\"\", \"manual\", {\n    data: 4,\n    success: !0\n  }), expect(t.success).toHaveBeenCalledWith(o(\"query.successMessageWithName\", {\n    name: \"\"\n  }), 3);\n});\ntest(\"test duration\", () => {\n  let e = new s({\n    value: {\n      ...c.value,\n      duration: \"3s\"\n    }\n  });\n  e = a(e), e.getView()(\"\", \"automatic\", {\n    data: 1,\n    success: !1\n  }), expect(t.error).toHaveBeenNthCalledWith(1, \"2\", 3), e = new s({\n    value: {\n      ...c.value,\n      duration: \"1000ms\"\n    }\n  }), e = a(e), e.getView()(\"\", \"automatic\", {\n    data: 1,\n    success: !1\n  }), expect(t.error).toHaveBeenNthCalledWith(2, \"2\", 1), e = new s({\n    value: {\n      ...c.value,\n      duration: \"{{2*2}}\"\n    }\n  }), e = a(e), e.getView()(\"\", \"automatic\", {\n    data: 1,\n    success: !1\n  }), expect(t.error).toHaveBeenNthCalledWith(3, \"2\", 4);\n});\n"],
  "mappings": "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",
  "names": []
}
