{
  "version": 3,
  "sources": ["../../lowcoder-sdk/dist/22ff0462.js"],
  "sourcesContent": ["import { X as V, Y as t, a4 as E, O as w, w as T, P as F, ej as P, Z as u, c6 as L, c7 as I, ek as B, U as M, F as a, a8 as s, G as y, a9 as r, aa as i, ah as c, ac as A, aB as D, el as $ } from \"./c988e26e.js\";\nimport { useContext as d, useState as j, useEffect as H } from \"react\";\nimport { treeCommonChildren as K, treeDataPropertyView as N, formSection as q, valuePropertyView as z, TreeNameConfigs as O, useTree as R } from \"./58025b46.js\";\nimport { SelectInputValidationSection as U, selectInputValidate as G } from \"./d3b0afba.js\";\nimport \"react-dom\";\nimport \"./85e61f03.js\";\nimport \"./8cb32968.js\";\nconst X = V.div`\n  height: 100%;\n  padding: 4px;\n  background: ${(e) => e.background};\n  border: 1px solid ${(e) => e.border};\n  border-radius: ${(e) => e.radius};\n  .ant-tree-show-line .ant-tree-switcher {\n    background: ${(e) => e.background};\n  }\n  .ant-tree:hover .ant-tree-list-scrollbar-show {\n    display: block !important;\n  }\n  .ant-tree-list-scrollbar {\n    width: 6px !important;\n  }\n  .ant-tree-list-scrollbar-thumb {\n    border-radius: 9999px !important;\n    background: rgba(139, 143, 163, 0.2) !important;\n  }\n  .ant-tree-list-scrollbar-thumb:hover {\n    background: rgba(139, 143, 163, 0.5) !important;\n  }\n`, Y = [{\n  label: t(\"tree.noSelect\"),\n  value: \"none\"\n}, {\n  label: t(\"tree.singleSelect\"),\n  value: \"single\"\n}, {\n  label: t(\"tree.multiSelect\"),\n  value: \"multi\"\n}, {\n  label: t(\"tree.checkbox\"),\n  value: \"check\"\n}], Z = {\n  ...K,\n  selectType: E(Y, \"single\"),\n  checkStrictly: w,\n  autoExpandParent: w,\n  label: T(F, {\n    position: \"column\"\n  }),\n  // TODO: more event\n  onEvent: P,\n  style: u(L, \"style\"),\n  labelStyle: u(I.filter((e) => [\"accent\", \"validate\"].includes(e.name) === !1), \"labelStyle\"),\n  inputFieldStyle: u(B, \"inputFieldStyle\")\n}, J = (e) => {\n  const {\n    treeData: S,\n    selectType: o,\n    value: l,\n    expanded: b,\n    checkStrictly: h,\n    style: f,\n    labelStyle: v\n  } = e, [k, x] = j(), m = o === \"single\" || o === \"multi\", g = o === \"check\";\n  return H(() => {\n    o === \"none\" && l.value.length > 0 ? l.onChange([]) : o === \"single\" && l.value.length > 1 && l.onChange(l.value.slice(0, 1));\n  }, [o]), R(e), e.label({\n    required: e.required,\n    ...G(e),\n    style: f,\n    labelStyle: v,\n    inputFieldStyle: e.inputFieldStyle,\n    children: /* @__PURE__ */ a(D, {\n      onResize: (n, C) => x(C),\n      render: () => /* @__PURE__ */ a(X, {\n        ...e.inputFieldStyle,\n        children: /* @__PURE__ */ a($, {\n          disabled: e.disabled,\n          height: k,\n          rootStyle: {\n            background: \"transparent\",\n            color: e.inputFieldStyle.text\n          },\n          fieldNames: {\n            title: \"label\",\n            key: \"value\"\n          },\n          treeData: S,\n          selectable: m,\n          multiple: o === \"multi\",\n          selectedKeys: m ? l.value : [],\n          checkable: g,\n          checkedKeys: g ? h ? {\n            checked: l.value,\n            halfChecked: []\n          } : l.value : void 0,\n          checkStrictly: h,\n          showLine: e.showLine ? {\n            showLeafIcon: e.showLeafIcon\n          } : !1,\n          expandedKeys: b.value,\n          autoExpandParent: e.autoExpandParent,\n          onSelect: (n) => {\n            l.onChange(n), e.onEvent(\"change\");\n          },\n          onCheck: (n) => {\n            l.onChange(Array.isArray(n) ? n : n.checked), e.onEvent(\"change\");\n          },\n          onExpand: (n) => {\n            b.onChange(n);\n          },\n          onFocus: () => e.onEvent(\"focus\"),\n          onBlur: () => e.onEvent(\"blur\")\n        }, o)\n      })\n    })\n  });\n};\nlet p = function() {\n  return new M(Z, (e) => /* @__PURE__ */ a(J, {\n    ...e\n  })).setPropertyViewFn((e) => /* @__PURE__ */ s(y, {\n    children: [/* @__PURE__ */ a(r, {\n      name: i.basic,\n      children: N(e)\n    }), [\"logic\", \"both\"].includes(d(c).editorModeStatus) && /* @__PURE__ */ s(y, {\n      children: [/* @__PURE__ */ a(U, {\n        ...e\n      }), q(e), /* @__PURE__ */ s(r, {\n        name: i.interaction,\n        children: [e.onEvent.getPropertyView(), e.hidden.propertyView({\n          label: t(\"prop.hide\")\n        }), e.disabled.propertyView({\n          label: t(\"prop.disabled\")\n        }), e.selectType.propertyView({\n          label: t(\"tree.selectType\")\n        }), e.selectType.getView() !== \"none\" && z(e), e.selectType.getView() === \"check\" && e.checkStrictly.propertyView({\n          label: t(\"tree.checkStrictly\"),\n          tooltip: t(\"tree.checkStrictlyTooltip\")\n        })]\n      })]\n    }), [\"layout\", \"both\"].includes(d(c).editorModeStatus) && /* @__PURE__ */ s(r, {\n      name: i.layout,\n      children: [e.expanded.propertyView({\n        label: t(\"tree.expanded\")\n      }), e.defaultExpandAll.propertyView({\n        label: t(\"tree.defaultExpandAll\")\n      }), e.showLine.propertyView({\n        label: t(\"tree.showLine\")\n      }), e.showLine.getView() && e.showLeafIcon.propertyView({\n        label: t(\"tree.showLeafIcon\")\n      })]\n    }), [\"layout\", \"both\"].includes(d(c).editorModeStatus) && e.label.getPropertyView(), [\"layout\", \"both\"].includes(d(c).editorModeStatus) && /* @__PURE__ */ s(y, {\n      children: [/* @__PURE__ */ a(r, {\n        name: i.style,\n        children: e.style.getPropertyView()\n      }), /* @__PURE__ */ a(r, {\n        name: i.labelStyle,\n        children: e.labelStyle.getPropertyView()\n      }), /* @__PURE__ */ a(r, {\n        name: i.inputFieldStyle,\n        children: e.inputFieldStyle.getPropertyView()\n      })]\n    })]\n  })).build();\n}();\np = class extends p {\n  autoHeight() {\n    return !1;\n  }\n};\nconst oe = A(p, O);\nexport {\n  oe as TreeComp\n};\n"],
  "mappings": "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",
  "names": ["Y", "h", "k", "j", "H", "d"]
}
