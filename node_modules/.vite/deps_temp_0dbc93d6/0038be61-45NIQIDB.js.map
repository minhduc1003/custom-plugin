{
  "version": 3,
  "sources": ["../../lowcoder-sdk/dist/0038be61.js"],
  "sourcesContent": ["import { v as i, O as d, S as m, cM as v, M as x, F as g, G as h, ac as c, ae as n, J as t, e0 as w, hb as C, cf as f } from \"./c988e26e.js\";\nimport \"react\";\nimport \"react-dom\";\nconst l = function() {\n  const e = {\n    v1: i(\"abc\"),\n    v2: i(\"v2\"),\n    visible: d,\n    value: m,\n    num: v(\"num\")\n  };\n  return new x(e, (o) => o).setPropertyViewFn(() => /* @__PURE__ */ g(h, {})).build();\n}(), r = c(l, [new n(\"v1\"), new n(\"visible\"), new n(\"value\"), new n(\"num\")]);\ntest(\"exposing data and methods\", () => {\n  let e = new r({});\n  e = t(e);\n  const o = e.extraNode().node;\n  e = t(e.reduce(e.changeChildAction(\"v2\", \"ppp\"))), expect(e.children.v2.getView()).toBe(\"ppp\");\n  const p = e.extraNode().node;\n  expect(w(o, p)).toBe(!0), e = t(e.reduce(e.changeChildAction(\"v1\", \"v1_value\"))), expect(t(e)).toBe(e), expect(e.exposingValues.v1).toBe(\"v1_value\"), expect(e.exposingValues.visible).toBe(!1), expect(Object.keys(e.exposingInfo().methods)).toContain(\"setNum\");\n});\ntest(\"run exposing method\", () => {\n  let e = new r({\n    dispatch: (o) => {\n      e = t(e.reduce(o));\n    }\n  });\n  e = t(e), e.reduce(C({\n    type: \"execute\",\n    methodName: \"setNum\",\n    params: [100]\n  }, !1)), expect(e.getView().num.value).toEqual(100);\n});\ntest(\"exposing deps\", () => {\n  const e = c(l, [new n(\"v1\"), f({\n    name: \"X\",\n    desc: \"\",\n    depKeys: [\"v1\", \"visible\"],\n    func: (s) => s.v1 + \" \" + s.visible\n  })]);\n  let o = new e({});\n  o = t(o);\n  const p = o.exposingInfo().property;\n  expect(o.exposingValues.X).toBe(\"abc false\"), o = t(o.reduce(o.changeChildAction(\"v2\", \"ppp\")));\n  const u = o.exposingInfo().property;\n  function a(s) {\n    return s.children.X;\n  }\n  expect(a(p)).toBe(a(u));\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,mBAAO;AACP,uBAAO;AACP,IAAM,IAAI,WAAW;AACnB,QAAM,IAAI;AAAA,IACR,IAAI,GAAE,KAAK;AAAA,IACX,IAAI,GAAE,IAAI;AAAA,IACV,SAAS;AAAA,IACT,OAAO;AAAA,IACP,KAAK,IAAE,KAAK;AAAA,EACd;AACA,SAAO,IAAI,GAAE,GAAG,CAAC,MAAM,CAAC,EAAE,kBAAkB,MAAsB,EAAE,IAAG,CAAC,CAAC,CAAC,EAAE,MAAM;AACpF,EAAE;AATF,IASK,IAAI,GAAE,GAAG,CAAC,IAAI,GAAE,IAAI,GAAG,IAAI,GAAE,SAAS,GAAG,IAAI,GAAE,OAAO,GAAG,IAAI,GAAE,KAAK,CAAC,CAAC;AAC3E,KAAK,6BAA6B,MAAM;AACtC,MAAI,IAAI,IAAI,EAAE,CAAC,CAAC;AAChB,MAAI,GAAE,CAAC;AACP,QAAM,IAAI,EAAE,UAAU,EAAE;AACxB,MAAI,GAAE,EAAE,OAAO,EAAE,kBAAkB,MAAM,KAAK,CAAC,CAAC,GAAG,OAAO,EAAE,SAAS,GAAG,QAAQ,CAAC,EAAE,KAAK,KAAK;AAC7F,QAAM,IAAI,EAAE,UAAU,EAAE;AACxB,SAAO,GAAE,GAAG,CAAC,CAAC,EAAE,KAAK,IAAE,GAAG,IAAI,GAAE,EAAE,OAAO,EAAE,kBAAkB,MAAM,UAAU,CAAC,CAAC,GAAG,OAAO,GAAE,CAAC,CAAC,EAAE,KAAK,CAAC,GAAG,OAAO,EAAE,eAAe,EAAE,EAAE,KAAK,UAAU,GAAG,OAAO,EAAE,eAAe,OAAO,EAAE,KAAK,KAAE,GAAG,OAAO,OAAO,KAAK,EAAE,aAAa,EAAE,OAAO,CAAC,EAAE,UAAU,QAAQ;AACnQ,CAAC;AACD,KAAK,uBAAuB,MAAM;AAChC,MAAI,IAAI,IAAI,EAAE;AAAA,IACZ,UAAU,CAAC,MAAM;AACf,UAAI,GAAE,EAAE,OAAO,CAAC,CAAC;AAAA,IACnB;AAAA,EACF,CAAC;AACD,MAAI,GAAE,CAAC,GAAG,EAAE,OAAO,GAAE;AAAA,IACnB,MAAM;AAAA,IACN,YAAY;AAAA,IACZ,QAAQ,CAAC,GAAG;AAAA,EACd,GAAG,KAAE,CAAC,GAAG,OAAO,EAAE,QAAQ,EAAE,IAAI,KAAK,EAAE,QAAQ,GAAG;AACpD,CAAC;AACD,KAAK,iBAAiB,MAAM;AAC1B,QAAM,IAAI,GAAE,GAAG,CAAC,IAAI,GAAE,IAAI,GAAG,IAAE;AAAA,IAC7B,MAAM;AAAA,IACN,MAAM;AAAA,IACN,SAAS,CAAC,MAAM,SAAS;AAAA,IACzB,MAAM,CAAC,MAAM,EAAE,KAAK,MAAM,EAAE;AAAA,EAC9B,CAAC,CAAC,CAAC;AACH,MAAI,IAAI,IAAI,EAAE,CAAC,CAAC;AAChB,MAAI,GAAE,CAAC;AACP,QAAM,IAAI,EAAE,aAAa,EAAE;AAC3B,SAAO,EAAE,eAAe,CAAC,EAAE,KAAK,WAAW,GAAG,IAAI,GAAE,EAAE,OAAO,EAAE,kBAAkB,MAAM,KAAK,CAAC,CAAC;AAC9F,QAAM,IAAI,EAAE,aAAa,EAAE;AAC3B,WAAS,EAAE,GAAG;AACZ,WAAO,EAAE,SAAS;AAAA,EACpB;AACA,SAAO,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;AACxB,CAAC;",
  "names": []
}
