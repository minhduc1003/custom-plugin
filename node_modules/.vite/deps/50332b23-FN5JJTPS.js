import {
  Bn,
  St,
  Vte,
  dee,
  g2,
  h1,
  oe1,
  ug
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/50332b23.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var p = Object.defineProperty;
var c = (i, t, e) => t in i ? p(i, t, { enumerable: true, configurable: true, writable: true, value: e }) : i[t] = e;
var l = (i, t, e) => (c(i, typeof t != "symbol" ? t + "" : t, e), e);
var g = {
  layout: Bn([]),
  items: dee(oe1)
};
var M = new g2(g, (i, t) => ({
  ...i,
  dispatch: t
})).build();
var T = class extends M {
  constructor() {
    super(...arguments);
    l(this, "IsSimpleFlowContainer", true);
  }
  getLayoutMap() {
    const e = this.children.layout.getView();
    return h1.keyBy(e, "i");
  }
  getCompTree() {
    const e = this.children.items.children, r = this.children.layout.getView();
    return {
      ...Vte(e),
      itemOrder: r.map((n) => n.i)
    };
  }
  findContainer(e) {
    var n, o;
    const r = this.children.items.children;
    if (r.hasOwnProperty(e))
      return this;
    for (const s of Object.values(r))
      if (ug(s.children.comp)) {
        const a = (o = (n = s.children.comp) == null ? void 0 : n.findContainer) == null ? void 0 : o.call(n, e);
        if (a)
          return a;
      }
  }
  realSimpleContainer(e) {
    const r = this.children.items.children;
    if (h1.isNil(e) || r.hasOwnProperty(e))
      return this;
  }
  getPasteValue() {
    return St.warn("paste method not implemented."), {};
  }
};
export {
  T as SimpleFlowContainerComp
};
//# sourceMappingURL=50332b23-FN5JJTPS.js.map
