import {
  H0,
  PL,
  YU1,
  d,
  d6e,
  g2,
  mC,
  p1,
  vo
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/14bbe2c3.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
test("test string state control", () => {
  const s = {
    s1: mC("s1Value")
  }, t = {
    ...s,
    s2: mC("s2Value")
  }, a = {
    s1: mC("s1Value")
  };
  let e = new YU1({
    value: "3{{s1}}"
  });
  e = PL(e, s), expect(e.getView().value).toBe("3s1Value"), e = PL(e.reduce(e.changeChildAction("value", "newx")), s), expect(e.getView().value).toBe("newx"), e = PL(e, t), expect(e.getView().value).toBe("newx"), e = PL(e, a), expect(e.getView().value).toBe("3s1Value");
});
test("test comp", () => {
  let s = function() {
    const e = {
      v1: d6e(["a"])
    };
    return new g2(e, (d2) => "a").setPropertyViewFn(() => d(p1, {})).build();
  }();
  s = H0(s, [new vo("v1")]);
  let t = new s({});
  t = PL(t), t = PL(t);
  let a = PL(t);
  expect(t === a).toBeTruthy();
});
//# sourceMappingURL=14bbe2c3-B6QFGJCV.js.map
