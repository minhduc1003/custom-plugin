import {
  x
} from "./chunk-Z2KNLIQY.js";
import {
  ne
} from "./chunk-N55PIOUB.js";
import {
  I
} from "./chunk-5HTQQ5EI.js";
import {
  G$,
  Jp2,
  N,
  Wse,
  Xp2,
  _,
  ao,
  d,
  de,
  p1,
  pU1,
  vc
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/b25be8d9.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var y = de(I)`
  display: flex;
  align-items: center;
  .ant-progress-outer {
    height: 22px;
    display: flex;
    align-items: center;
  }
  .ant-progress-text {
    margin-left: 6px;
  }
`;
var V = de(G$)`
  background: transparent !important;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  .ant-input-number-input-wrap {
    height: 100%;
    display: flex;
    align-items: center;
  }
  .ant-input-number-handler-wrap {
    top: 1.5px;
    right: 1.5px;
    height: calc(100% - 3px);
    border-radius: 0;
  }
  .ant-input-number-handler-up {
    border-bottom: 1px solid #d7d9e0;
  }
  .ant-input-number-handler-up,
  .ant-input-number-handler-down {
    display: flex;
    align-items: center;
    justify-content: center;
    > span {
      width: 16px;
      height: 16px;
      margin-top: 0;
      position: unset;
      transform: none;
    }
    &:hover {
      &:not(.ant-input-number-handler-up-disabled):not(.ant-input-number-handler-down-disabled)
        path {
        fill: #315efb;
      }
    }
  }
`;
var C = {
  text: vc,
  showValue: ao
};
var o = (e) => e.text;
var $ = function() {
  return new ne(C, (e, n) => {
    const s = e.changeValue ?? o(e);
    return d(() => {
      const l = pU1(Wse);
      return d(y, {
        percent: Math.round(s),
        showInfo: e.showValue,
        $style: l
      });
    }, {});
  }, (e) => e.text.value, o).setEditViewFn((e) => d(V, {
    min: 0,
    max: 100,
    defaultValue: e.value,
    autoFocus: true,
    variant: "borderless",
    controls: {
      upIcon: d(Jp2, {}),
      downIcon: d(Xp2, {})
    },
    onChange: (n) => {
      e.onChange(Number(n));
    },
    onBlur: e.onChangeEnd,
    onPressEnter: e.onChangeEnd
  })).setPropertyViewFn((e) => N(p1, {
    children: [e.text.propertyView({
      label: _("table.columnValue"),
      tooltip: x
    }), e.showValue.propertyView({
      label: _("table.showValue")
    })]
  })).build();
}();

export {
  $
};
//# sourceMappingURL=chunk-IMATYS3Y.js.map
