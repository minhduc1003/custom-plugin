import {
  x
} from "./chunk-Z2KNLIQY.js";
import {
  ne
} from "./chunk-N55PIOUB.js";
import {
  N
} from "./chunk-P5ARDIOU.js";
import {
  BXe,
  C5,
  H3,
  N as N2,
  SW1,
  _,
  ca,
  d,
  de,
  dv2,
  fv2,
  l9,
  p1,
  pU1
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/71bdd49a.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var k = de(l9)`
  ${(e) => e.$style && N(e.$style)}
`;
var w = de.div`
  background: transparent !important;
  padding: 0 8px;
`;
var F = de.span`
  // pointer-events: none;
  height: 22px;
  display: inline-block;
  svg {
    width: 14px;
    height: 22px;
    g {
      stroke: ${(e) => e.$ifChecked && e.$style.checkedBackground} !important;
    }
  }
`;
var v = [{
  label: _("table.empty"),
  value: ""
}, {
  label: "-",
  value: "-"
}, {
  label: d(fv2, {
    width: 10,
    height: 10
  }),
  value: "x"
}];
var $ = {
  text: H3,
  falseValues: ca(v, ""),
  iconTrue: C5,
  iconFalse: C5,
  iconNull: C5
};
var s = (e) => e.text;
var B = (e) => {
  const i = pU1(SW1);
  return d(w, {
    onBlur: () => e.onChangeEnd(),
    onKeyDown: (a) => {
      a.key === "Enter" && e.onChangeEnd();
    },
    children: d(k, {
      autoFocus: true,
      $style: i,
      defaultChecked: e.value,
      onChange: (a) => e.onChange(a.target.checked)
    })
  });
};
var O = function() {
  return new ne($, (e, i) => {
    const a = e.changeValue ?? s(e);
    return d(() => {
      const h = pU1(SW1);
      return d(F, {
        $style: h,
        $ifChecked: a,
        children: a === true ? BXe(e.iconTrue) ? e.iconTrue : d(dv2, {}) : a === false ? BXe(e.iconFalse) ? e.iconFalse : e.falseValues === "x" ? d(fv2, {}) : e.falseValues : BXe(e.iconNull) ? e.iconNull : "No Value"
      });
    }, {});
  }, (e) => e.text.value, s).setEditViewFn((e) => d(B, {
    value: e.value,
    onChange: e.onChange,
    onChangeEnd: e.onChangeEnd
  })).setPropertyViewFn((e) => N2(p1, {
    children: [e.text.propertyView({
      label: _("table.columnValue"),
      tooltip: x
    }), e.falseValues.propertyView({
      label: _("table.falseValues"),
      radioButton: true
    }), e.iconTrue.propertyView({
      label: _("table.iconTrue")
    }), e.iconFalse.propertyView({
      label: _("table.iconFalse")
    }), e.iconNull.propertyView({
      label: _("table.iconNull")
    })]
  })).build();
}();

export {
  O
};
//# sourceMappingURL=chunk-RKGH4KYG.js.map
