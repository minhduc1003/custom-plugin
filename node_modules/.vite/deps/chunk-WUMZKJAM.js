import {
  L
} from "./chunk-3XMPZJC6.js";
import {
  VS
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/3d641873.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var h = Object.defineProperty;
var p = (n, e, r) => e in n ? h(n, e, { enumerable: true, configurable: true, writable: true, value: r }) : n[e] = r;
var o = (n, e, r) => (p(n, typeof e != "symbol" ? e + "" : e, r), r);
function d(n) {
  return {
    ...n,
    container: L
  };
}
var F = class {
  /**
   * If viewFn is not placed in the constructor, the type of ViewReturn cannot be inferred
   */
  constructor(e, r) {
    o(this, "childrenMap");
    o(this, "viewFn");
    o(this, "propertyViewFn");
    this.childrenMap = e, this.viewFn = r;
  }
  setPropertyViewFn(e) {
    return this.propertyViewFn = e, this;
  }
  build() {
    if (!this.propertyViewFn)
      throw new Error("no propertyViewFn provided");
    if (this.childrenMap.hasOwnProperty("container"))
      throw new Error("already has container");
    const e = d(this.childrenMap), r = new VS(e, (a, t) => this.viewFn(a, t)).setPropertyViewFn(this.propertyViewFn).build();
    class s extends r {
      realSimpleContainer(t) {
        return this.children.container.realSimpleContainer(t);
      }
      getCompTree() {
        return this.children.container.getCompTree();
      }
      findContainer(t) {
        const i = this.children.container.findContainer(t);
        if (i)
          return i === this.children.container ? this : i;
      }
      getPasteValue(t) {
        return {
          container: this.children.container.getPasteValue(t)
        };
      }
      autoHeight() {
        return this.children.container.autoHeight();
      }
    }
    return s;
  }
};

export {
  d,
  F
};
//# sourceMappingURL=chunk-WUMZKJAM.js.map
