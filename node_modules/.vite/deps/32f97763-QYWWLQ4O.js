import {
  We,
  Ye,
  Ze
} from "./chunk-P6CZTECO.js";
import {
  A5n,
  Dee,
  Eke,
  Gsn,
  HC,
  HI,
  HN2,
  Klr,
  Lg2,
  N,
  QN,
  Vp2,
  Vr,
  _,
  d,
  de,
  h1,
  h1e,
  iS,
  p1,
  qe1,
  qlr,
  qsn,
  uee,
  xPe,
  y92,
  yar,
  zH,
  zc
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/32f97763.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var we = de.div`
  display: flex;
  width: fit-content;
  max-width: calc(100% - 8px);
`;
var be = de.div`
  padding: 8px;
  display: flex;
  justify-content: space-between;
  align-items: center;

  &:hover .copy-icon {
    visibility: visible;
  }
`;
de(h1e)`
  visibility: hidden;
  margin-left: 8px;
  color: #1890ff;
  cursor: pointer;
`;
function N2(e) {
  return typeof e == "number" ? (e + "").toString().length : typeof e == "string" || typeof e == "boolean" ? e.toString().length : 0;
}
function q(e, o = 2) {
  const a = /* @__PURE__ */ new Set();
  return JSON.stringify(e, (s, l) => {
    if (typeof l == "object" && l !== null) {
      if (a.has(l))
        return "[Circular]";
      a.add(l);
    }
    return l;
  }, o);
}
function j(e, o, a, s) {
  const l = typeof e == "function" ? "Function" : q(e), f = {}, C = s === true ? N2(l) > 42 ? l.slice(0, 42) + "..." : l : N2(l) > 20 ? l.slice(0, 20) + "..." : l;
  if (f[o] = a, Array.isArray(e)) {
    const b = {};
    return e.forEach((D, x) => {
      b[x] = D;
    }), d(O, {
      name: o,
      desc: f,
      data: b,
      isArray: true,
      modal: s
    }, o);
  } else
    return h1.isPlainObject(e) ? d(O, {
      name: o,
      desc: f,
      data: e,
      modal: s
    }, o) : N(be, {
      style: {
        marginLeft: "20px",
        borderBottom: "1px solid #f0f0f0",
        height: "32px",
        display: "flex",
        justifyContent: "space-between",
        alignItems: "center"
      },
      children: [N(iS, {
        title: a,
        placement: "right",
        children: [d(HN2, {
          label: o
        }), " â€‹"]
      }), N("div", {
        style: {
          display: "flex",
          wordBreak: "break-all",
          textAlign: "right"
        },
        children: [d("span", {
          style: {
            marginRight: "10px"
          },
          children: C
        }), N2(l) > 0 && d(h1e, {
          text: e,
          style: {
            color: "#ccc",
            marginRight: "0px",
            marginTop: "4px"
          }
        })]
      })]
    }, o);
}
function xe(e) {
  let o = [], a = [];
  return e.forEach((s, l) => {
    l < 15 && o.push(s), l >= e.length - 5 && l < e.length && a.push(s);
  }), {
    preArr: o,
    afterArr: a
  };
}
function Te(e) {
  const o = Object.keys(e.data), a = xe;
  return d("div", {
    children: o.length < 30 ? o.map((s) => {
      var l;
      return j(e.data[s], s, (l = e.desc) == null ? void 0 : l[s], e.modal);
    }) : N(p1, {
      children: [a(o).preArr.map((s) => {
        var l;
        return j(e.data[s], s, (l = e.desc) == null ? void 0 : l[s], e.modal);
      }), d(y92, {
        num: o.length - 6
      }), a(o).afterArr.map((s) => {
        var l;
        return j(e.data[s], s, (l = e.desc) == null ? void 0 : l[s], e.modal);
      })]
    })
  });
}
var O = import_react.default.memo((e) => {
  var s;
  const {
    data: o = {}
  } = e, a = Object.keys(o).length === 1;
  return d(xPe, {
    isSelected: e.isSelected,
    isOpen: e.isOpen,
    config: [{
      key: e.name,
      title: N("div", {
        style: {
          display: "flex",
          justifyContent: "space-between",
          alignItems: "center"
        },
        children: [d(iS, {
          title: (s = e.desc) == null ? void 0 : s[e.name],
          placement: "right",
          children: N(we, {
            onClick: () => e.onClick && e.onClick(e.name),
            children: [d(Dee, {
              style: {
                whiteSpace: "nowrap",
                textOverflow: "ellipsis",
                overflow: "hidden"
              },
              label: e.name,
              hasChild: Object.keys(o).length > 0
            }), d(Dee, {
              style: {
                flexShrink: 0
              },
              color: "#8B8FA3",
              label: `${e.isArray ? "[]" : "{}"} ${_(e.isArray ? a ? "leftPanel.propTipArr" : "leftPanel.propTipsArr" : a ? "leftPanel.propTip" : "leftPanel.propTips", {
                num: Object.keys(o).length
              })}`
            })]
          })
        }), Object.keys(o).length > 0 && d(h1e, {
          text: q(o),
          style: {
            color: "#aaa",
            marginRight: "8px"
          }
        })]
      }),
      data: Te({
        data: o,
        desc: e.desc,
        modal: e.modal
      })
    }]
  });
});
var Se = de(yar)`
  .ant-tabs-nav {
    background-color: ${A5n};
    height: 40px;
    padding: 0 16px;
    margin: 0;

    .ant-tabs-tab {
      padding: 0;
      font-weight: 500;
    }
  }

  .ant-tabs-tabpane {
    height: calc(100vh - ${HC} - 40px);
  }
`;
var X = de.div`
  height: calc(100vh - ${HC});
`;
var ve = (e) => {
  const {
    uiComp: o
  } = e, a = (0, import_react.useContext)(Vr), [s, l] = (0, import_react.useState)([]), [f, C] = (0, import_react.useState)([]), b = (n, c, y) => {
    const {
      items: h,
      children: g
    } = n;
    if (Object.keys(h).length) {
      for (const i in h) {
        const r = {
          title: h[i].children.name.getView(),
          type: h[i].children.compType.getView(),
          key: i,
          children: []
        };
        if (y) {
          const d2 = qsn(c, y);
          d2 == null || d2.children.push(r);
        } else
          c.push(r);
      }
      c = h1.sortBy(c, [(i) => i.title]);
    }
    if (Object.keys(g).length)
      for (const i in g)
        b(g[i], c, i);
    return c;
  }, D = (n, c, y) => {
    var g, i, r;
    x(c.title + "");
    const h = y.find((d2) => d2.name === c.title);
    if (!((g = c.children) != null && g.length) && h && ((i = Object.keys(h.data)) != null && i.length) && c.selected) {
      const d2 = f.findIndex((u) => u.key === c.key);
      let p = [], T = ((r = n.currentTarget) == null ? void 0 : r.offsetLeft) + 20;
      d2 > -1 ? p = f.map((u) => u.key === c.key ? {
        key: u.key,
        show: !u.show,
        clientX: T
      } : u) : p = [...f, {
        key: c.key + "",
        show: true,
        clientX: T
      }], C(p);
    }
  }, x = (0, import_react.useCallback)((n) => {
    a.setSelectedCompNames(/* @__PURE__ */ new Set([n]), "leftPanel");
  }, [a]), R = (0, import_react.useCallback)((n, c) => {
    a.setSelectedBottomRes(c, n);
  }, [a]), z = (n, c) => {
    var i;
    const y = f.find((r) => r.key === n.key), h = c.find((r) => r.name === n.title), g = (r, d2) => d("div", {
      children: Object.keys(r).map((p) => j(r[p], p, d2 == null ? void 0 : d2[p], true))
    });
    return N(Ze, {
      children: [N("span", {
        children: [N("span", {
          children: [n.title, " "]
        }), h && !!((i = Object.keys(h.data)) != null && i.length) && (y != null && y.show ? d(iS, {
          placement: "right",
          title: _("leftPanel.collapseTip", {
            component: n.title
          }),
          children: d("div", {
            title: "",
            className: "show-data",
            onClick: (r) => {
              r.stopPropagation();
              const d2 = f.map((p) => p.key === n.key ? {
                key: p.key,
                show: false,
                clientX: void 0
              } : p);
              C(d2);
            }
          })
        }) : d(iS, {
          placement: "right",
          title: _("leftPanel.expandTip", {
            component: n.title
          }),
          children: d("div", {
            title: "",
            className: "no-data",
            onClick: (r) => {
              var u;
              r.stopPropagation();
              const d2 = f.findIndex((P) => P.key === n.key);
              let p = [];
              const T = {
                key: n.key,
                show: true,
                clientX: (u = r.currentTarget.parentElement) == null ? void 0 : u.offsetLeft
              };
              d2 > -1 ? p = f.map((P) => P.key === n.key ? T : P) : p = [...f, T], C(p);
            },
            children: d(Vp2, {})
          })
        }))]
      }), (y == null ? void 0 : y.show) && h && d(Eke, {
        title: h.name,
        open: y.show,
        onOk: () => C([]),
        cancelButtonProps: {
          style: {
            display: "none"
          }
        },
        maskClosable: true,
        children: d("div", {
          style: {
            whiteSpace: "nowrap",
            wordWrap: "normal",
            maxHeight: "calc(100vh - 400px)",
            overflow: "scroll"
          },
          onClick: (r) => r.stopPropagation(),
          children: g(h.data, h.dataDesc)
        })
      })]
    }, n.key);
  }, L = (n) => {
    const c = h1.sortBy(a.uiCompInfoList(), [(i) => i.name]), y = n === "components" ? a.getUIComp().getTree() : a.getHooksComp().getUITree(), h = b(y, []);
    let g = [];
    if (a.selectedCompNames.size === 1) {
      const i = Object.keys(a.selectedComps())[0], r = Gsn(h, i);
      if (r && r.length) {
        let d2 = false;
        r.forEach((p) => {
          s.includes(p) || (d2 = true);
        }), d2 && l(h1.union(s, r));
      }
      g.push(i);
    }
    return d(Ye, {
      treeData: h,
      icon: (i) => i.type && d("div", {
        style: {
          margin: "16px 4px 0 -4px"
        },
        children: We[i.type] || d(Lg2, {})
      }),
      switcherIcon: (i) => i.expanded ? d(QN, {}) : d(uee, {}),
      expandedKeys: s,
      onExpand: (i) => l(i),
      onClick: (i, r) => D(i, r, c),
      selectedKeys: g,
      titleRender: (i) => z(i, c)
    });
  }, G = (0, import_react.useMemo)(() => {
    if (!qe1(a.getAppType()))
      return L(
        "components"
        /* Components */
      );
  }, [a, x, s, f]), J = (0, import_react.useMemo)(() => {
    if (!qe1(a.getAppType()))
      return L(
        "modals"
        /* Modals */
      );
  }, [a, x, s, f]), Y = (0, import_react.useMemo)(() => a.bottomResComInfoList().map((n) => d(O, {
    name: n.name,
    desc: n.dataDesc,
    data: n.data,
    isSelected: a.selectedBottomResName === n.name,
    onClick: () => R(n.type, n.name)
  }, n.name)), [a, R]), Q = (0, import_react.useMemo)(() => h1.sortBy(a.hooksCompInfoList().filter((n) => HI(n.type) === "hook"), [(n) => n.name]).map((n) => d(O, {
    name: n.name,
    desc: n.dataDesc,
    data: n.data,
    isSelected: false,
    onClick: h1.noop
  }, n.name)), [a]), F = o.getModuleLayoutComp(), E = d(zc, {
    children: N("div", {
      style: {
        paddingBottom: 80
      },
      children: [d(zH, {
        name: _("leftPanel.components"),
        width: 288,
        noMargin: true,
        children: d("span", {
          className: Klr,
          children: G
        })
      }), d(zH, {
        name: _("leftPanel.modals"),
        width: 288,
        noMargin: true,
        children: d("span", {
          children: J
        })
      }), d(zH, {
        name: _("leftPanel.queries"),
        width: 288,
        noMargin: true,
        children: d("span", {
          children: Y
        })
      }), d(zH, {
        name: _("leftPanel.globals"),
        width: 288,
        noMargin: true,
        children: d("span", {
          children: Q
        })
      })]
    })
  });
  if (!F)
    return d(X, {
      className: "cypress-left-content",
      children: E
    });
  const Z = [{
    key: "state",
    label: d(qlr, {
      text: _("leftPanel.stateTab")
    }),
    children: d(p1, {
      children: E
    })
  }, {
    key: "module-setting",
    label: d(qlr, {
      text: _("leftPanel.settingsTab")
    }),
    children: d(zc, {
      children: d("div", {
        style: {
          paddingBottom: 80,
          paddingTop: 16
        },
        children: d(zH, {
          width: 288,
          noMargin: true,
          children: d("span", {
            children: F.getConfigView()
          })
        })
      })
    })
  }];
  return d(X, {
    className: "cypress-left-content",
    children: d(Se, {
      defaultActiveKey: "module-setting",
      items: Z
    })
  });
};
export {
  ve as LeftContent,
  j as default
};
//# sourceMappingURL=32f97763-QYWWLQ4O.js.map
