import {
  L,
  wt
} from "./chunk-WBVHF7PY.js";
import "./chunk-LCCS23J3.js";
import "./chunk-6DTACY26.js";
import {
  sn
} from "./chunk-C4ZQG65I.js";
import "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/292815c2.js
var import_react = __toESM(require_react(), 1);
function P(t, e) {
  for (var r = 0; r < e.length; r++) {
    const a = e[r];
    if (typeof a != "string" && !Array.isArray(a)) {
      for (const s in a)
        if (s !== "default" && !(s in t)) {
          const o = Object.getOwnPropertyDescriptor(a, s);
          o && Object.defineProperty(t, s, o.get ? o : {
            enumerable: true,
            get: () => a[s]
          });
        }
    }
  }
  return Object.freeze(Object.defineProperty(t, Symbol.toStringTag, { value: "Module" }));
}
var g = Object.create;
var n = Object.defineProperty;
var b = Object.getOwnPropertyDescriptor;
var v = Object.getOwnPropertyNames;
var O = Object.getPrototypeOf;
var D = Object.prototype.hasOwnProperty;
var w = (t, e, r) => e in t ? n(t, e, { enumerable: true, configurable: true, writable: true, value: r }) : t[e] = r;
var j = (t, e) => {
  for (var r in e)
    n(t, r, { get: e[r], enumerable: true });
};
var h = (t, e, r, a) => {
  if (e && typeof e == "object" || typeof e == "function")
    for (let s of v(e))
      !D.call(t, s) && s !== r && n(t, s, { get: () => e[s], enumerable: !(a = b(e, s)) || a.enumerable });
  return t;
};
var M = (t, e, r) => (r = t != null ? g(O(t)) : {}, h(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  e || !t || !t.__esModule ? n(r, "default", { value: t, enumerable: true }) : r,
  t
));
var L2 = (t) => h(n({}, "__esModule", { value: true }), t);
var i = (t, e, r) => (w(t, typeof e != "symbol" ? e + "" : e, r), r);
var c = {};
j(c, {
  default: () => l
});
var y = L2(c);
var p = M(import_react.default);
var u = L;
var S = wt;
var V = "https://player.vimeo.com/api/player.js";
var E = "Vimeo";
var k = (t) => t.replace("/manage/videos", "");
var l = class extends p.Component {
  constructor() {
    super(...arguments), i(this, "callPlayer", u.callPlayer), i(this, "duration", null), i(this, "currentTime", null), i(this, "secondsLoaded", null), i(this, "mute", () => {
      this.setMuted(true);
    }), i(this, "unmute", () => {
      this.setMuted(false);
    }), i(this, "ref", (e) => {
      this.container = e;
    });
  }
  componentDidMount() {
    this.props.onMount && this.props.onMount(this);
  }
  load(e) {
    this.duration = null, (0, u.getSDK)(V, E).then((r) => {
      if (!this.container)
        return;
      const { playerOptions: a, title: s } = this.props.config;
      this.player = new r.Player(this.container, {
        url: k(e),
        autoplay: this.props.playing,
        muted: this.props.muted,
        loop: this.props.loop,
        playsinline: this.props.playsinline,
        controls: this.props.controls,
        ...a
      }), this.player.ready().then(() => {
        const o = this.container.querySelector("iframe");
        o.style.width = "100%", o.style.height = "100%", s && (o.title = s);
      }).catch(this.props.onError), this.player.on("loaded", () => {
        this.props.onReady(), this.refreshDuration();
      }), this.player.on("play", () => {
        this.props.onPlay(), this.refreshDuration();
      }), this.player.on("pause", this.props.onPause), this.player.on("seeked", (o) => this.props.onSeek(o.seconds)), this.player.on("ended", this.props.onEnded), this.player.on("error", this.props.onError), this.player.on("timeupdate", ({ seconds: o }) => {
        this.currentTime = o;
      }), this.player.on("progress", ({ seconds: o }) => {
        this.secondsLoaded = o;
      }), this.player.on("bufferstart", this.props.onBuffer), this.player.on("bufferend", this.props.onBufferEnd), this.player.on("playbackratechange", (o) => this.props.onPlaybackRateChange(o.playbackRate));
    }, this.props.onError);
  }
  refreshDuration() {
    this.player.getDuration().then((e) => {
      this.duration = e;
    });
  }
  play() {
    const e = this.callPlayer("play");
    e && e.catch(this.props.onError);
  }
  pause() {
    this.callPlayer("pause");
  }
  stop() {
    this.callPlayer("unload");
  }
  seekTo(e, r = true) {
    this.callPlayer("setCurrentTime", e), r || this.pause();
  }
  setVolume(e) {
    this.callPlayer("setVolume", e);
  }
  setMuted(e) {
    this.callPlayer("setMuted", e);
  }
  setLoop(e) {
    this.callPlayer("setLoop", e);
  }
  setPlaybackRate(e) {
    this.callPlayer("setPlaybackRate", e);
  }
  getDuration() {
    return this.duration;
  }
  getCurrentTime() {
    return this.currentTime;
  }
  getSecondsLoaded() {
    return this.secondsLoaded;
  }
  render() {
    const { display: e } = this.props, r = {
      width: "100%",
      height: "100%",
      overflow: "hidden",
      display: e
    };
    return p.default.createElement(
      "div",
      {
        key: this.props.url,
        ref: this.ref,
        style: r
      }
    );
  }
};
i(l, "displayName", "Vimeo");
i(l, "canPlay", S.canPlay.vimeo);
i(l, "forceLoad", true);
var R = sn(y);
var N = P({
  __proto__: null,
  default: R
}, [y]);
export {
  N as V
};
//# sourceMappingURL=292815c2-VIZKXPFC.js.map
