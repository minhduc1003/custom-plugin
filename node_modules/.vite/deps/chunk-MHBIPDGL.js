import {
  T
} from "./chunk-X2WK2QYD.js";
import {
  m
} from "./chunk-CVL2DCJG.js";
import {
  o
} from "./chunk-MZOHA253.js";
import {
  BXe,
  Vr,
  d,
  de,
  h4,
  o2,
  qa2,
  zf
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/5ce38ef7.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var {
  RangePicker: C
} = qa2;
var y = de((e) => d(C, {
  ...e
}))`
  width: 100%;
  ${(e) => e.$style && T(e.$style)}
`;
var I = de(h4)`
  width: 100%; 
  margin: 10px 0px;
  .ant-select-selector {
    font-size: 14px;
    line-height: 1.5;
  }
`;
var R = import_react.default.lazy(() => import("./4fe456d5-GCZANUXO.js").then((e) => ({
  default: e.TimeRangeMobileUIView
})));
var V = (e) => {
  const n = (0, import_react.useContext)(Vr);
  let l;
  return Array.isArray(e.placeholder) ? l = e.placeholder : l = [e.placeholder || "Start Date", e.placeholder || "End Date"], m(d(R, {
    ...e
  }), d(y, {
    ...o2.omit(e, "onChange"),
    value: [e.start, e.end],
    order: true,
    hideDisabledOptions: true,
    onCalendarChange: (t) => {
      e.onChange(t == null ? void 0 : t[0], t == null ? void 0 : t[1]);
    },
    inputReadOnly: zf(n == null ? void 0 : n.getAppSettings().maxWidth),
    suffixIcon: BXe(e.suffixIcon) && e.suffixIcon,
    placeholder: l,
    renderExtraFooter: () => e.timeZone === "UserChoice" && d(I, {
      placeholder: "Select Time Zone",
      options: o.filter((t) => t.value !== "UserChoice"),
      defaultValue: "Etc/UTC",
      onChange: e.handleTimeRangeZoneChange
    })
  }));
};

export {
  V
};
//# sourceMappingURL=chunk-MHBIPDGL.js.map
