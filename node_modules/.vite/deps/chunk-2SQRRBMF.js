import {
  L,
  N,
  O,
  j,
  k
} from "./chunk-UCKZF5HB.js";
import {
  de
} from "./chunk-ARF62KDN.js";
import {
  c,
  h
} from "./chunk-5NYYS2XH.js";
import {
  BXe,
  E7,
  Fj1,
  GK1,
  H0,
  H3,
  N as N2,
  N11,
  QU1,
  RQe,
  T2,
  VS,
  Vr,
  Yg,
  ZK1,
  _,
  b0,
  d,
  de as de2,
  kU1,
  ka,
  nc,
  p1,
  qC,
  vo,
  zW1,
  zte
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/317cb09e.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var L2 = (e) => T2`
    &.ant-segmented:not(.ant-segmented-disabled) {
      &,
      .ant-segmented-item-selected,
      .ant-segmented-thumb,
      .ant-segmented-item:hover,
      .ant-segmented-item:focus {
        color: ${e.text};
        border-radius: ${e.radius};
      }
      .ant-segmented-item {
        padding: ${e.padding};
      }
      .ant-segmented-item-selected,
      .ant-segmented-thumb {
        background-color: ${e.indicatorBackground};
      }
    }

    &.ant-segmented,
    .ant-segmented-item-selected {
      border-radius: ${e.radius};
    }
    &.ant-segmented, .ant-segmented-item-label {
      font-family:${e.fontFamily};
      font-style:${e.fontStyle};
      font-size:${e.textSize};
      font-weight:${e.textWeight};
      text-transform:${e.textTransform};
      text-decoration:${e.textDecoration};
    }
  `;
var T = de2(Yg)`
  width: 100%;
  min-height: 24px; // keep the height unchanged when there are no options
  ${(e) => e.$style && L2(e.$style)}
`;
var Z = {
  defaultValue: QU1("value"),
  value: QU1("value"),
  label: GK1,
  disabled: H3,
  onEvent: N11,
  options: kU1,
  style: nc(zW1, "style"),
  animationStyle: nc(Fj1, "animationStyle"),
  viewRef: ZK1,
  ...L,
  ...c
};
var r = function() {
  return new VS(Z, (e) => {
    const [c2, f] = O(e);
    return e.label({
      required: e.required,
      style: e.style,
      animationStyle: e.animationStyle,
      children: d(T, {
        ref: e.viewRef,
        block: true,
        disabled: e.disabled,
        value: e.value.value,
        $style: e.style,
        onChange: (t) => {
          f(String(t));
        },
        options: e.options.filter((t) => t.value !== void 0 && !t.hidden).map((t) => ({
          label: t.label,
          value: t.value,
          disabled: t.disabled,
          icon: BXe(t.prefixIcon) && t.prefixIcon
        }))
      }),
      ...c2
    });
  }).setPropertyViewFn((e) => N2(p1, {
    children: [N2(ka, {
      name: b0.basic,
      children: [e.options.propertyView({}), e.defaultValue.propertyView({
        label: _("prop.defaultValue")
      })]
    }), ["logic", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && N2(p1, {
      children: [d(k, {
        ...e
      }), d(h, {
        ...e
      }), N2(ka, {
        name: b0.interaction,
        children: [e.onEvent.getPropertyView(), qC(e), E7(e)]
      })]
    }), ["layout", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && e.label.getPropertyView(), ["layout", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && N2(p1, {
      children: [d(ka, {
        name: b0.style,
        children: e.style.getPropertyView()
      }), d(ka, {
        name: b0.animationStyle,
        hasTooltip: true,
        children: e.animationStyle.getPropertyView()
      })]
    })]
  })).setExposeMethodConfigs(N).build();
}();
r = zte(r, de);
var Y = H0(r, [new vo("value", _("selectInput.valueDesc")), j, ...RQe]);

export {
  Y
};
//# sourceMappingURL=chunk-2SQRRBMF.js.map
