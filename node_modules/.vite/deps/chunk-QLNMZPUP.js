import {
  x
} from "./chunk-Z2KNLIQY.js";
import {
  ne
} from "./chunk-N55PIOUB.js";
import {
  Cf2,
  Gg2,
  KRe,
  M2,
  N,
  OB1,
  _,
  d,
  de,
  lZn,
  nn,
  o2,
  p1,
  t2,
  vKn,
  vf2,
  xP1
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/82a4bca8.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
nn.extend(vKn);
var N2 = de(vf2)`
  transform: rotate(180deg);
`;
var O = de(Cf2)`
  transform: rotate(180deg);
`;
var $ = de(KRe)`
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  padding: 0;
  padding-left: 11px;
  .ant-picker-input {
    height: 100%;
  }
  input {
    padding-right: 18px;
    cursor: pointer;
  }
  &.ant-picker-focused .ant-picker-suffix svg g {
    stroke: ${(e) => e.$open && "#315EFB"};
  }
  .ant-picker-suffix {
    height: calc(100% - 1px);
    position: absolute;
    right: 0;
    top: 0.5px;
    display: flex;
    align-items: center;
    // background: #fff;
    padding: 0 3px;
    // border-left: 1px solid #d7d9e0;
  }
`;
var j = de.div`
  .ant-picker-header {
    padding: 0 12px;
    .ant-picker-header-super-prev-btn,
    .ant-picker-header-prev-btn,
    .ant-picker-header-next-btn,
    .ant-picker-header-super-next-btn {
      display: flex;
      align-items: center;
      justify-content: center;
      svg {
        max-width: 12px;
        max-height: 12px;
      }
      &:hover svg g {
        fill: #315efb;
      }
    }
  }
  .ant-picker-date-panel .ant-picker-body {
    padding: 8px 16px;
  }
  .ant-picker-ranges {
    padding: 10px 16px;
  }
  .ant-picker-now-btn {
    color: #4965f2;
    &:hover {
      color: #315efb;
    }
  }
  .ant-picker-cell {
    color: #b8b9bf;
  }
  .ant-picker-cell-in-view {
    color: rgba(0, 0, 0, 0.85);
  }
  .ant-picker-cell-in-view.ant-picker-cell-selected .ant-picker-cell-inner,
  .ant-picker-ok .ant-btn-primary {
    background: #4965f2;
    border: none;
    box-shadow: none;
    &:hover {
      background: #315efb;
      border: none;
      box-shadow: none;
    }
  }
  .ant-picker-cell:hover:not(.ant-picker-cell-in-view) .ant-picker-cell-inner,
  .ant-picker-cell:hover:not(.ant-picker-cell-selected):not(.ant-picker-cell-range-start):not(.ant-picker-cell-range-end):not(.ant-picker-cell-range-hover-start):not(.ant-picker-cell-range-hover-end)
    .ant-picker-cell-inner {
    background-color: #f2f7fc;
    color: #4965f2;
  }
  .ant-picker-year-panel,
  .ant-picker-month-panel {
    & + div .ant-picker-now {
      display: none;
    }
  }
`;
var B = de.div`
  background: transparent !important;
`;
function d2(e, i) {
  let t = nn(e);
  return o2.isNumber(Number(e)) && e !== "" && (t = nn(Number(e))), t.isValid() || (t = nn.utc(e).local()), t.isValid() ? t.format(i) : "";
}
var M = {
  text: M2,
  format: t2(M2, xP1)
};
var u = (e) => e.text;
var A = (e) => {
  const i = (0, import_react.useRef)(), [t, k] = (0, import_react.useState)(true);
  let l = nn(e.value, lZn);
  l.isValid() || (l = nn(0, lZn));
  const [m, x2] = (0, import_react.useState)(l);
  return (0, import_react.useEffect)(() => {
    const n = e.value ? nn(e.value, lZn) : null;
    x2(n);
  }, [e.value]), d(B, {
    onKeyDown: (n) => {
      n.key === "Enter" && !t && e.onChangeEnd();
    },
    onMouseDown: (n) => {
      n.stopPropagation(), n.preventDefault();
    },
    children: d($, {
      ref: i,
      $open: t,
      suffixIcon: d(Gg2, {}),
      prevIcon: d(vf2, {}),
      nextIcon: d(N2, {}),
      superNextIcon: d(O, {}),
      superPrevIcon: d(Cf2, {}),
      allowClear: true,
      variant: "borderless",
      autoFocus: true,
      value: m,
      showTime: e.showTime,
      showNow: true,
      defaultOpen: true,
      panelRender: (n) => d(j, {
        children: n
      }),
      popupStyle: {
        borderRadius: "8px",
        boxShadow: "0 0 10px 0 rgba(0,0,0,0.10)",
        overflow: "hidden"
      },
      onOpenChange: (n) => k(n),
      onChange: (n, b) => {
        e.onChange(b);
      },
      onBlur: () => e.onChangeEnd()
    })
  });
};
var z = function() {
  return new ne(M, (e, i) => {
    const t = e.changeValue ?? u(e);
    return d2(t, e.format);
  }, (e) => d2(e.text.value, e.format.value), u).setEditViewFn((e) => d(A, {
    value: e.value,
    onChange: e.onChange,
    onChangeEnd: e.onChangeEnd,
    showTime: false
  })).setPropertyViewFn((e) => N(p1, {
    children: [e.text.propertyView({
      label: _("table.columnValue"),
      tooltip: x
    }), OB1({
      children: e,
      placeholder: xP1
    })]
  })).build();
}();

export {
  d2 as d,
  A,
  z
};
//# sourceMappingURL=chunk-QLNMZPUP.js.map
