import {
  p,
  s,
  u
} from "./chunk-PRYZUG74.js";
import {
  e,
  l
} from "./chunk-FDUHEGUX.js";
import {
  E3,
  E7,
  H3,
  M2,
  N,
  VI,
  Vr,
  W4,
  WKe,
  _,
  ca,
  d,
  d3,
  da,
  g2,
  hQe,
  hc,
  mQe,
  nee,
  o2,
  p1,
  t2,
  u3
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/432d6870.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var T = Object.defineProperty;
var I = (e2, t, a) => t in e2 ? T(e2, t, { enumerable: true, configurable: true, writable: true, value: a }) : e2[t] = a;
var g = (e2, t, a) => (I(e2, typeof t != "symbol" ? t + "" : t, a), a);
function Z(e2) {
  return !!e2.propertyView;
}
function z(e2) {
  class t extends e2 {
    constructor() {
      super(...arguments);
      g(this, "dataIndex", W4());
    }
    getDataIndex() {
      return this.dataIndex;
    }
  }
  return t;
}
function H(e2, t) {
  if (!e2 || e2.length <= 0)
    return e2;
  const a = [];
  return e2.reduce((p2, o) => {
    const s2 = o[t];
    return p2.has(s2) || a.push(o), p2.add(s2), p2;
  }, /* @__PURE__ */ new Set()), a;
}
function Q(e2, t) {
  const a = E3(z(e2)), p2 = new g2({
    manual: a
  }, (s2) => {
    const i = s2.manual.map((r) => r.getView());
    return t.uniqField ? H(i, t.uniqField) : i;
  }).setPropertyViewFn(() => {
    throw new Error("Method not implemented.");
  }).build();
  class o extends p2 {
    exposingNode() {
      return hc(d3(o2.mapValues(this.children.manual.children, (i) => d3(o2.mapValues(i.children, (r) => r.exposingNode())))), (i) => Object.values(i));
    }
    getNewId() {
      const {
        autoIncField: i
      } = t;
      if (!i)
        return 0;
      const r = this.children.manual.getView().map((n) => n.getView()), d2 = new Set(r.map((n) => n[i]));
      let u2 = 0;
      for (; d2.has(u2); )
        ++u2;
      return u2;
    }
    propertyView(i) {
      const r = this.children.manual, {
        autoIncField: d2
      } = t, u2 = i.title ?? _("tour.section1Subtitle");
      return u3({
        filterText: u2
      }, d(WKe, {
        itemTitle: (n) => n.children.title.getView(),
        popoverTitle: () => _("edit"),
        content: (n) => Z(n) ? n.propertyView({}) : n.getPropertyView(),
        items: r.getView(),
        onAdd: () => {
          const n = VI(i.newOptionLabel || _("optionsControl.option") + " ", r.getView().map((w) => w.children.title.getView())), c = this.getNewId();
          r.dispatch(r.pushAction({
            label: n,
            ...d2 ? {
              [d2]: c
            } : {}
          }));
        },
        onDel: (n) => r.dispatch(r.deleteAction(n)),
        onCopy: (n) => {
          const c = this.getNewId();
          r.dispatch(r.pushAction({
            ...n.toJsonValue(),
            ...d2 ? {
              [d2]: c
            } : {}
          }));
        },
        onMove: (n, c) => {
          const w = r.arrayMoveAction(n, c);
          r.dispatch(w);
        },
        dataIndex: (n) => n.getDataIndex(),
        uniqVal: t.uniqField && ((n) => n.children[t.uniqField].getView()),
        title: u2
      }));
    }
  }
  return t.initOptions ? t2(o, {
    manual: t.initOptions
  }) : o;
}
function _2(e2, t) {
  const a = new g2({
    manual: Q(e2, {
      initOptions: t.initOptions
    })
  }, (p2) => p2.manual).setPropertyViewFn(() => {
    throw new Error("Method not implemented.");
  }).build();
  return class extends a {
    exposingNode() {
      return this.children.manual.exposingNode();
    }
    propertyView(p2) {
      const o = this.children.manual.propertyView(p2);
      return u3({
        searchChild: true
      }, d(p1, {
        children: o
      }));
    }
  };
}
function $(e2, t) {
  return class extends et(e2, t) {
    getView() {
      return this.value;
    }
  };
}
function tt(e2) {
  const {
    options: t,
    onChange: a,
    value: p2,
    ...o
  } = e2, [s2, i] = (0, import_react.useState)(typeof t == "function" ? [] : t), r = (0, import_react.useContext)(Vr);
  return (0, import_react.useEffect)(() => {
    if (typeof t != "function") {
      i(t);
      return;
    }
    s2 != null && s2.length || i(t(r));
  }, [s2.length, t]), d(da, {
    placement: o.placement,
    toolTip: o.tooltip,
    value: p2,
    options: s2,
    radioButton: o.radioButton,
    border: o.border,
    type: o.type,
    label: o.label,
    showSearch: true,
    onChange: a,
    disabled: o.disabled,
    dropdownStyle: e2.dropdownStyle,
    labelStyle: e2.labelStyle
  });
}
function et(e2, t) {
  class a extends nee {
    getDefaultValue() {
      return t;
    }
    propertyView(o) {
      return u3({
        filterText: o.label
      }, d(tt, {
        ...o,
        value: this.value,
        options: e2,
        onChange: (s2) => {
          var i;
          o.disableDispatchValueChange || this.dispatchChangeValueAction(s2), (i = o.onChange) == null || i.call(o, s2);
        }
      }));
    }
    getPropertyView() {
      throw new Error("Method not implemented.");
    }
  }
  return a;
}
var b = new g2({
  target: $((e2) => Object.values(e2.getAllUICompMap()).map((t) => ({
    label: t.children.name.getView(),
    value: t.children.name.getView()
  })), ""),
  arrow: mQe,
  title: M2,
  description: M2,
  placement: ca(l, ""),
  hidden: H3,
  mask: hQe,
  cover: M2,
  type: ca(e, "")
}, (e2) => e2).build();
b = class extends b {
  propertyView(e2) {
    return N(p1, {
      children: [this.children.title.propertyView({
        label: _("tour.options.title.label"),
        placeholder: _("tour.options.title.placeholder"),
        tooltip: _("tour.options.title.tooltip")
      }), this.children.description.propertyView({
        label: _("tour.options.description.label"),
        placeholder: _("tour.options.description.placeholder"),
        tooltip: _("tour.options.description.tooltip")
      }), this.children.target.propertyView({
        label: _("tour.options.target.label"),
        tooltip: _("tour.options.target.tooltip"),
        radioButton: false
      }), this.children.placement.propertyView({
        label: _("tour.placement.label"),
        tooltip: s,
        radioButton: false
      }), this.children.arrow.propertyView({
        label: _("tour.options.arrow.label"),
        tooltip: u
      }), this.children.cover.propertyView({
        label: _("tour.options.coverImage.label"),
        tooltip: _("tour.options.coverImage.tooltip")
      }), this.children.mask.propertyView({
        label: _("tour.options.mask.label"),
        tooltip: p
      }), this.children.type.propertyView({
        label: _("tour.options.type.label"),
        tooltip: _("tour.options.type.tooltip")
      }), E7(this.children)]
    });
  }
};
var st = _2(b, {
  initOptions: [{
    title: "Welcome",
    description: "Welcome to lowcoder"
  }, {
    title: "Step 2",
    description: "This is a tutorial step"
  }]
});

export {
  Q,
  _2 as _,
  $,
  et,
  st
};
//# sourceMappingURL=chunk-I47HBJ3V.js.map
