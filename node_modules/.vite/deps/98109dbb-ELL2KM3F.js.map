{
  "version": 3,
  "sources": ["../../lowcoder-sdk/dist/98109dbb.js"],
  "sourcesContent": ["import { Q as o } from \"./c988e26e.js\";\nimport \"react\";\nimport \"react-dom\";\ntest(\"object create\", () => {\n  new o({\n    value: {\n      compType: \"js\"\n    }\n  });\n});\ntest(\"onSuccess/onFail => onEvent\", () => {\n  let e = new o({\n    value: {\n      compType: \"js\",\n      onSuccess: [{\n        name: \"after\",\n        handler: {\n          compType: \"empty\",\n          comp: {},\n          condition: \"\",\n          slowdown: \"debounce\",\n          delay: \"\"\n        }\n      }],\n      onFail: [{\n        name: \"after\",\n        handler: {\n          compType: \"empty\",\n          comp: {},\n          condition: \"\",\n          slowdown: \"debounce\",\n          delay: \"\"\n        }\n      }]\n    }\n  });\n  expect(e.children.onEvent.toJsonValue().length).toEqual(2), expect(e.children.onEvent.toJsonValue()[0].name).toEqual(\"success\"), expect(e.children.onEvent.toJsonValue()[1].name).toEqual(\"fail\"), expect(e.children.onEvent.toJsonValue().onSuccess).toEqual(void 0), expect(e.children.onEvent.toJsonValue().onFail).toEqual(void 0);\n});\ntest(\"add notification for old query\", () => {\n  let e = new o({\n    value: {\n      compType: \"js\"\n    }\n  });\n  expect(e.children.notification.toJsonValue().showSuccess).toEqual(!0), expect(e.children.notification.toJsonValue().showFail).toEqual(!0), e = new o({\n    value: {\n      compType: \"js\",\n      onEvent: []\n    }\n  }), expect(e.children.notification.toJsonValue().showSuccess).toEqual(!1), expect(e.children.notification.toJsonValue().showFail).toEqual(!1), e = new o({\n    value: {\n      compType: \"js\",\n      notification: {\n        showSuccess: !0,\n        success: {\n          text: \"\"\n        },\n        showFail: !0,\n        fail: [{\n          text: \"\",\n          condition: \"\"\n        }],\n        duration: \"\"\n      }\n    }\n  }), expect(e.children.notification.toJsonValue().showSuccess).toEqual(!0), expect(e.children.notification.toJsonValue().showFail).toEqual(!0);\n});\n"],
  "mappings": ";;;;;;;;;;;;;;AACA,mBAAO;AACP,uBAAO;AACP,KAAK,iBAAiB,MAAM;AAC1B,MAAI,IAAE;AAAA,IACJ,OAAO;AAAA,MACL,UAAU;AAAA,IACZ;AAAA,EACF,CAAC;AACH,CAAC;AACD,KAAK,+BAA+B,MAAM;AACxC,MAAI,IAAI,IAAI,IAAE;AAAA,IACZ,OAAO;AAAA,MACL,UAAU;AAAA,MACV,WAAW,CAAC;AAAA,QACV,MAAM;AAAA,QACN,SAAS;AAAA,UACP,UAAU;AAAA,UACV,MAAM,CAAC;AAAA,UACP,WAAW;AAAA,UACX,UAAU;AAAA,UACV,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AAAA,MACD,QAAQ,CAAC;AAAA,QACP,MAAM;AAAA,QACN,SAAS;AAAA,UACP,UAAU;AAAA,UACV,MAAM,CAAC;AAAA,UACP,WAAW;AAAA,UACX,UAAU;AAAA,UACV,OAAO;AAAA,QACT;AAAA,MACF,CAAC;AAAA,IACH;AAAA,EACF,CAAC;AACD,SAAO,EAAE,SAAS,QAAQ,YAAY,EAAE,MAAM,EAAE,QAAQ,CAAC,GAAG,OAAO,EAAE,SAAS,QAAQ,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,SAAS,GAAG,OAAO,EAAE,SAAS,QAAQ,YAAY,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,MAAM,GAAG,OAAO,EAAE,SAAS,QAAQ,YAAY,EAAE,SAAS,EAAE,QAAQ,MAAM,GAAG,OAAO,EAAE,SAAS,QAAQ,YAAY,EAAE,MAAM,EAAE,QAAQ,MAAM;AACvU,CAAC;AACD,KAAK,kCAAkC,MAAM;AAC3C,MAAI,IAAI,IAAI,IAAE;AAAA,IACZ,OAAO;AAAA,MACL,UAAU;AAAA,IACZ;AAAA,EACF,CAAC;AACD,SAAO,EAAE,SAAS,aAAa,YAAY,EAAE,WAAW,EAAE,QAAQ,IAAE,GAAG,OAAO,EAAE,SAAS,aAAa,YAAY,EAAE,QAAQ,EAAE,QAAQ,IAAE,GAAG,IAAI,IAAI,IAAE;AAAA,IACnJ,OAAO;AAAA,MACL,UAAU;AAAA,MACV,SAAS,CAAC;AAAA,IACZ;AAAA,EACF,CAAC,GAAG,OAAO,EAAE,SAAS,aAAa,YAAY,EAAE,WAAW,EAAE,QAAQ,KAAE,GAAG,OAAO,EAAE,SAAS,aAAa,YAAY,EAAE,QAAQ,EAAE,QAAQ,KAAE,GAAG,IAAI,IAAI,IAAE;AAAA,IACvJ,OAAO;AAAA,MACL,UAAU;AAAA,MACV,cAAc;AAAA,QACZ,aAAa;AAAA,QACb,SAAS;AAAA,UACP,MAAM;AAAA,QACR;AAAA,QACA,UAAU;AAAA,QACV,MAAM,CAAC;AAAA,UACL,MAAM;AAAA,UACN,WAAW;AAAA,QACb,CAAC;AAAA,QACD,UAAU;AAAA,MACZ;AAAA,IACF;AAAA,EACF,CAAC,GAAG,OAAO,EAAE,SAAS,aAAa,YAAY,EAAE,WAAW,EAAE,QAAQ,IAAE,GAAG,OAAO,EAAE,SAAS,aAAa,YAAY,EAAE,QAAQ,EAAE,QAAQ,IAAE;AAC9I,CAAC;",
  "names": []
}
