import {
  Hs,
  Zs
} from "./chunk-L63JEYDN.js";
import {
  Q,
  ne
} from "./chunk-N55PIOUB.js";
import {
  M2,
  N,
  _,
  aOe,
  bQe,
  d,
  j4,
  p1,
  yl,
  zc
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/ad2208e2.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var j = _("table.columnValueTooltip");
var f = ["none", "success", "error", "default", "warning", "processing"];
var k = {
  text: M2,
  status: bQe(f, "none")
};
var g = (t) => ({
  value: t.text,
  status: t.status
});
var v = (t) => {
  const a = (0, import_react.useContext)(Q), [o, r] = (0, import_react.useState)(a), [u, c] = (0, import_react.useState)(f), [h, i] = (0, import_react.useState)(false);
  return d(Zs, {
    children: d(j4, {
      autoFocus: true,
      defaultOpen: true,
      variant: "borderless",
      optionLabelProp: "children",
      open: h,
      defaultValue: t.value.value,
      style: {
        width: "100%"
      },
      suffixIcon: d(yl, {}),
      showSearch: true,
      onSearch: (e) => {
        var s;
        a.findIndex((l) => l.text.includes(e)) < 0 ? r([...a, {
          text: e,
          status: "none"
        }]) : r(a), t.onChange({
          value: e,
          status: ((s = o.find((l) => l.text === e)) == null ? void 0 : s.status) || "none"
        });
      },
      onChange: (e) => {
        var s;
        t.onChange({
          value: e,
          status: ((s = o.find((l) => l.text === e)) == null ? void 0 : s.status) || "none"
        }), i(false);
      },
      dropdownRender: (e) => d(Hs, {
        children: d(zc, {
          style: {
            maxHeight: "256px"
          },
          children: e
        })
      }),
      dropdownStyle: {
        marginTop: "7px",
        padding: "8px 0 6px 0"
      },
      onBlur: () => {
        t.onChangeEnd(), i(false);
      },
      onFocus: () => {
        i(true);
      },
      onClick: () => i(!h),
      children: u.map((e, s) => d(j4.Option, {
        value: e,
        children: e === "none" ? e : d(aOe, {
          status: e,
          text: e
        })
      }, s))
    })
  });
};
var M = function() {
  return new ne(k, (t, a) => {
    var u, c;
    const o = ((u = t.changeValue) == null ? void 0 : u.value) ?? g(t).value, r = ((c = t.changeValue) == null ? void 0 : c.status) ?? g(t).status;
    return r === "none" ? o : d(aOe, {
      status: r,
      text: o
    });
  }, (t) => [t.status.value, t.text.value].filter((a) => a).join(" "), g).setEditViewFn((t) => d(v, {
    value: t.value,
    onChange: t.onChange,
    onChangeEnd: t.onChangeEnd
  })).setPropertyViewFn((t) => N(p1, {
    children: [t.text.propertyView({
      label: _("table.columnValue"),
      tooltip: j
    }), t.status.propertyView({
      label: _("table.status"),
      tooltip: _("table.statusTooltip")
    })]
  })).build();
}();

export {
  j,
  f,
  M
};
//# sourceMappingURL=chunk-WXT6MRKI.js.map
