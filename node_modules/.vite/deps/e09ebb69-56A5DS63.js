import {
  $9,
  C5,
  E7,
  H0,
  M2,
  Mg,
  Mo,
  N,
  R9,
  U8,
  VS,
  Vr,
  Xx,
  _,
  ao,
  b0,
  ca,
  d,
  de,
  eu,
  g2,
  ka,
  m11,
  nc,
  o7t,
  om,
  p1,
  rW1,
  s2e,
  t2,
  tW1,
  vc,
  vo,
  ya,
  z3
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/e09ebb69.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var g = ["#fde68a", "#eecff3", "#a7f3d0", "#bfdbfe", "#bfdbfe", "#c7d2fe", "#fecaca", "#fcd6bb"];
var j = de.div`
  height: 100%;
  width: 100%;
  display: flex;
  align-items: center;
  justify-content: ${(a) => a.alignment};
  cursor: pointer;
  background: ${(a) => {
  var t;
  return (t = a == null ? void 0 : a.$style) == null ? void 0 : t.background;
}};
  margin: ${(a) => {
  var t;
  return (t = a == null ? void 0 : a.$style) == null ? void 0 : t.margin;
}};
  padding: ${(a) => {
  var t;
  return (t = a == null ? void 0 : a.$style) == null ? void 0 : t.padding;
}};
  border: ${(a) => {
  var t;
  return (t = a == null ? void 0 : a.$style) == null ? void 0 : t.border;
}};
  border-style: ${(a) => {
  var t;
  return (t = a == null ? void 0 : a.$style) == null ? void 0 : t.borderStyle;
}};
  border-radius: ${(a) => {
  var t;
  return (t = a == null ? void 0 : a.$style) == null ? void 0 : t.radius;
}};
  border-width: ${(a) => {
  var t;
  return (t = a == null ? void 0 : a.$style) == null ? void 0 : t.borderWidth;
}};
`;
var D = new g2({
  src: M2,
  AvatarIcon: C5,
  label: M2,
  color: Mg,
  backgroundColor: Mg,
  Tooltip: M2
}, (a) => a).setPropertyViewFn((a) => N(p1, {
  children: [a.src.propertyView({
    label: _("avatarComp.src"),
    placeholder: "",
    tooltip: _("avatarComp.avatarCompTooltip")
  }), a.label.propertyView({
    label: _("avatarComp.title"),
    tooltip: _("avatarComp.avatarCompTooltip")
  }), a.AvatarIcon.propertyView({
    label: _("avatarComp.icon"),
    IconType: "All",
    tooltip: _("avatarComp.avatarCompTooltip")
  }), a.color.propertyView({
    label: _("style.fill")
  }), a.backgroundColor.propertyView({
    label: _("style.background")
  }), a.Tooltip.propertyView({
    label: _("badge.tooltip")
  })]
})).build();
var L = [eu, m11];
var H = [{
  label: d($9, {}),
  value: "flex-start"
}, {
  label: d(Xx, {}),
  value: "center"
}, {
  label: d(R9, {}),
  value: "flex-end"
}];
var q = {
  avatar: nc(rW1, "avatar"),
  style: nc(tW1, "style"),
  maxCount: t2(vc, 3),
  avatarSize: t2(vc, 40),
  alignment: ca(H, "center"),
  autoColor: ao.DEFAULT_TRUE,
  onEvent: ya(L),
  currentAvatar: z3({}),
  avatars: om(D, {
    initOptions: [{
      src: "https://api.dicebear.com/7.x/miniavs/svg?seed=1",
      label: String.fromCharCode(65 + Math.ceil(Math.random() * 25))
    }, {
      AvatarIcon: "/icon:antd/startwotone"
    }, {
      label: String.fromCharCode(65 + Math.ceil(Math.random() * 25))
    }, {
      label: String.fromCharCode(65 + Math.ceil(Math.random() * 25))
    }]
  })
};
var W = (a) => d(j, {
  $style: a.style,
  alignment: a.alignment,
  children: d(o7t.Group, {
    maxCount: a.maxCount,
    size: a.avatarSize,
    children: a.avatars.map((t, f) => {
      var d2;
      return d(Mo, {
        title: t.Tooltip,
        children: d(o7t, {
          src: t.src ?? void 0,
          icon: ((d2 = t.AvatarIcon) == null ? void 0 : d2.props.value) === "" || t.label.trim() !== "" ? void 0 : t.AvatarIcon,
          style: {
            color: t.color ? t.color : a.avatar.fill !== "#FFFFFF" ? a.avatar.fill : "#FFFFFF",
            backgroundColor: t.backgroundColor ? t.backgroundColor : a.autoColor ? g[f % g.length] : a.avatar.background
          },
          size: a.avatarSize,
          onClick: () => {
            a.onEvent("click"), a.dispatch(U8("currentAvatar", t, false));
          },
          children: t.label
        })
      });
    })
  })
});
var X = function() {
  return new VS(q, (a, t) => d(W, {
    ...a,
    dispatch: t
  })).setPropertyViewFn((a) => N(p1, {
    children: [["logic", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && N(p1, {
      children: [N(ka, {
        name: b0.basic,
        children: [a.avatars.propertyView({}), a.maxCount.propertyView({
          label: _("avatarGroup.maxCount")
        }), a.avatarSize.propertyView({
          label: _("avatarGroup.avatarSize")
        }), a.autoColor.propertyView({
          label: _("avatarGroup.autoColor")
        }), a.alignment.propertyView({
          label: _("avatarGroup.alignment"),
          radioButton: true
        })]
      }), N(ka, {
        name: b0.interaction,
        children: [E7(a), a.onEvent.propertyView()]
      })]
    }), ["layout", "both"].includes((0, import_react.useContext)(Vr).editorModeStatus) && N(p1, {
      children: [d(ka, {
        name: b0.avatarStyle,
        children: a.avatar.getPropertyView()
      }), d(ka, {
        name: b0.style,
        children: a.style.getPropertyView()
      })]
    })]
  })).build();
}();
var J = H0(X, [new vo("currentAvatar", _("avatarGroup.currentAvatar")), s2e]);
export {
  J as AvatarGroupComp,
  H as alignOptions
};
//# sourceMappingURL=e09ebb69-56A5DS63.js.map
