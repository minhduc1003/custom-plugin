import {
  h as h2,
  i
} from "./chunk-XDW5KDN5.js";
import {
  L,
  j
} from "./chunk-UCKZF5HB.js";
import {
  c,
  h
} from "./chunk-5NYYS2XH.js";
import {
  $S,
  H3,
  N,
  RQe,
  _,
  ao,
  d,
  ka,
  m6e,
  nl,
  oq1,
  p1,
  vo
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/58025b46.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
function u(e, t) {
  return nl(e, ["string", "number"], t);
}
function f(e, t) {
  return nl(e, ["array", "undefined"], t, (a, o) => (nl(a, ["object"], o), nl(a.label, ["string"], "label"), u(a.value, "value"), nl(a.disabled, ["boolean", "undefined"], "disabled"), nl(a.selectable, ["boolean", "undefined"], "selectable"), nl(a.checkable, ["boolean", "undefined"], "checkable"), nl(a.disableCheckbox, ["boolean", "undefined"], "disableCheckbox"), nl(a.isLeaf, ["boolean", "undefined"], "isLeaf"), f(a.children, "children"), a));
}
function E(e) {
  return e === "" ? [] : f(e) ?? [];
}
function s(e) {
  return e === "" ? [] : nl(e, ["array"], void 0, u);
}
function p(e, t) {
  if (e) {
    for (const a of e)
      if (t(a) === false || !p(a.children, t))
        return false;
  }
  return true;
}
function N2(e) {
  const t = [];
  return p(e, (a) => {
    a.children && a.children.length > 0 && t.push(a.value);
  }), t;
}
var B = {
  // TODO: support loading mode
  treeData: $S(E, h2),
  defaultValue: oq1("value", s, []),
  value: oq1("value", s, []),
  expanded: m6e(s, []),
  defaultExpandAll: ao,
  showLine: ao,
  showLeafIcon: ao,
  disabled: H3,
  ...L,
  ...c
};
function G(e) {
  const {
    treeData: t,
    expanded: a,
    defaultExpandAll: o
  } = e;
  (0, import_react.useEffect)(() => {
    o ? a.onChange(N2(t)) : a.reset();
  }, [o, t]);
}
var O = (e) => e.treeData.propertyView({
  label: _("tree.treeData"),
  tooltip: i
});
var U = (e) => e.defaultValue.propertyView({
  label: _("tree.value")
});
var Y = (e) => d(h, {
  ...e
});
var q = (e, t) => N(ka, {
  name: _("prop.expand"),
  children: [e.expanded.propertyView({
    label: _("tree.expanded")
  }), e.defaultExpandAll.propertyView({
    label: _("tree.defaultExpandAll")
  }), t]
});
var z = (e, t) => d(p1, {});
var H = [
  // TODO: more data
  new vo("value", _("tree.valueDesc")),
  new vo("treeData", _("tree.treeDataDesc")),
  new vo("expanded", _("tree.expandedDesc")),
  j,
  ...RQe
];

export {
  B,
  G,
  O,
  U,
  Y,
  q,
  z,
  H
};
//# sourceMappingURL=chunk-HFCYJ36P.js.map
