import {
  ne
} from "./chunk-N6GHBDCY.js";
import {
  w
} from "./chunk-AXUQWSIE.js";
import {
  Bn,
  FL,
  JFe,
  M2,
  Mg,
  N,
  QFe,
  U8,
  YFe,
  _,
  d,
  d3,
  de,
  g2,
  h1,
  hc,
  il,
  mJe,
  oV,
  p1,
  s4,
  sFe,
  t2,
  u3,
  zx
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/3e9c3444.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var g = mJe(ne);
var O = {
  cellTooltip: M2,
  // a custom column or a data column
  isCustom: Bn(false),
  // If it is a data column, it must be the name of the column and cannot be duplicated as a react key
  dataIndex: Bn(""),
  render: g,
  align: oV,
  background: t2(Mg, ""),
  margin: t2(FL, ""),
  text: t2(Mg, ""),
  border: t2(Mg, ""),
  radius: t2(FL, ""),
  textSize: t2(FL, ""),
  textWeight: t2(M2, "normal"),
  fontFamily: t2(M2, "sans-serif"),
  fontStyle: t2(M2, "normal"),
  cellColor: M2,
  textOverflow: t2(w, "ellipsis"),
  linkColor: t2(Mg, "#3377ff"),
  linkHoverColor: t2(Mg, ""),
  linkActiveColor: t2(Mg, "")
};
var H = de(sFe)` width: 24px; margin: 0 8px 0 -3px; padding: 3px;`;
var P = de(YFe)` width: 24px; margin: 0 8px 0 -3px; padding: 3px;`;
var f = de(QFe)` width: 24px; margin: 0 8px 0 -3px; padding: 3px;`;
var W = de(JFe)` width: 24px; margin: 0 8px 0 -3px; padding: 3px;`;
var B = new g2(O, (u, o) => ({
  ...u
})).setPropertyViewFn(() => d(p1, {})).build();
var be = class extends B {
  reduce(o) {
    return super.reduce(o);
  }
  getView() {
    const o = super.getView(), i = this.children.render.getSelectedComp().getComp().children.compType.getView();
    return {
      ...o,
      columnType: i
    };
  }
  exposingNode() {
    const o = this.children.dataIndex.exposingNode(), i = hc(this.children.render.node(), (l) => ({
      wrap: l.__comp__.wrap,
      map: h1.mapValues(l.__map__, (a) => a.comp)
    }));
    return d3({
      dataIndex: o,
      render: i
    });
  }
  propertyView(o) {
    var a, x;
    const i = this.children.render.getSelectedComp().getComp().children.compType.getView(), l = this.children.render.getSelectedComp().getComp().toJsonValue();
    return (a = l.comp) != null && a.hasOwnProperty("src") ? l.comp.src : (x = l.comp) != null && x.hasOwnProperty("text") && l.comp.text, N(p1, {
      children: [this.children.cellTooltip.propertyView({
        label: _("table.columnTooltip")
      }), this.children.render.getPropertyView(), this.children.align.propertyView({
        label: _("table.align"),
        radioButton: true
      }), (i === "link" || i === "links") && N(p1, {
        children: [d(zx, {
          style: {
            margin: "12px 0"
          }
        }), u3({}, d("div", {
          children: d("b", {
            children: "Link Style"
          })
        })), this.children.linkColor.propertyView({
          label: _("text")
        }), this.children.linkHoverColor.propertyView({
          label: "Hover text"
        }), this.children.linkActiveColor.propertyView({
          label: "Active text"
        })]
      }), d(zx, {
        style: {
          margin: "12px 0"
        }
      }), u3({}, d("div", {
        children: d("b", {
          children: "Column Style"
        })
      })), this.children.background.propertyView({
        label: _("style.background")
      }), i !== "link" && this.children.text.propertyView({
        label: _("text")
      }), this.children.border.propertyView({
        label: _("style.border")
      }), this.children.radius.propertyView({
        label: _("style.borderRadius"),
        preInputNode: d(H, {
          as: sFe,
          title: ""
        }),
        placeholder: "3px"
      }), this.children.textSize.propertyView({
        label: _("style.textSize"),
        preInputNode: d(P, {
          as: YFe,
          title: ""
        }),
        placeholder: "14px"
      }), this.children.textWeight.propertyView({
        label: _("style.textWeight"),
        preInputNode: d(W, {
          as: JFe,
          title: ""
        }),
        placeholder: "normal"
      }), this.children.fontFamily.propertyView({
        label: _("style.fontFamily"),
        preInputNode: d(f, {
          as: QFe,
          title: ""
        }),
        placeholder: "sans-serif"
      }), this.children.fontStyle.propertyView({
        label: _("style.fontStyle"),
        preInputNode: d(f, {
          as: QFe,
          title: ""
        }),
        placeholder: "normal"
      }), this.children.cellColor.propertyView({
        label: _("table.cellColor")
      })]
    });
  }
  getChangeSet() {
    const o = this.children.dataIndex.getView(), i = h1.mapValues(this.children.render.getMap(), (l) => l.getComp().children.comp.children.changeValue.getView());
    return {
      [o]: i
    };
  }
  dispatchClearChangeSet() {
    this.children.render.dispatch(il(g.forEachAction(s4("comp", s4("comp", U8("changeValue", null, false))))));
  }
  static setSelectionAction(o) {
    return s4("render", g.setSelectionAction(o));
  }
};

export {
  g,
  O,
  be
};
//# sourceMappingURL=chunk-ASSQVYPX.js.map
