import {
  Bn,
  N0,
  PL,
  Qh,
  To,
  _n,
  ia
} from "./chunk-C4ZQG65I.js";
import {
  require_react_dom
} from "./chunk-VGGCA2L5.js";
import {
  require_react
} from "./chunk-73THXJN7.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/lowcoder-sdk/dist/77157443.js
var import_react = __toESM(require_react(), 1);
var import_react_dom = __toESM(require_react_dom(), 1);
var n = {
  isRemote: true,
  source: "npm",
  packageName: "p",
  packageVersion: "v",
  compName: "n"
};
var i = ia(n, async () => Bn(123));
test("remote comp", async () => {
  let e = null;
  e = new i({
    dispatch: (t) => {
      e && (e = e.reduce(t));
    }
  }), expect(e.toJsonValue()).toBe(void 0), await e.load(), expect(e.toJsonValue()).toBe(123), e.dispatchChangeValueAction(345), expect(e.toJsonValue()).toBe(345);
});
test("remote comp keep values", async () => {
  let e = null;
  e = new i({
    dispatch: (t) => {
      e && (e = e.reduce(t));
    },
    value: 456
  }), expect(e.toJsonValue()).toBe(456), await e.load(), expect(e.toJsonValue()).toBe(456);
});
test("remote comp exposing data", async () => {
  const e = ia(n, async () => Qh(To({
    hello: Bn(123)
  }), (a) => ({
    hello: a.children.hello.getView()
  })));
  let t = null;
  t = new e({
    dispatch: (a) => {
      t && (t = t.reduce(a));
    }
  }), await t.load();
  const o = PL(t);
  expect(o.exposingValues.hello).toBe(123);
});
test("remote comp execute method", async () => {
  const e = ia(n, async () => N0(To({
    hello: Bn(123)
  }), [{
    method: {
      name: "add",
      params: [{
        name: "value",
        type: "number"
      }]
    },
    execute: (o, a) => {
      const s = o.children.hello;
      s.dispatchChangeValueAction(s.getView() + a[0]);
    }
  }]));
  let t = null;
  t = new e({
    dispatch: (o) => {
      t && (t = t.reduce(o));
    }
  }), await t.load(), t.reduce(_n({
    type: "execute",
    methodName: "add",
    params: [10]
  }, false)), await new Promise((o) => setTimeout(o, 20)), expect(t.children.hello.getView()).toEqual(133);
});
//# sourceMappingURL=77157443-QECVXALG.js.map
