{
  "version": 3,
  "sources": ["../../lowcoder-sdk/dist/8c25b625.js"],
  "sourcesContent": ["var g = Object.defineProperty;\nvar m = (e, t, c) => t in e ? g(e, t, { enumerable: !0, configurable: !0, writable: !0, value: c }) : e[t] = c;\nvar i = (e, t, c) => (m(e, typeof t != \"symbol\" ? t + \"\" : t, c), c);\nimport { M as u, dr as V, cB as E, cC as q, au as C, J as a, ha as h, dZ as f, dW as X, S as v, w as b, O as w, F as A, v as p } from \"./c988e26e.js\";\nimport \"react\";\nimport \"react-dom\";\nconst l = (e) => /* @__PURE__ */ A(\"div\", {}), d = function() {\n  const e = {\n    v1: p(\"abc\")\n  };\n  return new u(e, (t) => t.v1).setPropertyViewFn(l).build();\n}();\nfunction o(e) {\n  return JSON.stringify(e.toJsonValue());\n}\ntest(\"test object create\", () => {\n  class e {\n    constructor() {\n      i(this, \"a\", 1);\n      i(this, \"b\", \"abc\");\n    }\n    getValue() {\n      return this.a + 10;\n    }\n  }\n  const t = new e();\n  expect(t.a).toEqual(1), expect(t.getValue()).toEqual(11);\n  const c = Object.create(t);\n  c.a = 2, expect(c.a).toEqual(2), expect(c.getValue()).toEqual(12), expect(t.a).toEqual(1), expect(t.getValue()).toEqual(11);\n});\ntest(\"test action and reduce\", () => {\n  let e = new d({});\n  expect(o(e)).toEqual('{\"v1\":\"abc\"}'), e = e.reduce(e.changeChildAction(\"v1\", \"changed\")), expect(o(e)).toEqual('{\"v1\":\"changed\"}'), e = e.reduce(e.changeChildAction(\"v1\", \"changedXXXX\")), expect(o(e)).toEqual('{\"v1\":\"changedXXXX\"}');\n});\ntest(\"test value constructor\", () => {\n  let e = new d({\n    value: {\n      v1: \"changed\"\n    }\n  });\n  expect(o(e)).toEqual('{\"v1\":\"changed\"}');\n});\nconst r = function() {\n  const e = {\n    v1: p(\"abc\"),\n    v2: d\n  };\n  return new u(e, (t) => t).setPropertyViewFn(l).build();\n}();\ntest(\"test multi2 toJson\", () => {\n  let e = new r({});\n  const t = JSON.stringify(e.toJsonValue());\n  expect(t).toEqual('{\"v1\":\"abc\",\"v2\":{\"v1\":\"abc\"}}'), e = e.reduce(V(\"v2\", e.children.v2.changeChildAction(\"v1\", \"changed\"))), expect(o(e)).toEqual('{\"v1\":\"abc\",\"v2\":{\"v1\":\"changed\"}}');\n  let c = new r({\n    value: JSON.parse(o(e))\n  });\n  expect(o(c)).toEqual(o(e));\n});\ntest(\"test multi change action\", () => {\n  let e = new r({});\n  expect(e.getView().v1).toEqual(\"abc\"), expect(e.getView().v2).toEqual(\"abc\");\n  const t = E({\n    v1: q(\"v1_value\", !0),\n    v2: C(\"v1\", \"xxxy\", !0)\n  });\n  e = e.reduce(t), expect(e.getView().v1).toEqual(\"v1_value\"), expect(e.getView().v2).toEqual(\"xxxy\");\n});\nconst x = function() {\n  const e = {\n    v1: p(\"abc\"),\n    v2: r,\n    v3: v\n  };\n  return new u(e, (t) => t.v3).setPropertyViewFn(l).build();\n}();\ntest(\"test multi toNode\", () => {\n  const e = new x({}).node().evaluate();\n  expect(e.v3.value).toEqual(\"\");\n});\ntest(\"test comp don't change if no value change\", () => {\n  let e = new x({});\n  expect(a(e)).toBe(e);\n});\ntest(\"test cache\", () => {\n  let e = a(new x({}));\n  const t = e.children.v1, c = e.children.v2;\n  e = e.reduce(e.changeChildAction(\"v1\", \"XXX\")), expect(e.children.v1.getView()).toEqual(\"XXX\"), expect(e.children.v1).not.toBe(t), expect(e.children.v2).toBe(c), e = a(e), expect(e.node()).toBe(e.node());\n  const n = e.node().evaluate();\n  e = e.reduce(h(n));\n  const s = e.reduce(h(n));\n  expect(s).toBe(e), expect(e.node().evaluate()).toBe(e.node().evaluate()), expect(a(e)).toBe(e);\n});\ntest(\"test code\", () => {\n  const e = function() {\n    const n = {\n      v1: b(v, \"{{a.b}}\")\n    };\n    return new u(n, (s) => s.v1).setPropertyViewFn(l).build();\n  }();\n  let t = new e({});\n  const c = {\n    a: f({\n      b: X(\"abc\")\n    })\n  };\n  t = a(t, c), expect(t.getView()).toEqual(\"abc\");\n});\ntest(\"removeDefault\", () => {\n  const e = function() {\n    const t = {\n      v0: v,\n      v1: b(v, \"{{a.b}}\"),\n      v2: w,\n      v3: w.DEFAULT_TRUE\n    };\n    return new u(t, (c) => c).setPropertyViewFn(l).build();\n  }();\n  expect(a(new e({})).toJsonValue()).toEqual({\n    v1: \"{{a.b}}\",\n    v3: !0\n  }), expect(a(new e({\n    value: {\n      v0: \"\",\n      v1: \"{{a.b}}\",\n      v2: !1,\n      v3: !0\n    }\n  })).toJsonValue()).toEqual({\n    v1: \"{{a.b}}\",\n    v3: !0\n  }), expect(a(new e({\n    value: {\n      v0: \"bc\",\n      v1: \"\",\n      v2: !0,\n      v3: !1\n    }\n  })).toJsonValue()).toEqual({\n    v0: \"bc\",\n    v1: \"\",\n    v2: !0,\n    v3: !1\n  }), expect(a(new e({\n    value: {\n      v0: \"bc\",\n      v1: \"{{a.b}}\",\n      v2: !0,\n      v3: !0\n    }\n  })).toJsonValue()).toEqual({\n    v0: \"bc\",\n    v1: \"{{a.b}}\",\n    v2: !0,\n    v3: !0\n  });\n});\n"],
  "mappings": "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",
  "names": ["d"]
}
